

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 07 12:11:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0580                     __pidataBANK0:
   370                           
   371                           ;initializer for _address
   372  0580  3414               	retlw	20
   373                           
   374                           ;initializer for _sensor
   375  0581  3445               	retlw	69
   376  0019                     _TXREG	set	25
   377  001A                     _RCREG	set	26
   378  000C                     _PIR1bits	set	12
   379  0013                     _SSPBUF	set	19
   380  0014                     _SSPCON	set	20
   381  0007                     _PORTC	set	7
   382  0008                     _PORTD	set	8
   383  0065                     _RCIF	set	101
   384  00C4                     _CREN	set	196
   385  00C7                     _SPEN	set	199
   386  0098                     _TXSTAbits	set	152
   387  0099                     _SPBRG	set	153
   388  0091                     _SSPCON2bits	set	145
   389  0087                     _TRISCbits	set	135
   390  0091                     _SSPCON2	set	145
   391  0094                     _SSPSTAT	set	148
   392  0093                     _SSPADD	set	147
   393  0087                     _TRISC	set	135
   394  0088                     _TRISD	set	136
   395  04C1                     _TRMT	set	1217
   396  04C5                     _TXEN	set	1221
   397  043E                     _TRISC6	set	1086
   398  043F                     _TRISC7	set	1087
   399  04C4                     _SYNC	set	1220
   400  04C2                     _BRGH	set	1218
   401                           
   402                           	psect	cinit
   403  07EF                     start_initialization:	
   404                           ; #config settings
   405                           
   406  07EF                     __initialization:
   407                           
   408                           ; Initialize objects allocated to BANK0
   409  07EF  120A  118A  2580  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   410  07F4  00B6               	movwf	__pdataBANK0& (0+127)
   411  07F5  120A  118A  2581  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   412  07FA  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   413                           
   414                           ; Clear objects allocated to BANK0
   415  07FB  01B8               	clrf	__pbssBANK0& (0+127)
   416  07FC                     end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  07FC                     __end_of__initialization:
   420  07FC  0183               	clrf	3
   421  07FD  120A  118A  2DAE   	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK0
   424  0038                     __pbssBANK0:
   425  0038                     _temp:
   426  0038                     	ds	1
   427                           
   428                           	psect	dataBANK0
   429  0036                     __pdataBANK0:
   430  0036                     _address:
   431  0036                     	ds	1
   432  0037                     _sensor:
   433  0037                     	ds	1
   434                           
   435                           	psect	cstackCOMMON
   436  0070                     __pcstackCOMMON:
   437  0070                     ?_setup:
   438  0070                     ??_setup:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_Write_esp32:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_UART_DATA_Write:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_UART_DATA_Write:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?___lldiv:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?___aldiv:	
   457                           ; 4 bytes @ 0x0
   458                           
   459  0070                     UART_DATA_Write@data:	
   460                           ; 4 bytes @ 0x0
   461                           
   462  0070                     ___lldiv@divisor:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ___aldiv@divisor:	
   466                           ; 4 bytes @ 0x0
   467                           
   468                           
   469                           ; 4 bytes @ 0x0
   470  0070                     	ds	1
   471  0071                     ??_Write_esp32:
   472                           
   473                           ; 1 bytes @ 0x1
   474  0071                     	ds	3
   475  0074                     ___lldiv@dividend:
   476  0074                     ___aldiv@dividend:	
   477                           ; 4 bytes @ 0x4
   478                           
   479                           
   480                           ; 4 bytes @ 0x4
   481  0074                     	ds	4
   482  0078                     ??___lldiv:
   483  0078                     ??___aldiv:	
   484                           ; 1 bytes @ 0x8
   485                           
   486                           
   487                           ; 1 bytes @ 0x8
   488  0078                     	ds	1
   489  0079                     UART_Init@x:
   490  0079                     ___lldiv@quotient:	
   491                           ; 2 bytes @ 0x9
   492                           
   493                           
   494                           ; 4 bytes @ 0x9
   495  0079                     	ds	4
   496  007D                     ___lldiv@counter:
   497                           
   498                           ; 1 bytes @ 0xD
   499  007D                     	ds	1
   500  007E                     ??_main:
   501                           
   502                           	psect	cstackBANK0
   503  0020                     __pcstackBANK0:	
   504                           ; 1 bytes @ 0xE
   505                           
   506  0020                     ?_I2C_Master_Init:
   507  0020                     ___aldiv@counter:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0020                     I2C_Master_Init@c:	
   511                           ; 1 bytes @ 0x0
   512                           
   513                           
   514                           ; 4 bytes @ 0x0
   515  0020                     	ds	1
   516  0021                     ___aldiv@sign:
   517                           
   518                           ; 1 bytes @ 0x1
   519  0021                     	ds	1
   520  0022                     ___aldiv@quotient:
   521                           
   522                           ; 4 bytes @ 0x2
   523  0022                     	ds	2
   524  0024                     ??_I2C_Master_Init:
   525                           
   526                           ; 1 bytes @ 0x4
   527  0024                     	ds	2
   528  0026                     ?_UART_Init:
   529  0026                     UART_Init@baudrate:	
   530                           ; 1 bytes @ 0x6
   531                           
   532                           
   533                           ; 4 bytes @ 0x6
   534  0026                     	ds	4
   535  002A                     ??_UART_Init:
   536                           
   537                           ; 1 bytes @ 0xA
   538  002A                     	ds	12
   539                           
   540                           	psect	maintext
   541  05AE                     __pmaintext:	
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 66 in file "mcu_16f887.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels required when called:    2
   567 ;; This function calls:
   568 ;;		_I2C_Master_Init
   569 ;;		_UART_Init
   570 ;;		_Write_esp32
   571 ;;		_setup
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _main
   579  05AE                     _main:
   580  05AE                     l1054:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;mcu_16f887.c: 68:     setup();
   586  05AE  120A  118A  258E  120A  118A  	fcall	_setup
   587                           
   588                           ;mcu_16f887.c: 69:     I2C_Master_Init(100000);
   589  05B3  3000               	movlw	0
   590  05B4  1283               	bcf	3,5	;RP0=0, select bank0
   591  05B5  1303               	bcf	3,6	;RP1=0, select bank0
   592  05B6  00A3               	movwf	I2C_Master_Init@c+3
   593  05B7  3001               	movlw	1
   594  05B8  00A2               	movwf	I2C_Master_Init@c+2
   595  05B9  3086               	movlw	134
   596  05BA  00A1               	movwf	I2C_Master_Init@c+1
   597  05BB  30A0               	movlw	160
   598  05BC  00A0               	movwf	I2C_Master_Init@c
   599  05BD  120A  118A  25DA  120A  118A  	fcall	_I2C_Master_Init
   600                           
   601                           ;mcu_16f887.c: 70:     UART_Init(9600);
   602  05C2  3000               	movlw	0
   603  05C3  1283               	bcf	3,5	;RP0=0, select bank0
   604  05C4  1303               	bcf	3,6	;RP1=0, select bank0
   605  05C5  00A9               	movwf	UART_Init@baudrate+3
   606  05C6  3000               	movlw	0
   607  05C7  00A8               	movwf	UART_Init@baudrate+2
   608  05C8  3025               	movlw	37
   609  05C9  00A7               	movwf	UART_Init@baudrate+1
   610  05CA  3080               	movlw	128
   611  05CB  00A6               	movwf	UART_Init@baudrate
   612  05CC  120A  118A  2715  120A  118A  	fcall	_UART_Init
   613  05D1                     l43:	
   614                           ;mcu_16f887.c: 76:     while (1) {
   615                           
   616                           
   617                           ;mcu_16f887.c: 78:         Write_esp32();
   618  05D1  120A  118A  259C  120A  118A  	fcall	_Write_esp32
   619  05D6  2DD1               	goto	l43
   620  05D7  120A  118A  2800   	ljmp	start
   621  05DA                     __end_of_main:
   622                           
   623                           	psect	text1
   624  058E                     __ptext1:	
   625 ;; *************** function _setup *****************
   626 ;; Defined at:
   627 ;;		line 86 in file "mcu_16f887.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _setup
   656  058E                     _setup:
   657  058E                     l814:	
   658                           ;incstack = 0
   659                           ; Regs used in _setup: [wreg+status,2]
   660                           
   661                           
   662                           ;mcu_16f887.c: 87:     TRISD = 0b00000000;
   663  058E  1683               	bsf	3,5	;RP0=1, select bank1
   664  058F  1303               	bcf	3,6	;RP1=0, select bank1
   665  0590  0188               	clrf	8	;volatile
   666                           
   667                           ;mcu_16f887.c: 88:     PORTD = 0;
   668  0591  1283               	bcf	3,5	;RP0=0, select bank0
   669  0592  1303               	bcf	3,6	;RP1=0, select bank0
   670  0593  0188               	clrf	8	;volatile
   671  0594                     l816:
   672                           
   673                           ;mcu_16f887.c: 89:     TRISC = 0b11011000;
   674  0594  30D8               	movlw	216
   675  0595  1683               	bsf	3,5	;RP0=1, select bank1
   676  0596  1303               	bcf	3,6	;RP1=0, select bank1
   677  0597  0087               	movwf	7	;volatile
   678  0598                     l818:
   679                           
   680                           ;mcu_16f887.c: 90:     PORTC = 0;
   681  0598  1283               	bcf	3,5	;RP0=0, select bank0
   682  0599  1303               	bcf	3,6	;RP1=0, select bank0
   683  059A  0187               	clrf	7	;volatile
   684  059B                     l49:
   685  059B  0008               	return
   686  059C                     __end_of_setup:
   687                           
   688                           	psect	text2
   689  059C                     __ptext2:	
   690 ;; *************** function _Write_esp32 *****************
   691 ;; Defined at:
   692 ;;		line 104 in file "mcu_16f887.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, pclath, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0
   708 ;;      Temps:          2       0       0       0       0
   709 ;;      Totals:         2       0       0       0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    1
   713 ;; This function calls:
   714 ;;		_UART_DATA_Write
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _Write_esp32
   722  059C                     _Write_esp32:
   723  059C                     l1046:	
   724                           ;incstack = 0
   725                           ; Regs used in _Write_esp32: [wreg+status,2+status,0+pclath+cstack]
   726                           
   727                           
   728                           ;mcu_16f887.c: 105:     UART_DATA_Write(sensor);
   729  059C  1283               	bcf	3,5	;RP0=0, select bank0
   730  059D  1303               	bcf	3,6	;RP1=0, select bank0
   731  059E  0837               	movf	_sensor,w
   732  059F  120A  118A  2582  120A  118A  	fcall	_UART_DATA_Write
   733  05A4                     l1048:
   734                           
   735                           ;mcu_16f887.c: 107:     _delay((unsigned long)((100)*(4000000/4000.0)));
   736  05A4  3082               	movlw	130
   737  05A5  00F2               	movwf	??_Write_esp32+1
   738  05A6  30DD               	movlw	221
   739  05A7  00F1               	movwf	??_Write_esp32
   740  05A8                     u677:
   741  05A8  0BF1               	decfsz	??_Write_esp32,f
   742  05A9  2DA8               	goto	u677
   743  05AA  0BF2               	decfsz	??_Write_esp32+1,f
   744  05AB  2DA8               	goto	u677
   745  05AC  2DAD               	nop2
   746  05AD                     l56:
   747  05AD  0008               	return
   748  05AE                     __end_of_Write_esp32:
   749                           
   750                           	psect	text3
   751  0582                     __ptext3:	
   752 ;; *************** function _UART_DATA_Write *****************
   753 ;; Defined at:
   754 ;;		line 40 in file "UART_Library.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  data            1    wreg     unsigned char 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  data            1    0[COMMON] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         1       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         1       0       0       0       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_Write_esp32
   778 ;;		_UART_Write_Text
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _UART_DATA_Write
   784  0582                     _UART_DATA_Write:
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _UART_DATA_Write: [wreg]
   788                           ;UART_DATA_Write@data stored from wreg
   789  0582  00F0               	movwf	UART_DATA_Write@data
   790  0583                     l940:
   791  0583                     l139:	
   792                           ;UART_Library.c: 41:     while(!TXSTAbits.TRMT);
   793                           
   794  0583  1683               	bsf	3,5	;RP0=1, select bank1
   795  0584  1303               	bcf	3,6	;RP1=0, select bank1
   796  0585  1C98               	btfss	24,1	;volatile
   797  0586  2D88               	goto	u351
   798  0587  2D89               	goto	u350
   799  0588                     u351:
   800  0588  2D83               	goto	l139
   801  0589                     u350:
   802  0589                     l942:
   803                           
   804                           ;UART_Library.c: 42:     TXREG = data;
   805  0589  0870               	movf	UART_DATA_Write@data,w
   806  058A  1283               	bcf	3,5	;RP0=0, select bank0
   807  058B  1303               	bcf	3,6	;RP1=0, select bank0
   808  058C  0099               	movwf	25	;volatile
   809  058D                     l142:
   810  058D  0008               	return
   811  058E                     __end_of_UART_DATA_Write:
   812                           
   813                           	psect	text4
   814  0715                     __ptext4:	
   815 ;; *************** function _UART_Init *****************
   816 ;; Defined at:
   817 ;;		line 15 in file "UART_Library.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  baudrate        4    6[BANK0 ] const long 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  x               2    9[COMMON] unsigned int 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      unsigned char 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       4       0       0       0
   832 ;;      Locals:         2       0       0       0       0
   833 ;;      Temps:          0      12       0       0       0
   834 ;;      Totals:         2      16       0       0       0
   835 ;;Total ram usage:       18 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    1
   838 ;; This function calls:
   839 ;;		___aldiv
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _UART_Init
   847  0715                     _UART_Init:
   848  0715                     l1020:	
   849                           ;incstack = 0
   850                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   851                           
   852                           
   853                           ;UART_Library.c: 16:     unsigned int x;;UART_Library.c: 17:     x = (8000000 - baudrate
      +                           * 64) / (baudrate * 64);
   854  0715  1283               	bcf	3,5	;RP0=0, select bank0
   855  0716  1303               	bcf	3,6	;RP1=0, select bank0
   856  0717  0826               	movf	UART_Init@baudrate,w
   857  0718  00AA               	movwf	??_UART_Init
   858  0719  0827               	movf	UART_Init@baudrate+1,w
   859  071A  00AB               	movwf	??_UART_Init+1
   860  071B  0828               	movf	UART_Init@baudrate+2,w
   861  071C  00AC               	movwf	??_UART_Init+2
   862  071D  0829               	movf	UART_Init@baudrate+3,w
   863  071E  00AD               	movwf	??_UART_Init+3
   864  071F  3006               	movlw	6
   865  0720                     u545:
   866  0720  1003               	clrc
   867  0721  0DAA               	rlf	??_UART_Init,f
   868  0722  0DAB               	rlf	??_UART_Init+1,f
   869  0723  0DAC               	rlf	??_UART_Init+2,f
   870  0724  0DAD               	rlf	??_UART_Init+3,f
   871  0725                     u540:
   872  0725  3EFF               	addlw	-1
   873  0726  1D03               	skipz
   874  0727  2F20               	goto	u545
   875  0728  082D               	movf	??_UART_Init+3,w
   876  0729  00F3               	movwf	___aldiv@divisor+3
   877  072A  082C               	movf	??_UART_Init+2,w
   878  072B  00F2               	movwf	___aldiv@divisor+2
   879  072C  082B               	movf	??_UART_Init+1,w
   880  072D  00F1               	movwf	___aldiv@divisor+1
   881  072E  082A               	movf	??_UART_Init,w
   882  072F  00F0               	movwf	___aldiv@divisor
   883  0730  0826               	movf	UART_Init@baudrate,w
   884  0731  00AE               	movwf	??_UART_Init+4
   885  0732  0827               	movf	UART_Init@baudrate+1,w
   886  0733  00AF               	movwf	??_UART_Init+5
   887  0734  0828               	movf	UART_Init@baudrate+2,w
   888  0735  00B0               	movwf	??_UART_Init+6
   889  0736  0829               	movf	UART_Init@baudrate+3,w
   890  0737  00B1               	movwf	??_UART_Init+7
   891  0738  3006               	movlw	6
   892  0739                     u555:
   893  0739  1003               	clrc
   894  073A  0DAE               	rlf	??_UART_Init+4,f
   895  073B  0DAF               	rlf	??_UART_Init+5,f
   896  073C  0DB0               	rlf	??_UART_Init+6,f
   897  073D  0DB1               	rlf	??_UART_Init+7,f
   898  073E                     u550:
   899  073E  3EFF               	addlw	-1
   900  073F  1D03               	skipz
   901  0740  2F39               	goto	u555
   902  0741  3000               	movlw	0
   903  0742  00B2               	movwf	??_UART_Init+8
   904  0743  3012               	movlw	18
   905  0744  00B3               	movwf	??_UART_Init+9
   906  0745  307A               	movlw	122
   907  0746  00B4               	movwf	??_UART_Init+10
   908  0747  3000               	movlw	0
   909  0748  00B5               	movwf	??_UART_Init+11
   910  0749  082E               	movf	??_UART_Init+4,w
   911  074A  02B2               	subwf	??_UART_Init+8,f
   912  074B  082F               	movf	??_UART_Init+5,w
   913  074C  1C03               	skipc
   914  074D  0F2F               	incfsz	??_UART_Init+5,w
   915  074E  2F50               	goto	u561
   916  074F  2F51               	goto	u562
   917  0750                     u561:
   918  0750  02B3               	subwf	??_UART_Init+9,f
   919  0751                     u562:
   920  0751  0830               	movf	??_UART_Init+6,w
   921  0752  1C03               	skipc
   922  0753  0F30               	incfsz	??_UART_Init+6,w
   923  0754  2F56               	goto	u563
   924  0755  2F57               	goto	u564
   925  0756                     u563:
   926  0756  02B4               	subwf	??_UART_Init+10,f
   927  0757                     u564:
   928  0757  0831               	movf	??_UART_Init+7,w
   929  0758  1C03               	skipc
   930  0759  0F31               	incfsz	??_UART_Init+7,w
   931  075A  2F5C               	goto	u565
   932  075B  2F5D               	goto	u566
   933  075C                     u565:
   934  075C  02B5               	subwf	??_UART_Init+11,f
   935  075D                     u566:
   936  075D  0835               	movf	??_UART_Init+11,w
   937  075E  00F7               	movwf	___aldiv@dividend+3
   938  075F  0834               	movf	??_UART_Init+10,w
   939  0760  00F6               	movwf	___aldiv@dividend+2
   940  0761  0833               	movf	??_UART_Init+9,w
   941  0762  00F5               	movwf	___aldiv@dividend+1
   942  0763  0832               	movf	??_UART_Init+8,w
   943  0764  00F4               	movwf	___aldiv@dividend
   944  0765  120A  118A  2678  120A  118A  	fcall	___aldiv
   945  076A  0871               	movf	?___aldiv+1,w
   946  076B  00FA               	movwf	UART_Init@x+1
   947  076C  0870               	movf	?___aldiv,w
   948  076D  00F9               	movwf	UART_Init@x
   949  076E                     l1022:
   950                           
   951                           ;UART_Library.c: 18:     if (x > 255) {
   952  076E  3001               	movlw	1
   953  076F  027A               	subwf	UART_Init@x+1,w
   954  0770  3000               	movlw	0
   955  0771  1903               	skipnz
   956  0772  0279               	subwf	UART_Init@x,w
   957  0773  1C03               	skipc
   958  0774  2F76               	goto	u571
   959  0775  2F77               	goto	u570
   960  0776                     u571:
   961  0776  2FD3               	goto	l1028
   962  0777                     u570:
   963  0777                     l1024:
   964                           
   965                           ;UART_Library.c: 19:         x = (8000000 - baudrate * 16) / (baudrate * 16);
   966  0777  1283               	bcf	3,5	;RP0=0, select bank0
   967  0778  1303               	bcf	3,6	;RP1=0, select bank0
   968  0779  0826               	movf	UART_Init@baudrate,w
   969  077A  00AA               	movwf	??_UART_Init
   970  077B  0827               	movf	UART_Init@baudrate+1,w
   971  077C  00AB               	movwf	??_UART_Init+1
   972  077D  0828               	movf	UART_Init@baudrate+2,w
   973  077E  00AC               	movwf	??_UART_Init+2
   974  077F  0829               	movf	UART_Init@baudrate+3,w
   975  0780  00AD               	movwf	??_UART_Init+3
   976  0781  3004               	movlw	4
   977  0782                     u585:
   978  0782  1003               	clrc
   979  0783  0DAA               	rlf	??_UART_Init,f
   980  0784  0DAB               	rlf	??_UART_Init+1,f
   981  0785  0DAC               	rlf	??_UART_Init+2,f
   982  0786  0DAD               	rlf	??_UART_Init+3,f
   983  0787                     u580:
   984  0787  3EFF               	addlw	-1
   985  0788  1D03               	skipz
   986  0789  2F82               	goto	u585
   987  078A  082D               	movf	??_UART_Init+3,w
   988  078B  00F3               	movwf	___aldiv@divisor+3
   989  078C  082C               	movf	??_UART_Init+2,w
   990  078D  00F2               	movwf	___aldiv@divisor+2
   991  078E  082B               	movf	??_UART_Init+1,w
   992  078F  00F1               	movwf	___aldiv@divisor+1
   993  0790  082A               	movf	??_UART_Init,w
   994  0791  00F0               	movwf	___aldiv@divisor
   995  0792  0826               	movf	UART_Init@baudrate,w
   996  0793  00AE               	movwf	??_UART_Init+4
   997  0794  0827               	movf	UART_Init@baudrate+1,w
   998  0795  00AF               	movwf	??_UART_Init+5
   999  0796  0828               	movf	UART_Init@baudrate+2,w
  1000  0797  00B0               	movwf	??_UART_Init+6
  1001  0798  0829               	movf	UART_Init@baudrate+3,w
  1002  0799  00B1               	movwf	??_UART_Init+7
  1003  079A  3004               	movlw	4
  1004  079B                     u595:
  1005  079B  1003               	clrc
  1006  079C  0DAE               	rlf	??_UART_Init+4,f
  1007  079D  0DAF               	rlf	??_UART_Init+5,f
  1008  079E  0DB0               	rlf	??_UART_Init+6,f
  1009  079F  0DB1               	rlf	??_UART_Init+7,f
  1010  07A0                     u590:
  1011  07A0  3EFF               	addlw	-1
  1012  07A1  1D03               	skipz
  1013  07A2  2F9B               	goto	u595
  1014  07A3  3000               	movlw	0
  1015  07A4  00B2               	movwf	??_UART_Init+8
  1016  07A5  3012               	movlw	18
  1017  07A6  00B3               	movwf	??_UART_Init+9
  1018  07A7  307A               	movlw	122
  1019  07A8  00B4               	movwf	??_UART_Init+10
  1020  07A9  3000               	movlw	0
  1021  07AA  00B5               	movwf	??_UART_Init+11
  1022  07AB  082E               	movf	??_UART_Init+4,w
  1023  07AC  02B2               	subwf	??_UART_Init+8,f
  1024  07AD  082F               	movf	??_UART_Init+5,w
  1025  07AE  1C03               	skipc
  1026  07AF  0F2F               	incfsz	??_UART_Init+5,w
  1027  07B0  2FB2               	goto	u601
  1028  07B1  2FB3               	goto	u602
  1029  07B2                     u601:
  1030  07B2  02B3               	subwf	??_UART_Init+9,f
  1031  07B3                     u602:
  1032  07B3  0830               	movf	??_UART_Init+6,w
  1033  07B4  1C03               	skipc
  1034  07B5  0F30               	incfsz	??_UART_Init+6,w
  1035  07B6  2FB8               	goto	u603
  1036  07B7  2FB9               	goto	u604
  1037  07B8                     u603:
  1038  07B8  02B4               	subwf	??_UART_Init+10,f
  1039  07B9                     u604:
  1040  07B9  0831               	movf	??_UART_Init+7,w
  1041  07BA  1C03               	skipc
  1042  07BB  0F31               	incfsz	??_UART_Init+7,w
  1043  07BC  2FBE               	goto	u605
  1044  07BD  2FBF               	goto	u606
  1045  07BE                     u605:
  1046  07BE  02B5               	subwf	??_UART_Init+11,f
  1047  07BF                     u606:
  1048  07BF  0835               	movf	??_UART_Init+11,w
  1049  07C0  00F7               	movwf	___aldiv@dividend+3
  1050  07C1  0834               	movf	??_UART_Init+10,w
  1051  07C2  00F6               	movwf	___aldiv@dividend+2
  1052  07C3  0833               	movf	??_UART_Init+9,w
  1053  07C4  00F5               	movwf	___aldiv@dividend+1
  1054  07C5  0832               	movf	??_UART_Init+8,w
  1055  07C6  00F4               	movwf	___aldiv@dividend
  1056  07C7  120A  118A  2678  120A  118A  	fcall	___aldiv
  1057  07CC  0871               	movf	?___aldiv+1,w
  1058  07CD  00FA               	movwf	UART_Init@x+1
  1059  07CE  0870               	movf	?___aldiv,w
  1060  07CF  00F9               	movwf	UART_Init@x
  1061  07D0                     l1026:
  1062                           
  1063                           ;UART_Library.c: 20:         BRGH = 1;
  1064  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1065  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1066  07D2  1518               	bsf	24,2	;volatile
  1067  07D3                     l1028:
  1068                           
  1069                           ;UART_Library.c: 22:     if (x < 256) {
  1070  07D3  3001               	movlw	1
  1071  07D4  027A               	subwf	UART_Init@x+1,w
  1072  07D5  3000               	movlw	0
  1073  07D6  1903               	skipnz
  1074  07D7  0279               	subwf	UART_Init@x,w
  1075  07D8  1803               	skipnc
  1076  07D9  2FDB               	goto	u611
  1077  07DA  2FDC               	goto	u610
  1078  07DB                     u611:
  1079  07DB  2FEE               	goto	l130
  1080  07DC                     u610:
  1081  07DC                     l1030:
  1082                           
  1083                           ;UART_Library.c: 23:         SPBRG = x;
  1084  07DC  0879               	movf	UART_Init@x,w
  1085  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  1086  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  1087  07DF  0099               	movwf	25	;volatile
  1088  07E0                     l1032:
  1089                           
  1090                           ;UART_Library.c: 24:         SYNC = 0;
  1091  07E0  1218               	bcf	24,4	;volatile
  1092  07E1                     l1034:
  1093                           
  1094                           ;UART_Library.c: 25:         SPEN = 1;
  1095  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1096  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1097  07E3  1798               	bsf	24,7	;volatile
  1098  07E4                     l1036:
  1099                           
  1100                           ;UART_Library.c: 26:         TRISC7 = 1;
  1101  07E4  1683               	bsf	3,5	;RP0=1, select bank1
  1102  07E5  1303               	bcf	3,6	;RP1=0, select bank1
  1103  07E6  1787               	bsf	7,7	;volatile
  1104  07E7                     l1038:
  1105                           
  1106                           ;UART_Library.c: 27:         TRISC6 = 1;
  1107  07E7  1707               	bsf	7,6	;volatile
  1108  07E8                     l1040:
  1109                           
  1110                           ;UART_Library.c: 28:         CREN = 1;
  1111  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1112  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1113  07EA  1618               	bsf	24,4	;volatile
  1114  07EB                     l1042:
  1115                           
  1116                           ;UART_Library.c: 29:         TXEN = 1;
  1117  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  1118  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  1119  07ED  1698               	bsf	24,5	;volatile
  1120  07EE                     l130:
  1121  07EE  0008               	return
  1122  07EF                     __end_of_UART_Init:
  1123                           
  1124                           	psect	text5
  1125  0678                     __ptext5:	
  1126 ;; *************** function ___aldiv *****************
  1127 ;; Defined at:
  1128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  divisor         4    0[COMMON] long 
  1131 ;;  dividend        4    4[COMMON] long 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  quotient        4    2[BANK0 ] long 
  1134 ;;  sign            1    1[BANK0 ] unsigned char 
  1135 ;;  counter         1    0[BANK0 ] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  4    0[COMMON] long 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         8       0       0       0       0
  1146 ;;      Locals:         0       6       0       0       0
  1147 ;;      Temps:          1       0       0       0       0
  1148 ;;      Totals:         9       6       0       0       0
  1149 ;;Total ram usage:       15 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_UART_Init
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function ___aldiv
  1160  0678                     ___aldiv:
  1161  0678                     l968:	
  1162                           ;incstack = 0
  1163                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1164                           
  1165  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1167  067A  01A1               	clrf	___aldiv@sign
  1168  067B                     l970:
  1169  067B  1FF3               	btfss	___aldiv@divisor+3,7
  1170  067C  2E7E               	goto	u431
  1171  067D  2E7F               	goto	u430
  1172  067E                     u431:
  1173  067E  2E8C               	goto	l305
  1174  067F                     u430:
  1175  067F                     l972:
  1176  067F  09F0               	comf	___aldiv@divisor,f
  1177  0680  09F1               	comf	___aldiv@divisor+1,f
  1178  0681  09F2               	comf	___aldiv@divisor+2,f
  1179  0682  09F3               	comf	___aldiv@divisor+3,f
  1180  0683  0AF0               	incf	___aldiv@divisor,f
  1181  0684  1903               	skipnz
  1182  0685  0AF1               	incf	___aldiv@divisor+1,f
  1183  0686  1903               	skipnz
  1184  0687  0AF2               	incf	___aldiv@divisor+2,f
  1185  0688  1903               	skipnz
  1186  0689  0AF3               	incf	___aldiv@divisor+3,f
  1187  068A  01A1               	clrf	___aldiv@sign
  1188  068B  0AA1               	incf	___aldiv@sign,f
  1189  068C                     l305:
  1190  068C  1FF7               	btfss	___aldiv@dividend+3,7
  1191  068D  2E8F               	goto	u441
  1192  068E  2E90               	goto	u440
  1193  068F                     u441:
  1194  068F  2E9F               	goto	l978
  1195  0690                     u440:
  1196  0690                     l974:
  1197  0690  09F4               	comf	___aldiv@dividend,f
  1198  0691  09F5               	comf	___aldiv@dividend+1,f
  1199  0692  09F6               	comf	___aldiv@dividend+2,f
  1200  0693  09F7               	comf	___aldiv@dividend+3,f
  1201  0694  0AF4               	incf	___aldiv@dividend,f
  1202  0695  1903               	skipnz
  1203  0696  0AF5               	incf	___aldiv@dividend+1,f
  1204  0697  1903               	skipnz
  1205  0698  0AF6               	incf	___aldiv@dividend+2,f
  1206  0699  1903               	skipnz
  1207  069A  0AF7               	incf	___aldiv@dividend+3,f
  1208  069B                     l976:
  1209  069B  3001               	movlw	1
  1210  069C  00F8               	movwf	??___aldiv
  1211  069D  0878               	movf	??___aldiv,w
  1212  069E  06A1               	xorwf	___aldiv@sign,f
  1213  069F                     l978:
  1214  069F  3000               	movlw	0
  1215  06A0  00A5               	movwf	___aldiv@quotient+3
  1216  06A1  3000               	movlw	0
  1217  06A2  00A4               	movwf	___aldiv@quotient+2
  1218  06A3  3000               	movlw	0
  1219  06A4  00A3               	movwf	___aldiv@quotient+1
  1220  06A5  3000               	movlw	0
  1221  06A6  00A2               	movwf	___aldiv@quotient
  1222  06A7                     l980:
  1223  06A7  0873               	movf	___aldiv@divisor+3,w
  1224  06A8  0472               	iorwf	___aldiv@divisor+2,w
  1225  06A9  0471               	iorwf	___aldiv@divisor+1,w
  1226  06AA  0470               	iorwf	___aldiv@divisor,w
  1227  06AB  1903               	skipnz
  1228  06AC  2EAE               	goto	u451
  1229  06AD  2EAF               	goto	u450
  1230  06AE                     u451:
  1231  06AE  2EFC               	goto	l1000
  1232  06AF                     u450:
  1233  06AF                     l982:
  1234  06AF  01A0               	clrf	___aldiv@counter
  1235  06B0  0AA0               	incf	___aldiv@counter,f
  1236  06B1  2EBF               	goto	l986
  1237  06B2                     l984:
  1238  06B2  3001               	movlw	1
  1239  06B3  00F8               	movwf	??___aldiv
  1240  06B4                     u465:
  1241  06B4  1003               	clrc
  1242  06B5  0DF0               	rlf	___aldiv@divisor,f
  1243  06B6  0DF1               	rlf	___aldiv@divisor+1,f
  1244  06B7  0DF2               	rlf	___aldiv@divisor+2,f
  1245  06B8  0DF3               	rlf	___aldiv@divisor+3,f
  1246  06B9  0BF8               	decfsz	??___aldiv,f
  1247  06BA  2EB4               	goto	u465
  1248  06BB  3001               	movlw	1
  1249  06BC  00F8               	movwf	??___aldiv
  1250  06BD  0878               	movf	??___aldiv,w
  1251  06BE  07A0               	addwf	___aldiv@counter,f
  1252  06BF                     l986:
  1253  06BF  1FF3               	btfss	___aldiv@divisor+3,7
  1254  06C0  2EC2               	goto	u471
  1255  06C1  2EC3               	goto	u470
  1256  06C2                     u471:
  1257  06C2  2EB2               	goto	l984
  1258  06C3                     u470:
  1259  06C3                     l988:
  1260  06C3  3001               	movlw	1
  1261  06C4  00F8               	movwf	??___aldiv
  1262  06C5                     u485:
  1263  06C5  1003               	clrc
  1264  06C6  0DA2               	rlf	___aldiv@quotient,f
  1265  06C7  0DA3               	rlf	___aldiv@quotient+1,f
  1266  06C8  0DA4               	rlf	___aldiv@quotient+2,f
  1267  06C9  0DA5               	rlf	___aldiv@quotient+3,f
  1268  06CA  0BF8               	decfsz	??___aldiv,f
  1269  06CB  2EC5               	goto	u485
  1270  06CC                     l990:
  1271  06CC  0873               	movf	___aldiv@divisor+3,w
  1272  06CD  0277               	subwf	___aldiv@dividend+3,w
  1273  06CE  1D03               	skipz
  1274  06CF  2EDA               	goto	u495
  1275  06D0  0872               	movf	___aldiv@divisor+2,w
  1276  06D1  0276               	subwf	___aldiv@dividend+2,w
  1277  06D2  1D03               	skipz
  1278  06D3  2EDA               	goto	u495
  1279  06D4  0871               	movf	___aldiv@divisor+1,w
  1280  06D5  0275               	subwf	___aldiv@dividend+1,w
  1281  06D6  1D03               	skipz
  1282  06D7  2EDA               	goto	u495
  1283  06D8  0870               	movf	___aldiv@divisor,w
  1284  06D9  0274               	subwf	___aldiv@dividend,w
  1285  06DA                     u495:
  1286  06DA  1C03               	skipc
  1287  06DB  2EDD               	goto	u491
  1288  06DC  2EDE               	goto	u490
  1289  06DD                     u491:
  1290  06DD  2EED               	goto	l996
  1291  06DE                     u490:
  1292  06DE                     l992:
  1293  06DE  0870               	movf	___aldiv@divisor,w
  1294  06DF  02F4               	subwf	___aldiv@dividend,f
  1295  06E0  0871               	movf	___aldiv@divisor+1,w
  1296  06E1  1C03               	skipc
  1297  06E2  0F71               	incfsz	___aldiv@divisor+1,w
  1298  06E3  02F5               	subwf	___aldiv@dividend+1,f
  1299  06E4  0872               	movf	___aldiv@divisor+2,w
  1300  06E5  1C03               	skipc
  1301  06E6  0F72               	incfsz	___aldiv@divisor+2,w
  1302  06E7  02F6               	subwf	___aldiv@dividend+2,f
  1303  06E8  0873               	movf	___aldiv@divisor+3,w
  1304  06E9  1C03               	skipc
  1305  06EA  0F73               	incfsz	___aldiv@divisor+3,w
  1306  06EB  02F7               	subwf	___aldiv@dividend+3,f
  1307  06EC                     l994:
  1308  06EC  1422               	bsf	___aldiv@quotient,0
  1309  06ED                     l996:
  1310  06ED  3001               	movlw	1
  1311  06EE                     u505:
  1312  06EE  1003               	clrc
  1313  06EF  0CF3               	rrf	___aldiv@divisor+3,f
  1314  06F0  0CF2               	rrf	___aldiv@divisor+2,f
  1315  06F1  0CF1               	rrf	___aldiv@divisor+1,f
  1316  06F2  0CF0               	rrf	___aldiv@divisor,f
  1317  06F3  3EFF               	addlw	-1
  1318  06F4  1D03               	skipz
  1319  06F5  2EEE               	goto	u505
  1320  06F6                     l998:
  1321  06F6  3001               	movlw	1
  1322  06F7  02A0               	subwf	___aldiv@counter,f
  1323  06F8  1D03               	btfss	3,2
  1324  06F9  2EFB               	goto	u511
  1325  06FA  2EFC               	goto	u510
  1326  06FB                     u511:
  1327  06FB  2EC3               	goto	l988
  1328  06FC                     u510:
  1329  06FC                     l1000:
  1330  06FC  0821               	movf	___aldiv@sign,w
  1331  06FD  1903               	btfsc	3,2
  1332  06FE  2F00               	goto	u521
  1333  06FF  2F01               	goto	u520
  1334  0700                     u521:
  1335  0700  2F0C               	goto	l1004
  1336  0701                     u520:
  1337  0701                     l1002:
  1338  0701  09A2               	comf	___aldiv@quotient,f
  1339  0702  09A3               	comf	___aldiv@quotient+1,f
  1340  0703  09A4               	comf	___aldiv@quotient+2,f
  1341  0704  09A5               	comf	___aldiv@quotient+3,f
  1342  0705  0AA2               	incf	___aldiv@quotient,f
  1343  0706  1903               	skipnz
  1344  0707  0AA3               	incf	___aldiv@quotient+1,f
  1345  0708  1903               	skipnz
  1346  0709  0AA4               	incf	___aldiv@quotient+2,f
  1347  070A  1903               	skipnz
  1348  070B  0AA5               	incf	___aldiv@quotient+3,f
  1349  070C                     l1004:
  1350  070C  0825               	movf	___aldiv@quotient+3,w
  1351  070D  00F3               	movwf	?___aldiv+3
  1352  070E  0824               	movf	___aldiv@quotient+2,w
  1353  070F  00F2               	movwf	?___aldiv+2
  1354  0710  0823               	movf	___aldiv@quotient+1,w
  1355  0711  00F1               	movwf	?___aldiv+1
  1356  0712  0822               	movf	___aldiv@quotient,w
  1357  0713  00F0               	movwf	?___aldiv
  1358  0714                     l315:
  1359  0714  0008               	return
  1360  0715                     __end_of___aldiv:
  1361                           
  1362                           	psect	text6
  1363  05DA                     __ptext6:	
  1364 ;; *************** function _I2C_Master_Init *****************
  1365 ;; Defined at:
  1366 ;;		line 16 in file "I2C_Library.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  c               4    0[BANK0 ] const unsigned long 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       4       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       4       0       0       0
  1383 ;;      Totals:         0       8       0       0       0
  1384 ;;Total ram usage:        8 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		___lldiv
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _I2C_Master_Init
  1396  05DA                     _I2C_Master_Init:
  1397  05DA                     l1008:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1400                           
  1401                           
  1402                           ;I2C_Library.c: 17:     SSPADD = (8000000/(4*c))-1;
  1403  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1404  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1405  05DC  0820               	movf	I2C_Master_Init@c,w
  1406  05DD  00A4               	movwf	??_I2C_Master_Init
  1407  05DE  0821               	movf	I2C_Master_Init@c+1,w
  1408  05DF  00A5               	movwf	??_I2C_Master_Init+1
  1409  05E0  0822               	movf	I2C_Master_Init@c+2,w
  1410  05E1  00A6               	movwf	??_I2C_Master_Init+2
  1411  05E2  0823               	movf	I2C_Master_Init@c+3,w
  1412  05E3  00A7               	movwf	??_I2C_Master_Init+3
  1413  05E4  3002               	movlw	2
  1414  05E5                     u535:
  1415  05E5  1003               	clrc
  1416  05E6  0DA4               	rlf	??_I2C_Master_Init,f
  1417  05E7  0DA5               	rlf	??_I2C_Master_Init+1,f
  1418  05E8  0DA6               	rlf	??_I2C_Master_Init+2,f
  1419  05E9  0DA7               	rlf	??_I2C_Master_Init+3,f
  1420  05EA                     u530:
  1421  05EA  3EFF               	addlw	-1
  1422  05EB  1D03               	skipz
  1423  05EC  2DE5               	goto	u535
  1424  05ED  0827               	movf	??_I2C_Master_Init+3,w
  1425  05EE  00F3               	movwf	___lldiv@divisor+3
  1426  05EF  0826               	movf	??_I2C_Master_Init+2,w
  1427  05F0  00F2               	movwf	___lldiv@divisor+2
  1428  05F1  0825               	movf	??_I2C_Master_Init+1,w
  1429  05F2  00F1               	movwf	___lldiv@divisor+1
  1430  05F3  0824               	movf	??_I2C_Master_Init,w
  1431  05F4  00F0               	movwf	___lldiv@divisor
  1432  05F5  3000               	movlw	0
  1433  05F6  00F7               	movwf	___lldiv@dividend+3
  1434  05F7  307A               	movlw	122
  1435  05F8  00F6               	movwf	___lldiv@dividend+2
  1436  05F9  3012               	movlw	18
  1437  05FA  00F5               	movwf	___lldiv@dividend+1
  1438  05FB  3000               	movlw	0
  1439  05FC  00F4               	movwf	___lldiv@dividend
  1440  05FD  120A  118A  2612  120A  118A  	fcall	___lldiv
  1441  0602  0870               	movf	?___lldiv,w
  1442  0603  3EFF               	addlw	255
  1443  0604  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0605  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0606  0093               	movwf	19	;volatile
  1446  0607                     l1010:
  1447                           
  1448                           ;I2C_Library.c: 18:     SSPSTAT = 0b00000000;
  1449  0607  0194               	clrf	20	;volatile
  1450  0608                     l1012:
  1451                           
  1452                           ;I2C_Library.c: 19:     SSPCON = 0b00101000;
  1453  0608  3028               	movlw	40
  1454  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1455  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1456  060B  0094               	movwf	20	;volatile
  1457  060C                     l1014:
  1458                           
  1459                           ;I2C_Library.c: 21:     SSPCON2 = 0b00000000;
  1460  060C  1683               	bsf	3,5	;RP0=1, select bank1
  1461  060D  1303               	bcf	3,6	;RP1=0, select bank1
  1462  060E  0191               	clrf	17	;volatile
  1463  060F                     l1016:
  1464                           
  1465                           ;I2C_Library.c: 23:     TRISCbits.TRISC3 = 1;
  1466  060F  1587               	bsf	7,3	;volatile
  1467  0610                     l1018:
  1468                           
  1469                           ;I2C_Library.c: 24:     TRISCbits.TRISC4 = 1;
  1470  0610  1607               	bsf	7,4	;volatile
  1471  0611                     l76:
  1472  0611  0008               	return
  1473  0612                     __end_of_I2C_Master_Init:
  1474                           
  1475                           	psect	text7
  1476  0612                     __ptext7:	
  1477 ;; *************** function ___lldiv *****************
  1478 ;; Defined at:
  1479 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  divisor         4    0[COMMON] unsigned long 
  1482 ;;  dividend        4    4[COMMON] unsigned long 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  quotient        4    9[COMMON] unsigned long 
  1485 ;;  counter         1   13[COMMON] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  4    0[COMMON] unsigned long 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         8       0       0       0       0
  1496 ;;      Locals:         5       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0
  1498 ;;      Totals:        14       0       0       0       0
  1499 ;;Total ram usage:       14 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_I2C_Master_Init
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function ___lldiv
  1510  0612                     ___lldiv:
  1511  0612                     l944:	
  1512                           ;incstack = 0
  1513                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1514                           
  1515  0612  3000               	movlw	0
  1516  0613  00FC               	movwf	___lldiv@quotient+3
  1517  0614  3000               	movlw	0
  1518  0615  00FB               	movwf	___lldiv@quotient+2
  1519  0616  3000               	movlw	0
  1520  0617  00FA               	movwf	___lldiv@quotient+1
  1521  0618  3000               	movlw	0
  1522  0619  00F9               	movwf	___lldiv@quotient
  1523  061A  0873               	movf	___lldiv@divisor+3,w
  1524  061B  0472               	iorwf	___lldiv@divisor+2,w
  1525  061C  0471               	iorwf	___lldiv@divisor+1,w
  1526  061D  0470               	iorwf	___lldiv@divisor,w
  1527  061E  1903               	skipnz
  1528  061F  2E21               	goto	u361
  1529  0620  2E22               	goto	u360
  1530  0621                     u361:
  1531  0621  2E6F               	goto	l964
  1532  0622                     u360:
  1533  0622                     l946:
  1534  0622  01FD               	clrf	___lldiv@counter
  1535  0623  0AFD               	incf	___lldiv@counter,f
  1536  0624  2E32               	goto	l950
  1537  0625                     l948:
  1538  0625  3001               	movlw	1
  1539  0626  00F8               	movwf	??___lldiv
  1540  0627                     u375:
  1541  0627  1003               	clrc
  1542  0628  0DF0               	rlf	___lldiv@divisor,f
  1543  0629  0DF1               	rlf	___lldiv@divisor+1,f
  1544  062A  0DF2               	rlf	___lldiv@divisor+2,f
  1545  062B  0DF3               	rlf	___lldiv@divisor+3,f
  1546  062C  0BF8               	decfsz	??___lldiv,f
  1547  062D  2E27               	goto	u375
  1548  062E  3001               	movlw	1
  1549  062F  00F8               	movwf	??___lldiv
  1550  0630  0878               	movf	??___lldiv,w
  1551  0631  07FD               	addwf	___lldiv@counter,f
  1552  0632                     l950:
  1553  0632  1FF3               	btfss	___lldiv@divisor+3,7
  1554  0633  2E35               	goto	u381
  1555  0634  2E36               	goto	u380
  1556  0635                     u381:
  1557  0635  2E25               	goto	l948
  1558  0636                     u380:
  1559  0636                     l952:
  1560  0636  3001               	movlw	1
  1561  0637  00F8               	movwf	??___lldiv
  1562  0638                     u395:
  1563  0638  1003               	clrc
  1564  0639  0DF9               	rlf	___lldiv@quotient,f
  1565  063A  0DFA               	rlf	___lldiv@quotient+1,f
  1566  063B  0DFB               	rlf	___lldiv@quotient+2,f
  1567  063C  0DFC               	rlf	___lldiv@quotient+3,f
  1568  063D  0BF8               	decfsz	??___lldiv,f
  1569  063E  2E38               	goto	u395
  1570  063F                     l954:
  1571  063F  0873               	movf	___lldiv@divisor+3,w
  1572  0640  0277               	subwf	___lldiv@dividend+3,w
  1573  0641  1D03               	skipz
  1574  0642  2E4D               	goto	u405
  1575  0643  0872               	movf	___lldiv@divisor+2,w
  1576  0644  0276               	subwf	___lldiv@dividend+2,w
  1577  0645  1D03               	skipz
  1578  0646  2E4D               	goto	u405
  1579  0647  0871               	movf	___lldiv@divisor+1,w
  1580  0648  0275               	subwf	___lldiv@dividend+1,w
  1581  0649  1D03               	skipz
  1582  064A  2E4D               	goto	u405
  1583  064B  0870               	movf	___lldiv@divisor,w
  1584  064C  0274               	subwf	___lldiv@dividend,w
  1585  064D                     u405:
  1586  064D  1C03               	skipc
  1587  064E  2E50               	goto	u401
  1588  064F  2E51               	goto	u400
  1589  0650                     u401:
  1590  0650  2E60               	goto	l960
  1591  0651                     u400:
  1592  0651                     l956:
  1593  0651  0870               	movf	___lldiv@divisor,w
  1594  0652  02F4               	subwf	___lldiv@dividend,f
  1595  0653  0871               	movf	___lldiv@divisor+1,w
  1596  0654  1C03               	skipc
  1597  0655  0F71               	incfsz	___lldiv@divisor+1,w
  1598  0656  02F5               	subwf	___lldiv@dividend+1,f
  1599  0657  0872               	movf	___lldiv@divisor+2,w
  1600  0658  1C03               	skipc
  1601  0659  0F72               	incfsz	___lldiv@divisor+2,w
  1602  065A  02F6               	subwf	___lldiv@dividend+2,f
  1603  065B  0873               	movf	___lldiv@divisor+3,w
  1604  065C  1C03               	skipc
  1605  065D  0F73               	incfsz	___lldiv@divisor+3,w
  1606  065E  02F7               	subwf	___lldiv@dividend+3,f
  1607  065F                     l958:
  1608  065F  1479               	bsf	___lldiv@quotient,0
  1609  0660                     l960:
  1610  0660  3001               	movlw	1
  1611  0661                     u415:
  1612  0661  1003               	clrc
  1613  0662  0CF3               	rrf	___lldiv@divisor+3,f
  1614  0663  0CF2               	rrf	___lldiv@divisor+2,f
  1615  0664  0CF1               	rrf	___lldiv@divisor+1,f
  1616  0665  0CF0               	rrf	___lldiv@divisor,f
  1617  0666  3EFF               	addlw	-1
  1618  0667  1D03               	skipz
  1619  0668  2E61               	goto	u415
  1620  0669                     l962:
  1621  0669  3001               	movlw	1
  1622  066A  02FD               	subwf	___lldiv@counter,f
  1623  066B  1D03               	btfss	3,2
  1624  066C  2E6E               	goto	u421
  1625  066D  2E6F               	goto	u420
  1626  066E                     u421:
  1627  066E  2E36               	goto	l952
  1628  066F                     u420:
  1629  066F                     l964:
  1630  066F  087C               	movf	___lldiv@quotient+3,w
  1631  0670  00F3               	movwf	?___lldiv+3
  1632  0671  087B               	movf	___lldiv@quotient+2,w
  1633  0672  00F2               	movwf	?___lldiv+2
  1634  0673  087A               	movf	___lldiv@quotient+1,w
  1635  0674  00F1               	movwf	?___lldiv+1
  1636  0675  0879               	movf	___lldiv@quotient,w
  1637  0676  00F0               	movwf	?___lldiv
  1638  0677                     l276:
  1639  0677  0008               	return
  1640  0678                     __end_of___lldiv:
  1641  007E                     btemp	set	126	;btemp
  1642  007E                     wtemp0	set	126
  1643                           
  1644                           	psect	config
  1645                           
  1646                           ;Config register CONFIG1 @ 0x2007
  1647                           ;	Oscillator Selection bits
  1648                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1649                           ;	Watchdog Timer Enable bit
  1650                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1651                           ;	Power-up Timer Enable bit
  1652                           ;	PWRTE = OFF, PWRT disabled
  1653                           ;	RE3/MCLR pin function select bit
  1654                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1655                           ;	Code Protection bit
  1656                           ;	CP = OFF, Program memory code protection is disabled
  1657                           ;	Data Code Protection bit
  1658                           ;	CPD = OFF, Data memory code protection is disabled
  1659                           ;	Brown Out Reset Selection bits
  1660                           ;	BOREN = OFF, BOR disabled
  1661                           ;	Internal External Switchover bit
  1662                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1663                           ;	Fail-Safe Clock Monitor Enabled bit
  1664                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1665                           ;	Low Voltage Programming Enable bit
  1666                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1667                           ;	In-Circuit Debugger Mode bit
  1668                           ;	DEBUG = 0x1, unprogrammed default
  1669  2007                     	org	8199
  1670  2007  20D5               	dw	8405
  1671                           
  1672                           ;Config register CONFIG2 @ 0x2008
  1673                           ;	Brown-out Reset Selection bit
  1674                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1675                           ;	Flash Program Memory Self Write Enable bits
  1676                           ;	WRT = OFF, Write protection off
  1677  2008                     	org	8200
  1678  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Write_esp32->_UART_DATA_Write
    _UART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1270
                    _I2C_Master_Init
                          _UART_Init
                        _Write_esp32
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_esp32                                          2     2      0      22
                                              1 COMMON     2     2      0
                    _UART_DATA_Write
 ---------------------------------------------------------------------------------
 (2) _UART_DATA_Write                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _UART_Init
     ___aldiv
   _Write_esp32
     _UART_DATA_Write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 07 12:11:18 2021

                      l43 05D1                        l56 05AD                        l49 059B  
                      l76 0611                       l130 07EE                       l142 058D  
                     l305 068C                       l315 0714                       l139 0583  
                     l276 0677                       l814 058E                       l816 0594  
                     l818 0598                       l940 0583                       l950 0632  
                     l942 0589                       l960 0660                       l952 0636  
                     l944 0612                       l962 0669                       l954 063F  
                     l946 0622                       l970 067B                       l956 0651  
                     l948 0625                       l964 066F                       l980 06A7  
                     l972 067F                       l958 065F                       l990 06CC  
                     l982 06AF                       l974 0690                       l992 06DE  
                     l984 06B2                       l976 069B                       l968 0678  
                     l994 06EC                       l986 06BF                       l978 069F  
                     l996 06ED                       l988 06C3                       l998 06F6  
                     u400 0651                       u401 0650                       u420 066F  
                     u421 066E                       u405 064D                       u510 06FC  
                     u430 067F                       u350 0589                       u415 0661  
                     u511 06FB                       u431 067E                       u351 0588  
                     u360 0622                       u520 0701                       u440 0690  
                     u361 0621                       u521 0700                       u505 06EE  
                     u441 068F                       u601 07B2                       u530 05EA  
                     u450 06AF                       u610 07DC                       u602 07B3  
                     u451 06AE                       u611 07DB                       u603 07B8  
                     u380 0636                       u604 07B9                       u540 0725  
                     u381 0635                       u605 07BE                       u470 06C3  
                     u606 07BF                       u550 073E                       u375 0627  
                     u535 05E5                       u471 06C2                       u465 06B4  
                     u561 0750                       u545 0720                       u490 06DE  
                     u570 0777                       u562 0751                       u395 0638  
                     u491 06DD                       u571 0776                       u563 0756  
                     u555 0739                       u580 0787                       u564 0757  
                     u485 06C5                       u565 075C                       u590 07A0  
                     u566 075D                       u495 06DA                       u585 0782  
                     u595 079B                       u677 05A8      __size_of_Write_esp32 0012  
                    l1000 06FC                      l1010 0607                      l1002 0701  
                    l1012 0608                      l1004 070C                      l1020 0715  
                    l1014 060C                      l1030 07DC                      l1022 076E  
                    l1016 060F                      l1008 05DA                      l1040 07E8  
                    l1032 07E0                      l1024 0777                      l1018 0610  
                    l1042 07EB                      l1034 07E1                      l1026 07D0  
                    l1036 07E4                      l1028 07D3                      l1038 07E7  
                    l1046 059C                      l1054 05AE                      l1048 05A4  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4                      _main 05AE                      _temp 0038  
                    btemp 007E                      start 0000          ?_I2C_Master_Init 0020  
         __end_of___aldiv 0715                     ?_main 0070           __end_of___lldiv 0678  
                   _RCREG 001A  __size_of_UART_DATA_Write 000C                     _SPBRG 0099  
                   _PORTC 0007                     _PORTD 0008                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019        __size_of_UART_Init 00DA  
                   _setup 058E                     status 0003                     wtemp0 007E  
         __initialization 07EF              __end_of_main 05DA                    ??_main 007E  
                  ?_setup 0070                    _SSPADD 0093                    _TRISC6 043E  
                  _TRISC7 043F                    _SSPCON 0014                    _SSPBUF 0013  
       __end_of_UART_Init 07EF                 ??___aldiv 0078                 ??___lldiv 0078  
                  _sensor 0037         ??_UART_DATA_Write 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070              __pidataBANK0 0580             __end_of_setup 059C  
                 ??_setup 0070                __pbssBANK0 0038                __pmaintext 05AE  
           ??_Write_esp32 0071                   _SSPCON2 0091                   _SSPSTAT 0094  
                 ___aldiv 0678                   ___lldiv 0612                   _address 0036  
                 __ptext1 058E                   __ptext2 059C                   __ptext3 0582  
                 __ptext4 0715                   __ptext5 0678                   __ptext6 05DA  
                 __ptext7 0612          ___aldiv@dividend 0074  __size_of_I2C_Master_Init 0038  
     __end_of_Write_esp32 05AE      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D          ___aldiv@quotient 0022          I2C_Master_Init@c 0020  
               _UART_Init 0715           _UART_DATA_Write 0582                 _TRISCbits 0087  
               _TXSTAbits 0098                ?_UART_Init 0026               _Write_esp32 059C  
     start_initialization 07EF         ??_I2C_Master_Init 0024   __end_of_UART_DATA_Write 058E  
             __pdataBANK0 0036                 ___latbits 0002             __pcstackBANK0 0020  
                ?___aldiv 0070                  ?___lldiv 0070               ??_UART_Init 002A  
              UART_Init@x 0079            __size_of_setup 000E           ___aldiv@divisor 0070  
         ___aldiv@counter 0020                  _PIR1bits 000C          ?_UART_DATA_Write 0070  
       UART_Init@baudrate 0026          __size_of___aldiv 009D          __size_of___lldiv 0066  
            ?_Write_esp32 0070           _I2C_Master_Init 05DA             __size_of_main 002C  
     UART_DATA_Write@data 0070          ___lldiv@dividend 0074   __end_of_I2C_Master_Init 0612  
        ___lldiv@quotient 0079              ___aldiv@sign 0021               _SSPCON2bits 0091  
