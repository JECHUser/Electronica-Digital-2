

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 17:44:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369                           
   370                           	psect	idataBANK0
   371  06B6                     __pidataBANK0:
   372                           
   373                           ;initializer for _address
   374  06B6  3414               	retlw	20
   375                           
   376                           ;initializer for _sensor
   377  06B7  3401               	retlw	1
   378  0019                     _TXREG	set	25
   379  001A                     _RCREG	set	26
   380  000C                     _PIR1bits	set	12
   381  0013                     _SSPBUF	set	19
   382  0014                     _SSPCON	set	20
   383  0007                     _PORTC	set	7
   384  0008                     _PORTD	set	8
   385  0065                     _RCIF	set	101
   386  00C4                     _CREN	set	196
   387  00C7                     _SPEN	set	199
   388  0098                     _TXSTAbits	set	152
   389  0099                     _SPBRG	set	153
   390  009A                     _SPBRGH	set	154
   391  0091                     _SSPCON2bits	set	145
   392  0087                     _TRISCbits	set	135
   393  0091                     _SSPCON2	set	145
   394  0094                     _SSPSTAT	set	148
   395  0093                     _SSPADD	set	147
   396  0087                     _TRISC	set	135
   397  0088                     _TRISD	set	136
   398  04C1                     _TRMT	set	1217
   399  04C5                     _TXEN	set	1221
   400  043E                     _TRISC6	set	1086
   401  043F                     _TRISC7	set	1087
   402  04C6                     _TX9	set	1222
   403  04C4                     _SYNC	set	1220
   404  04C2                     _BRGH	set	1218
   405                           
   406                           	psect	cinit
   407  07EF                     start_initialization:	
   408                           ; #config settings
   409                           
   410  07EF                     __initialization:
   411                           
   412                           ; Initialize objects allocated to BANK0
   413  07EF  120A  118A  26B6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   414  07F4  00A9               	movwf	__pdataBANK0& (0+127)
   415  07F5  120A  118A  26B7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   416  07FA  00AA               	movwf	(__pdataBANK0+1)& (0+127)
   417                           
   418                           ; Clear objects allocated to BANK0
   419  07FB  01AB               	clrf	__pbssBANK0& (0+127)
   420  07FC                     end_of_initialization:	
   421                           ;End of C runtime variable initialization code
   422                           
   423  07FC                     __end_of__initialization:
   424  07FC  0183               	clrf	3
   425  07FD  120A  118A  2F24   	ljmp	_main	;jump to C main() function
   426                           
   427                           	psect	bssBANK0
   428  002B                     __pbssBANK0:
   429  002B                     _temp:
   430  002B                     	ds	1
   431                           
   432                           	psect	dataBANK0
   433  0029                     __pdataBANK0:
   434  0029                     _address:
   435  0029                     	ds	1
   436  002A                     _sensor:
   437  002A                     	ds	1
   438                           
   439                           	psect	cstackCOMMON
   440  0070                     __pcstackCOMMON:
   441  0070                     ?_setup:
   442  0070                     ??_setup:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_UART_Init:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ??_UART_Init:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_Write_esp32:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_Read_esp32:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_Read_esp32:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_UART_DATA_Ready:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ??_UART_DATA_Ready:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_UART_DATA_Read:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_UART_DATA_Read:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_UART_DATA_Write:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_UART_DATA_Write:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_main:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?___lldiv:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     UART_DATA_Write@data:	
   485                           ; 4 bytes @ 0x0
   486                           
   487  0070                     ___lldiv@divisor:	
   488                           ; 1 bytes @ 0x0
   489                           
   490                           
   491                           ; 4 bytes @ 0x0
   492  0070                     	ds	1
   493  0071                     ??_Write_esp32:
   494                           
   495                           ; 1 bytes @ 0x1
   496  0071                     	ds	3
   497  0074                     ___lldiv@dividend:
   498                           
   499                           ; 4 bytes @ 0x4
   500  0074                     	ds	4
   501  0078                     ??___lldiv:
   502                           
   503                           ; 1 bytes @ 0x8
   504  0078                     	ds	1
   505  0079                     ___lldiv@quotient:
   506                           
   507                           ; 4 bytes @ 0x9
   508  0079                     	ds	4
   509  007D                     ___lldiv@counter:
   510                           
   511                           ; 1 bytes @ 0xD
   512  007D                     	ds	1
   513                           
   514                           	psect	cstackBANK0
   515  0020                     __pcstackBANK0:
   516  0020                     ?_I2C_Master_Init:
   517  0020                     I2C_Master_Init@c:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 4 bytes @ 0x0
   522  0020                     	ds	4
   523  0024                     ??_I2C_Master_Init:
   524                           
   525                           ; 1 bytes @ 0x4
   526  0024                     	ds	4
   527  0028                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x8
   530  0028                     	ds	1
   531                           
   532                           	psect	maintext
   533  0724                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 66 in file "mcu_16f887.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       1       0       0       0
   556 ;;      Totals:         0       1       0       0       0
   557 ;;Total ram usage:        1 bytes
   558 ;; Hardware stack levels required when called:    2
   559 ;; This function calls:
   560 ;;		_I2C_Master_Init
   561 ;;		_Read_esp32
   562 ;;		_UART_Init
   563 ;;		_Write_esp32
   564 ;;		_setup
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  0724                     _main:
   573  0724                     l990:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;mcu_16f887.c: 68:     setup();
   579  0724  120A  118A  26D2  120A  118A  	fcall	_setup
   580                           
   581                           ;mcu_16f887.c: 69:     I2C_Master_Init(100000);
   582  0729  3000               	movlw	0
   583  072A  1283               	bcf	3,5	;RP0=0, select bank0
   584  072B  1303               	bcf	3,6	;RP1=0, select bank0
   585  072C  00A3               	movwf	I2C_Master_Init@c+3
   586  072D  3001               	movlw	1
   587  072E  00A2               	movwf	I2C_Master_Init@c+2
   588  072F  3086               	movlw	134
   589  0730  00A1               	movwf	I2C_Master_Init@c+1
   590  0731  30A0               	movlw	160
   591  0732  00A0               	movwf	I2C_Master_Init@c
   592  0733  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Init
   593                           
   594                           ;mcu_16f887.c: 70:     UART_Init();
   595  0738  120A  118A  26F2  120A  118A  	fcall	_UART_Init
   596  073D                     l992:
   597                           
   598                           ;mcu_16f887.c: 78:         sensor = 69;
   599  073D  3045               	movlw	69
   600  073E  1283               	bcf	3,5	;RP0=0, select bank0
   601  073F  1303               	bcf	3,6	;RP1=0, select bank0
   602  0740  00A8               	movwf	??_main
   603  0741  0828               	movf	??_main,w
   604  0742  00AA               	movwf	_sensor
   605  0743                     l994:
   606                           
   607                           ;mcu_16f887.c: 79:         Write_esp32();
   608  0743  120A  118A  26E0  120A  118A  	fcall	_Write_esp32
   609  0748                     l996:
   610                           
   611                           ;mcu_16f887.c: 80:         Read_esp32();
   612  0748  120A  118A  2708  120A  118A  	fcall	_Read_esp32
   613  074D  2F3D               	goto	l992
   614  074E  120A  118A  2800   	ljmp	start
   615  0751                     __end_of_main:
   616                           
   617                           	psect	text1
   618  06D2                     __ptext1:	
   619 ;; *************** function _setup *****************
   620 ;; Defined at:
   621 ;;		line 88 in file "mcu_16f887.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _setup
   650  06D2                     _setup:
   651  06D2                     l938:	
   652                           ;incstack = 0
   653                           ; Regs used in _setup: [wreg+status,2]
   654                           
   655                           
   656                           ;mcu_16f887.c: 89:     TRISD = 0b00000000;
   657  06D2  1683               	bsf	3,5	;RP0=1, select bank1
   658  06D3  1303               	bcf	3,6	;RP1=0, select bank1
   659  06D4  0188               	clrf	8	;volatile
   660                           
   661                           ;mcu_16f887.c: 90:     PORTD = 0;
   662  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   663  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   664  06D7  0188               	clrf	8	;volatile
   665  06D8                     l940:
   666                           
   667                           ;mcu_16f887.c: 91:     TRISC = 0b11011000;
   668  06D8  30D8               	movlw	216
   669  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   670  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   671  06DB  0087               	movwf	7	;volatile
   672  06DC                     l942:
   673                           
   674                           ;mcu_16f887.c: 92:     PORTC = 0;
   675  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   676  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   677  06DE  0187               	clrf	7	;volatile
   678  06DF                     l51:
   679  06DF  0008               	return
   680  06E0                     __end_of_setup:
   681                           
   682                           	psect	text2
   683  06E0                     __ptext2:	
   684 ;; *************** function _Write_esp32 *****************
   685 ;; Defined at:
   686 ;;		line 106 in file "mcu_16f887.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         2       0       0       0       0
   704 ;;Total ram usage:        2 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    1
   707 ;; This function calls:
   708 ;;		_UART_DATA_Write
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _Write_esp32
   716  06E0                     _Write_esp32:
   717  06E0                     l976:	
   718                           ;incstack = 0
   719                           ; Regs used in _Write_esp32: [wreg+status,2+status,0+pclath+cstack]
   720                           
   721                           
   722                           ;mcu_16f887.c: 107:     UART_DATA_Write(sensor);
   723  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   724  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   725  06E2  082A               	movf	_sensor,w
   726  06E3  120A  118A  26C6  120A  118A  	fcall	_UART_DATA_Write
   727  06E8                     l978:
   728                           
   729                           ;mcu_16f887.c: 108:     _delay((unsigned long)((100)*(4000000/4000.0)));
   730  06E8  3082               	movlw	130
   731  06E9  00F2               	movwf	??_Write_esp32+1
   732  06EA  30DD               	movlw	221
   733  06EB  00F1               	movwf	??_Write_esp32
   734  06EC                     u337:
   735  06EC  0BF1               	decfsz	??_Write_esp32,f
   736  06ED  2EEC               	goto	u337
   737  06EE  0BF2               	decfsz	??_Write_esp32+1,f
   738  06EF  2EEC               	goto	u337
   739  06F0  2EF1               	nop2
   740  06F1                     l58:
   741  06F1  0008               	return
   742  06F2                     __end_of_Write_esp32:
   743                           
   744                           	psect	text3
   745  06C6                     __ptext3:	
   746 ;; *************** function _UART_DATA_Write *****************
   747 ;; Defined at:
   748 ;;		line 33 in file "UART_Library.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  data            1    wreg     unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  data            1    0[COMMON] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         1       0       0       0       0
   766 ;;Total ram usage:        1 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_Write_esp32
   772 ;;		_UART_Write_Text
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _UART_DATA_Write
   778  06C6                     _UART_DATA_Write:
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _UART_DATA_Write: [wreg]
   782                           ;UART_DATA_Write@data stored from wreg
   783  06C6  00F0               	movwf	UART_DATA_Write@data
   784  06C7                     l912:
   785                           
   786                           ;UART_Library.c: 34:     TXREG = data;
   787  06C7  0870               	movf	UART_DATA_Write@data,w
   788  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   789  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   790  06CA  0099               	movwf	25	;volatile
   791  06CB                     l143:	
   792                           ;UART_Library.c: 35:     while (!TXSTAbits.TRMT);
   793                           
   794  06CB  1683               	bsf	3,5	;RP0=1, select bank1
   795  06CC  1303               	bcf	3,6	;RP1=0, select bank1
   796  06CD  1C98               	btfss	24,1	;volatile
   797  06CE  2ED0               	goto	u181
   798  06CF  2ED1               	goto	u180
   799  06D0                     u181:
   800  06D0  2ECB               	goto	l143
   801  06D1                     u180:
   802  06D1                     l146:
   803  06D1  0008               	return
   804  06D2                     __end_of_UART_DATA_Write:
   805                           
   806                           	psect	text4
   807  06F2                     __ptext4:	
   808 ;; *************** function _UART_Init *****************
   809 ;; Defined at:
   810 ;;		line 15 in file "UART_Library.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      unsigned char 
   817 ;; Registers used:
   818 ;;		wreg, status,2
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _UART_Init
   839  06F2                     _UART_Init:
   840  06F2                     l956:	
   841                           ;incstack = 0
   842                           ; Regs used in _UART_Init: [wreg+status,2]
   843                           
   844                           
   845                           ;UART_Library.c: 16:         BRGH = 1;
   846  06F2  1683               	bsf	3,5	;RP0=1, select bank1
   847  06F3  1303               	bcf	3,6	;RP1=0, select bank1
   848  06F4  1518               	bsf	24,2	;volatile
   849  06F5                     l958:
   850                           
   851                           ;UART_Library.c: 17:         SPBRGH = 0;
   852  06F5  019A               	clrf	26	;volatile
   853  06F6                     l960:
   854                           
   855                           ;UART_Library.c: 18:         SPBRG = 25;
   856  06F6  3019               	movlw	25
   857  06F7  0099               	movwf	25	;volatile
   858  06F8                     l962:
   859                           
   860                           ;UART_Library.c: 19:         SYNC = 0;
   861  06F8  1218               	bcf	24,4	;volatile
   862  06F9                     l964:
   863                           
   864                           ;UART_Library.c: 20:         SPEN = 1;
   865  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   866  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   867  06FB  1798               	bsf	24,7	;volatile
   868  06FC                     l966:
   869                           
   870                           ;UART_Library.c: 21:         TX9 = 0;
   871  06FC  1683               	bsf	3,5	;RP0=1, select bank1
   872  06FD  1303               	bcf	3,6	;RP1=0, select bank1
   873  06FE  1318               	bcf	24,6	;volatile
   874  06FF                     l968:
   875                           
   876                           ;UART_Library.c: 22:         TRISC7 = 1;
   877  06FF  1787               	bsf	7,7	;volatile
   878  0700                     l970:
   879                           
   880                           ;UART_Library.c: 23:         TRISC6 = 0;
   881  0700  1307               	bcf	7,6	;volatile
   882  0701                     l972:
   883                           
   884                           ;UART_Library.c: 24:         CREN = 1;
   885  0701  1283               	bcf	3,5	;RP0=0, select bank0
   886  0702  1303               	bcf	3,6	;RP1=0, select bank0
   887  0703  1618               	bsf	24,4	;volatile
   888  0704                     l974:
   889                           
   890                           ;UART_Library.c: 25:         TXEN = 1;
   891  0704  1683               	bsf	3,5	;RP0=1, select bank1
   892  0705  1303               	bcf	3,6	;RP1=0, select bank1
   893  0706  1698               	bsf	24,5	;volatile
   894  0707                     l134:
   895  0707  0008               	return
   896  0708                     __end_of_UART_Init:
   897                           
   898                           	psect	text5
   899  0708                     __ptext5:	
   900 ;; *************** function _Read_esp32 *****************
   901 ;; Defined at:
   902 ;;		line 99 in file "mcu_16f887.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      unsigned char 
   909 ;; Registers used:
   910 ;;		wreg, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          2       0       0       0       0
   919 ;;      Totals:         2       0       0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    1
   923 ;; This function calls:
   924 ;;		_UART_DATA_Read
   925 ;;		_UART_DATA_Ready
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _Read_esp32
   933  0708                     _Read_esp32:
   934  0708                     l980:	
   935                           ;incstack = 0
   936                           ; Regs used in _Read_esp32: [wreg+pclath+cstack]
   937                           
   938                           
   939                           ;mcu_16f887.c: 100:     if(UART_DATA_Ready()){
   940  0708  120A  118A  26B8  120A  118A  	fcall	_UART_DATA_Ready
   941  070D  3A00               	xorlw	0
   942  070E  1903               	skipnz
   943  070F  2F11               	goto	u271
   944  0710  2F12               	goto	u270
   945  0711                     u271:
   946  0711  2F23               	goto	l55
   947  0712                     u270:
   948  0712                     l982:
   949                           
   950                           ;mcu_16f887.c: 101:         PORTD = UART_DATA_Read();
   951  0712  120A  118A  26BE  120A  118A  	fcall	_UART_DATA_Read
   952  0717  1283               	bcf	3,5	;RP0=0, select bank0
   953  0718  1303               	bcf	3,6	;RP1=0, select bank0
   954  0719  0088               	movwf	8	;volatile
   955  071A                     l984:
   956                           
   957                           ;mcu_16f887.c: 102:         _delay((unsigned long)((100)*(4000000/4000.0)));
   958  071A  3082               	movlw	130
   959  071B  00F1               	movwf	??_Read_esp32+1
   960  071C  30DD               	movlw	221
   961  071D  00F0               	movwf	??_Read_esp32
   962  071E                     u347:
   963  071E  0BF0               	decfsz	??_Read_esp32,f
   964  071F  2F1E               	goto	u347
   965  0720  0BF1               	decfsz	??_Read_esp32+1,f
   966  0721  2F1E               	goto	u347
   967  0722  2F23               	nop2
   968  0723                     l55:
   969  0723  0008               	return
   970  0724                     __end_of_Read_esp32:
   971                           
   972                           	psect	text6
   973  06B8                     __ptext6:	
   974 ;; *************** function _UART_DATA_Ready *****************
   975 ;; Defined at:
   976 ;;		line 38 in file "UART_Library.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      unsigned char 
   983 ;; Registers used:
   984 ;;		wreg
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_Read_esp32
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _UART_DATA_Ready
  1005  06B8                     _UART_DATA_Ready:
  1006  06B8                     l902:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _UART_DATA_Ready: [wreg]
  1009                           
  1010                           
  1011                           ;UART_Library.c: 39:     return RCIF;
  1012  06B8  3000               	movlw	0
  1013  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1014  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1015  06BB  1A8C               	btfsc	12,5	;volatile
  1016  06BC  3001               	movlw	1
  1017  06BD                     l149:
  1018  06BD  0008               	return
  1019  06BE                     __end_of_UART_DATA_Ready:
  1020                           
  1021                           	psect	text7
  1022  06BE                     __ptext7:	
  1023 ;; *************** function _UART_DATA_Read *****************
  1024 ;; Defined at:
  1025 ;;		line 28 in file "UART_Library.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      unsigned char 
  1032 ;; Registers used:
  1033 ;;		wreg
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_Read_esp32
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function _UART_DATA_Read
  1054  06BE                     _UART_DATA_Read:
  1055  06BE                     l906:	
  1056                           ;incstack = 0
  1057                           ; Regs used in _UART_DATA_Read: [wreg]
  1058                           
  1059  06BE                     l137:	
  1060                           ;UART_Library.c: 29:     while (!PIR1bits.RCIF);
  1061                           
  1062  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1063  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1064  06C0  1E8C               	btfss	12,5	;volatile
  1065  06C1  2EC3               	goto	u171
  1066  06C2  2EC4               	goto	u170
  1067  06C3                     u171:
  1068  06C3  2EBE               	goto	l137
  1069  06C4                     u170:
  1070  06C4                     l908:
  1071                           
  1072                           ;UART_Library.c: 30:     return RCREG;
  1073  06C4  081A               	movf	26,w	;volatile
  1074  06C5                     l140:
  1075  06C5  0008               	return
  1076  06C6                     __end_of_UART_DATA_Read:
  1077                           
  1078                           	psect	text8
  1079  0751                     __ptext8:	
  1080 ;; *************** function _I2C_Master_Init *****************
  1081 ;; Defined at:
  1082 ;;		line 16 in file "I2C_Library.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  c               4    0[BANK0 ] const unsigned long 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       4       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       4       0       0       0
  1099 ;;      Totals:         0       8       0       0       0
  1100 ;;Total ram usage:        8 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		___lldiv
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _I2C_Master_Init
  1112  0751                     _I2C_Master_Init:
  1113  0751                     l944:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;I2C_Library.c: 17:     SSPADD = (8000000/(4*c))-1;
  1119  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0753  0820               	movf	I2C_Master_Init@c,w
  1122  0754  00A4               	movwf	??_I2C_Master_Init
  1123  0755  0821               	movf	I2C_Master_Init@c+1,w
  1124  0756  00A5               	movwf	??_I2C_Master_Init+1
  1125  0757  0822               	movf	I2C_Master_Init@c+2,w
  1126  0758  00A6               	movwf	??_I2C_Master_Init+2
  1127  0759  0823               	movf	I2C_Master_Init@c+3,w
  1128  075A  00A7               	movwf	??_I2C_Master_Init+3
  1129  075B  3002               	movlw	2
  1130  075C                     u265:
  1131  075C  1003               	clrc
  1132  075D  0DA4               	rlf	??_I2C_Master_Init,f
  1133  075E  0DA5               	rlf	??_I2C_Master_Init+1,f
  1134  075F  0DA6               	rlf	??_I2C_Master_Init+2,f
  1135  0760  0DA7               	rlf	??_I2C_Master_Init+3,f
  1136  0761                     u260:
  1137  0761  3EFF               	addlw	-1
  1138  0762  1D03               	skipz
  1139  0763  2F5C               	goto	u265
  1140  0764  0827               	movf	??_I2C_Master_Init+3,w
  1141  0765  00F3               	movwf	___lldiv@divisor+3
  1142  0766  0826               	movf	??_I2C_Master_Init+2,w
  1143  0767  00F2               	movwf	___lldiv@divisor+2
  1144  0768  0825               	movf	??_I2C_Master_Init+1,w
  1145  0769  00F1               	movwf	___lldiv@divisor+1
  1146  076A  0824               	movf	??_I2C_Master_Init,w
  1147  076B  00F0               	movwf	___lldiv@divisor
  1148  076C  3000               	movlw	0
  1149  076D  00F7               	movwf	___lldiv@dividend+3
  1150  076E  307A               	movlw	122
  1151  076F  00F6               	movwf	___lldiv@dividend+2
  1152  0770  3012               	movlw	18
  1153  0771  00F5               	movwf	___lldiv@dividend+1
  1154  0772  3000               	movlw	0
  1155  0773  00F4               	movwf	___lldiv@dividend
  1156  0774  120A  118A  2789  120A  118A  	fcall	___lldiv
  1157  0779  0870               	movf	?___lldiv,w
  1158  077A  3EFF               	addlw	255
  1159  077B  1683               	bsf	3,5	;RP0=1, select bank1
  1160  077C  1303               	bcf	3,6	;RP1=0, select bank1
  1161  077D  0093               	movwf	19	;volatile
  1162  077E                     l946:
  1163                           
  1164                           ;I2C_Library.c: 18:     SSPSTAT = 0b00000000;
  1165  077E  0194               	clrf	20	;volatile
  1166  077F                     l948:
  1167                           
  1168                           ;I2C_Library.c: 19:     SSPCON = 0b00101000;
  1169  077F  3028               	movlw	40
  1170  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0782  0094               	movwf	20	;volatile
  1173  0783                     l950:
  1174                           
  1175                           ;I2C_Library.c: 21:     SSPCON2 = 0b00000000;
  1176  0783  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0784  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0785  0191               	clrf	17	;volatile
  1179  0786                     l952:
  1180                           
  1181                           ;I2C_Library.c: 23:     TRISCbits.TRISC3 = 1;
  1182  0786  1587               	bsf	7,3	;volatile
  1183  0787                     l954:
  1184                           
  1185                           ;I2C_Library.c: 24:     TRISCbits.TRISC4 = 1;
  1186  0787  1607               	bsf	7,4	;volatile
  1187  0788                     l78:
  1188  0788  0008               	return
  1189  0789                     __end_of_I2C_Master_Init:
  1190                           
  1191                           	psect	text9
  1192  0789                     __ptext9:	
  1193 ;; *************** function ___lldiv *****************
  1194 ;; Defined at:
  1195 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  divisor         4    0[COMMON] unsigned long 
  1198 ;;  dividend        4    4[COMMON] unsigned long 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  quotient        4    9[COMMON] unsigned long 
  1201 ;;  counter         1   13[COMMON] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  4    0[COMMON] unsigned long 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         8       0       0       0       0
  1212 ;;      Locals:         5       0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0
  1214 ;;      Totals:        14       0       0       0       0
  1215 ;;Total ram usage:       14 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_I2C_Master_Init
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function ___lldiv
  1226  0789                     ___lldiv:
  1227  0789                     l914:	
  1228                           ;incstack = 0
  1229                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1230                           
  1231  0789  3000               	movlw	0
  1232  078A  00FC               	movwf	___lldiv@quotient+3
  1233  078B  3000               	movlw	0
  1234  078C  00FB               	movwf	___lldiv@quotient+2
  1235  078D  3000               	movlw	0
  1236  078E  00FA               	movwf	___lldiv@quotient+1
  1237  078F  3000               	movlw	0
  1238  0790  00F9               	movwf	___lldiv@quotient
  1239  0791  0873               	movf	___lldiv@divisor+3,w
  1240  0792  0472               	iorwf	___lldiv@divisor+2,w
  1241  0793  0471               	iorwf	___lldiv@divisor+1,w
  1242  0794  0470               	iorwf	___lldiv@divisor,w
  1243  0795  1903               	skipnz
  1244  0796  2F98               	goto	u191
  1245  0797  2F99               	goto	u190
  1246  0798                     u191:
  1247  0798  2FE6               	goto	l934
  1248  0799                     u190:
  1249  0799                     l916:
  1250  0799  01FD               	clrf	___lldiv@counter
  1251  079A  0AFD               	incf	___lldiv@counter,f
  1252  079B  2FA9               	goto	l920
  1253  079C                     l918:
  1254  079C  3001               	movlw	1
  1255  079D  00F8               	movwf	??___lldiv
  1256  079E                     u205:
  1257  079E  1003               	clrc
  1258  079F  0DF0               	rlf	___lldiv@divisor,f
  1259  07A0  0DF1               	rlf	___lldiv@divisor+1,f
  1260  07A1  0DF2               	rlf	___lldiv@divisor+2,f
  1261  07A2  0DF3               	rlf	___lldiv@divisor+3,f
  1262  07A3  0BF8               	decfsz	??___lldiv,f
  1263  07A4  2F9E               	goto	u205
  1264  07A5  3001               	movlw	1
  1265  07A6  00F8               	movwf	??___lldiv
  1266  07A7  0878               	movf	??___lldiv,w
  1267  07A8  07FD               	addwf	___lldiv@counter,f
  1268  07A9                     l920:
  1269  07A9  1FF3               	btfss	___lldiv@divisor+3,7
  1270  07AA  2FAC               	goto	u211
  1271  07AB  2FAD               	goto	u210
  1272  07AC                     u211:
  1273  07AC  2F9C               	goto	l918
  1274  07AD                     u210:
  1275  07AD                     l922:
  1276  07AD  3001               	movlw	1
  1277  07AE  00F8               	movwf	??___lldiv
  1278  07AF                     u225:
  1279  07AF  1003               	clrc
  1280  07B0  0DF9               	rlf	___lldiv@quotient,f
  1281  07B1  0DFA               	rlf	___lldiv@quotient+1,f
  1282  07B2  0DFB               	rlf	___lldiv@quotient+2,f
  1283  07B3  0DFC               	rlf	___lldiv@quotient+3,f
  1284  07B4  0BF8               	decfsz	??___lldiv,f
  1285  07B5  2FAF               	goto	u225
  1286  07B6                     l924:
  1287  07B6  0873               	movf	___lldiv@divisor+3,w
  1288  07B7  0277               	subwf	___lldiv@dividend+3,w
  1289  07B8  1D03               	skipz
  1290  07B9  2FC4               	goto	u235
  1291  07BA  0872               	movf	___lldiv@divisor+2,w
  1292  07BB  0276               	subwf	___lldiv@dividend+2,w
  1293  07BC  1D03               	skipz
  1294  07BD  2FC4               	goto	u235
  1295  07BE  0871               	movf	___lldiv@divisor+1,w
  1296  07BF  0275               	subwf	___lldiv@dividend+1,w
  1297  07C0  1D03               	skipz
  1298  07C1  2FC4               	goto	u235
  1299  07C2  0870               	movf	___lldiv@divisor,w
  1300  07C3  0274               	subwf	___lldiv@dividend,w
  1301  07C4                     u235:
  1302  07C4  1C03               	skipc
  1303  07C5  2FC7               	goto	u231
  1304  07C6  2FC8               	goto	u230
  1305  07C7                     u231:
  1306  07C7  2FD7               	goto	l930
  1307  07C8                     u230:
  1308  07C8                     l926:
  1309  07C8  0870               	movf	___lldiv@divisor,w
  1310  07C9  02F4               	subwf	___lldiv@dividend,f
  1311  07CA  0871               	movf	___lldiv@divisor+1,w
  1312  07CB  1C03               	skipc
  1313  07CC  0F71               	incfsz	___lldiv@divisor+1,w
  1314  07CD  02F5               	subwf	___lldiv@dividend+1,f
  1315  07CE  0872               	movf	___lldiv@divisor+2,w
  1316  07CF  1C03               	skipc
  1317  07D0  0F72               	incfsz	___lldiv@divisor+2,w
  1318  07D1  02F6               	subwf	___lldiv@dividend+2,f
  1319  07D2  0873               	movf	___lldiv@divisor+3,w
  1320  07D3  1C03               	skipc
  1321  07D4  0F73               	incfsz	___lldiv@divisor+3,w
  1322  07D5  02F7               	subwf	___lldiv@dividend+3,f
  1323  07D6                     l928:
  1324  07D6  1479               	bsf	___lldiv@quotient,0
  1325  07D7                     l930:
  1326  07D7  3001               	movlw	1
  1327  07D8                     u245:
  1328  07D8  1003               	clrc
  1329  07D9  0CF3               	rrf	___lldiv@divisor+3,f
  1330  07DA  0CF2               	rrf	___lldiv@divisor+2,f
  1331  07DB  0CF1               	rrf	___lldiv@divisor+1,f
  1332  07DC  0CF0               	rrf	___lldiv@divisor,f
  1333  07DD  3EFF               	addlw	-1
  1334  07DE  1D03               	skipz
  1335  07DF  2FD8               	goto	u245
  1336  07E0                     l932:
  1337  07E0  3001               	movlw	1
  1338  07E1  02FD               	subwf	___lldiv@counter,f
  1339  07E2  1D03               	btfss	3,2
  1340  07E3  2FE5               	goto	u251
  1341  07E4  2FE6               	goto	u250
  1342  07E5                     u251:
  1343  07E5  2FAD               	goto	l922
  1344  07E6                     u250:
  1345  07E6                     l934:
  1346  07E6  087C               	movf	___lldiv@quotient+3,w
  1347  07E7  00F3               	movwf	?___lldiv+3
  1348  07E8  087B               	movf	___lldiv@quotient+2,w
  1349  07E9  00F2               	movwf	?___lldiv+2
  1350  07EA  087A               	movf	___lldiv@quotient+1,w
  1351  07EB  00F1               	movwf	?___lldiv+1
  1352  07EC  0879               	movf	___lldiv@quotient,w
  1353  07ED  00F0               	movwf	?___lldiv
  1354  07EE                     l280:
  1355  07EE  0008               	return
  1356  07EF                     __end_of___lldiv:
  1357  007E                     btemp	set	126	;btemp
  1358  007E                     wtemp0	set	126
  1359                           
  1360                           	psect	config
  1361                           
  1362                           ;Config register CONFIG1 @ 0x2007
  1363                           ;	Oscillator Selection bits
  1364                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1365                           ;	Watchdog Timer Enable bit
  1366                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1367                           ;	Power-up Timer Enable bit
  1368                           ;	PWRTE = OFF, PWRT disabled
  1369                           ;	RE3/MCLR pin function select bit
  1370                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1371                           ;	Code Protection bit
  1372                           ;	CP = OFF, Program memory code protection is disabled
  1373                           ;	Data Code Protection bit
  1374                           ;	CPD = OFF, Data memory code protection is disabled
  1375                           ;	Brown Out Reset Selection bits
  1376                           ;	BOREN = OFF, BOR disabled
  1377                           ;	Internal External Switchover bit
  1378                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1379                           ;	Fail-Safe Clock Monitor Enabled bit
  1380                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1381                           ;	Low Voltage Programming Enable bit
  1382                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1383                           ;	In-Circuit Debugger Mode bit
  1384                           ;	DEBUG = 0x1, unprogrammed default
  1385  2007                     	org	8199
  1386  2007  20D5               	dw	8405
  1387                           
  1388                           ;Config register CONFIG2 @ 0x2008
  1389                           ;	Brown-out Reset Selection bit
  1390                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1391                           ;	Flash Program Memory Self Write Enable bits
  1392                           ;	WRT = OFF, Write protection off
  1393  2008                     	org	8200
  1394  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Write_esp32->_UART_DATA_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     434
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                         _Read_esp32
                          _UART_Init
                        _Write_esp32
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_esp32                                          2     2      0      22
                                              1 COMMON     2     2      0
                    _UART_DATA_Write
 ---------------------------------------------------------------------------------
 (2) _UART_DATA_Write                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_esp32                                           2     2      0       0
                                              0 COMMON     2     2      0
                     _UART_DATA_Read
                    _UART_DATA_Ready
 ---------------------------------------------------------------------------------
 (2) _UART_DATA_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_DATA_Read                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Read_esp32
     _UART_DATA_Read
     _UART_DATA_Ready
   _UART_Init
   _Write_esp32
     _UART_DATA_Write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 17:44:08 2021

                      l51 06DF                        l55 0723                        l58 06F1  
                      l78 0788                       l140 06C5                       l134 0707  
                     l143 06CB                       l137 06BE                       l146 06D1  
                     l149 06BD                       l280 07EE                       l902 06B8  
                     l920 07A9                       l912 06C7                       l930 07D7  
                     l922 07AD                       l914 0789                       l906 06BE  
                     l932 07E0                       l924 07B6                       l916 0799  
                     l908 06C4                       l940 06D8                       l926 07C8  
                     l918 079C                       l934 07E6                       l950 0783  
                     l942 06DC                       l928 07D6                       l952 0786  
                     l944 0751                       l960 06F6                       l954 0787  
                     l946 077E                       l970 0700                       l962 06F8  
                     l938 06D2                       l948 077F                       l980 0708  
                     l972 0701                       l964 06F9                       l956 06F2  
                     l982 0712                       l974 0704                       l966 06FC  
                     l958 06F5                       l990 0724                       l984 071A  
                     l968 06FF                       l976 06E0                       l992 073D  
                     l978 06E8                       l994 0743                       l996 0748  
                     u210 07AD                       u211 07AC                       u205 079E  
                     u230 07C8                       u231 07C7                       u225 07AF  
                     u250 07E6                       u170 06C4                       u251 07E5  
                     u235 07C4                       u171 06C3                       u260 0761  
                     u180 06D1                       u245 07D8                       u181 06D0  
                     u190 0799                       u270 0712                       u191 0798  
                     u271 0711                       u265 075C                       u337 06EC  
                     u347 071E                       _TX9 04C6      __size_of_Write_esp32 0012  
 __size_of_UART_DATA_Read 0008                      _BRGH 04C2                      _CREN 00C4  
                    _RCIF 0065                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4                      _main 0724  
                    _temp 002B                      btemp 007E                      start 0000  
        ?_I2C_Master_Init 0020                     ?_main 0070           __end_of___lldiv 07EF  
__size_of_UART_DATA_Ready 0006                     _RCREG 001A  __size_of_UART_DATA_Write 000C  
                   _SPBRG 0099                     _PORTC 0007                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088                     _TXREG 0019  
      __size_of_UART_Init 0016                     _setup 06D2                     status 0003  
                   wtemp0 007E           __initialization 07EF              __end_of_main 0751  
              _Read_esp32 0708                    ??_main 0028                    ?_setup 0070  
                  _SPBRGH 009A                    _SSPADD 0093                    _TRISC6 043E  
                  _TRISC7 043F                    _SSPCON 0014                    _SSPBUF 0013  
       __end_of_UART_Init 0708                 ??___lldiv 0078                    _sensor 002A  
       ??_UART_DATA_Ready 0070            _UART_DATA_Read 06BE         ??_UART_DATA_Write 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070              __pidataBANK0 06B6  
             ?_Read_esp32 0070             __end_of_setup 06E0    __end_of_UART_DATA_Read 06C6  
                 ??_setup 0070                __pbssBANK0 002B                __pmaintext 0724  
           ??_Write_esp32 0071           ?_UART_DATA_Read 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094       __size_of_Read_esp32 001C                   ___lldiv 0789  
                 _address 0029                   __ptext1 06D2                   __ptext2 06E0  
                 __ptext3 06C6                   __ptext4 06F2                   __ptext5 0708  
                 __ptext6 06B8                   __ptext7 06BE                   __ptext8 0751  
                 __ptext9 0789  __size_of_I2C_Master_Init 0038       __end_of_Write_esp32 06F2  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
        I2C_Master_Init@c 0020                 _UART_Init 06F2           _UART_DATA_Ready 06B8  
         _UART_DATA_Write 06C6                 _TRISCbits 0087                 _TXSTAbits 0098  
            ??_Read_esp32 0070                ?_UART_Init 0070               _Write_esp32 06E0  
     start_initialization 07EF         ??_I2C_Master_Init 0024        __end_of_Read_esp32 0724  
 __end_of_UART_DATA_Ready 06BE   __end_of_UART_DATA_Write 06D2               __pdataBANK0 0029  
        ??_UART_DATA_Read 0070                 ___latbits 0002             __pcstackBANK0 0020  
                ?___lldiv 0070               ??_UART_Init 0070            __size_of_setup 000E  
                _PIR1bits 000C          ?_UART_DATA_Ready 0070          ?_UART_DATA_Write 0070  
        __size_of___lldiv 0066              ?_Write_esp32 0070           _I2C_Master_Init 0751  
           __size_of_main 002D       UART_DATA_Write@data 0070          ___lldiv@dividend 0074  
 __end_of_I2C_Master_Init 0789          ___lldiv@quotient 0079               _SSPCON2bits 0091  
