

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:12:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0014                     _SSPCON	set	20
   366  0013                     _SSPBUF	set	19
   367  000B                     _INTCON	set	11
   368  0006                     _PORTB	set	6
   369  0006                     _PORTBbits	set	6
   370  000B                     _INTCONbits	set	11
   371  0008                     _PORTD	set	8
   372  000C                     _PIR1bits	set	12
   373  0094                     _SSPSTAT	set	148
   374  008C                     _PIE1bits	set	140
   375  0087                     _TRISCbits	set	135
   376  0094                     _SSPSTATbits	set	148
   377  0096                     _IOCB	set	150
   378  0086                     _TRISB	set	134
   379  0088                     _TRISD	set	136
   380  0085                     _TRISA	set	133
   381  043B                     _TRISC3	set	1083
   382  043D                     _TRISC5	set	1085
   383  0189                     _ANSELH	set	393
   384  0188                     _ANSEL	set	392
   385                           
   386                           	psect	cinit
   387  000F                     start_initialization:	
   388                           ; #config settings
   389                           
   390  000F                     __initialization:
   391                           
   392                           ; Clear objects allocated to COMMON
   393  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   394  0010                     end_of_initialization:	
   395                           ;End of C runtime variable initialization code
   396                           
   397  0010                     __end_of__initialization:
   398  0010  0183               	clrf	3
   399  0011  120A  118A  2848   	ljmp	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMMON
   402  0078                     __pbssCOMMON:
   403  0078                     _temp:
   404  0078                     	ds	1
   405                           
   406                           	psect	cstackCOMMON
   407  0070                     __pcstackCOMMON:
   408  0070                     ?_spiRead:
   409  0070                     ??_spiRead:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_spiWrite:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_spiWrite:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_setup:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_isr:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiReceiveWait:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiReceiveWait:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     spiWrite@dat:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 1 bytes @ 0x0
   438  0070                     	ds	1
   439  0071                     ??_isr:
   440                           
   441                           ; 1 bytes @ 0x1
   442  0071                     	ds	3
   443  0074                     ??_setup:
   444  0074                     ?_spiInit:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     spiInit@sDataSample:	
   448                           ; 1 bytes @ 0x4
   449                           
   450                           
   451                           ; 1 bytes @ 0x4
   452  0074                     	ds	1
   453  0075                     spiInit@sClockIdle:
   454                           
   455                           ; 1 bytes @ 0x5
   456  0075                     	ds	1
   457  0076                     spiInit@sTransmitEdge:
   458                           
   459                           ; 1 bytes @ 0x6
   460  0076                     	ds	1
   461  0077                     ??_spiInit:
   462  0077                     spiInit@sType:	
   463                           ; 1 bytes @ 0x7
   464                           
   465                           
   466                           ; 1 bytes @ 0x7
   467  0077                     	ds	1
   468                           
   469                           	psect	cstackBANK0
   470  0020                     __pcstackBANK0:
   471  0020                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x0
   474  0020                     	ds	2
   475                           
   476                           	psect	maintext
   477  0048                     __pmaintext:	
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 84 in file "mcu3_slain.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B00/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          0       2       0       0       0
   500 ;;      Totals:         0       2       0       0       0
   501 ;;Total ram usage:        2 bytes
   502 ;; Hardware stack levels required when called:    4
   503 ;; This function calls:
   504 ;;		_setup
   505 ;;		_spiInit
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _main
   513  0048                     _main:
   514  0048                     l816:	
   515                           ;incstack = 0
   516                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   517                           
   518                           
   519                           ;mcu3_slain.c: 85:     setup();
   520  0048  120A  118A  2064  120A  118A  	fcall	_setup
   521                           
   522                           ;mcu3_slain.c: 86:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   523  004D  01F4               	clrf	spiInit@sDataSample
   524  004E  01F5               	clrf	spiInit@sClockIdle
   525  004F  01F6               	clrf	spiInit@sTransmitEdge
   526  0050  3024               	movlw	36
   527  0051  120A  118A  207E  120A  118A  	fcall	_spiInit
   528  0056                     l818:
   529                           
   530                           ;mcu3_slain.c: 92:         _delay((unsigned long)((1)*(8000000/4000.0)));
   531  0056  3003               	movlw	3
   532  0057  1283               	bcf	3,5	;RP0=0, select bank0
   533  0058  1303               	bcf	3,6	;RP1=0, select bank0
   534  0059  00A1               	movwf	??_main+1
   535  005A  3097               	movlw	151
   536  005B  00A0               	movwf	??_main
   537  005C                     u97:
   538  005C  0BA0               	decfsz	??_main,f
   539  005D  285C               	goto	u97
   540  005E  0BA1               	decfsz	??_main+1,f
   541  005F  285C               	goto	u97
   542  0060  2856               	goto	l818
   543  0061  120A  118A  280C   	ljmp	start
   544  0064                     __end_of_main:
   545                           
   546                           	psect	text1
   547  007E                     __ptext1:	
   548 ;; *************** function _spiInit *****************
   549 ;; Defined at:
   550 ;;		line 12 in file "spi.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  sType           1    wreg     enum E1264
   553 ;;  sDataSample     1    4[COMMON] enum E1272
   554 ;;  sClockIdle      1    5[COMMON] enum E1276
   555 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  sType           1    7[COMMON] enum E1264
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         3       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         4       0       0       0       0
   571 ;;Total ram usage:        4 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    3
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _spiInit
   583  007E                     _spiInit:
   584                           
   585                           ;incstack = 0
   586                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   587                           ;spiInit@sType stored from wreg
   588  007E  00F7               	movwf	spiInit@sType
   589  007F                     l802:
   590                           
   591                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   592  007F  1683               	bsf	3,5	;RP0=1, select bank1
   593  0080  1303               	bcf	3,6	;RP1=0, select bank1
   594  0081  1287               	bcf	7,5	;volatile
   595                           
   596                           ;spi.c: 15:     if(sType & 0b00000100)
   597  0082  1D77               	btfss	spiInit@sType,2
   598  0083  2885               	goto	u81
   599  0084  2886               	goto	u80
   600  0085                     u81:
   601  0085  288A               	goto	l808
   602  0086                     u80:
   603  0086                     l804:
   604                           
   605                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   606  0086  0876               	movf	spiInit@sTransmitEdge,w
   607  0087  0094               	movwf	20	;volatile
   608  0088                     l806:
   609                           
   610                           ;spi.c: 18:         TRISC3 = 1;
   611  0088  1587               	bsf	7,3	;volatile
   612                           
   613                           ;spi.c: 19:     }
   614  0089  288E               	goto	l104
   615  008A                     l808:
   616                           
   617                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   618  008A  0874               	movf	spiInit@sDataSample,w
   619  008B  0476               	iorwf	spiInit@sTransmitEdge,w
   620  008C  0094               	movwf	20	;volatile
   621  008D                     l810:
   622                           
   623                           ;spi.c: 23:         TRISC3 = 0;
   624  008D  1187               	bcf	7,3	;volatile
   625  008E                     l104:	
   626                           ;spi.c: 24:     }
   627                           
   628                           
   629                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   630  008E  0877               	movf	spiInit@sType,w
   631  008F  0475               	iorwf	spiInit@sClockIdle,w
   632  0090  1283               	bcf	3,5	;RP0=0, select bank0
   633  0091  1303               	bcf	3,6	;RP1=0, select bank0
   634  0092  0094               	movwf	20	;volatile
   635  0093                     l105:
   636  0093  0008               	return
   637  0094                     __end_of_spiInit:
   638                           
   639                           	psect	text2
   640  0064                     __ptext2:	
   641 ;; *************** function _setup *****************
   642 ;; Defined at:
   643 ;;		line 100 in file "mcu3_slain.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    3
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _setup
   673  0064                     _setup:
   674  0064                     l724:	
   675                           ;incstack = 0
   676                           ; Regs used in _setup: [wreg+status,2]
   677                           
   678                           
   679                           ;mcu3_slain.c: 101:     TRISA = 0b00100000;
   680  0064  3020               	movlw	32
   681  0065  1683               	bsf	3,5	;RP0=1, select bank1
   682  0066  1303               	bcf	3,6	;RP1=0, select bank1
   683  0067  0085               	movwf	5	;volatile
   684  0068                     l726:
   685                           
   686                           ;mcu3_slain.c: 102:     TRISD = 0x00;
   687  0068  0188               	clrf	8	;volatile
   688  0069                     l728:
   689                           
   690                           ;mcu3_slain.c: 103:     PORTD = 0x00;
   691  0069  1283               	bcf	3,5	;RP0=0, select bank0
   692  006A  1303               	bcf	3,6	;RP1=0, select bank0
   693  006B  0188               	clrf	8	;volatile
   694                           
   695                           ;mcu3_slain.c: 104:     TRISB = 0x03;
   696  006C  3003               	movlw	3
   697  006D  1683               	bsf	3,5	;RP0=1, select bank1
   698  006E  1303               	bcf	3,6	;RP1=0, select bank1
   699  006F  0086               	movwf	6	;volatile
   700  0070                     l730:
   701                           
   702                           ;mcu3_slain.c: 105:     PORTB = 0;
   703  0070  1283               	bcf	3,5	;RP0=0, select bank0
   704  0071  1303               	bcf	3,6	;RP1=0, select bank0
   705  0072  0186               	clrf	6	;volatile
   706  0073                     l732:
   707                           
   708                           ;mcu3_slain.c: 106:     ANSEL = 0;
   709  0073  1683               	bsf	3,5	;RP0=1, select bank3
   710  0074  1703               	bsf	3,6	;RP1=1, select bank3
   711  0075  0188               	clrf	8	;volatile
   712  0076                     l734:
   713                           
   714                           ;mcu3_slain.c: 107:     ANSELH = 0;
   715  0076  0189               	clrf	9	;volatile
   716  0077                     l736:
   717                           
   718                           ;mcu3_slain.c: 108:     INTCON = 0b11001000;
   719  0077  30C8               	movlw	200
   720  0078  008B               	movwf	11	;volatile
   721  0079                     l738:
   722                           
   723                           ;mcu3_slain.c: 109:     IOCB = 0x03;
   724  0079  3003               	movlw	3
   725  007A  1683               	bsf	3,5	;RP0=1, select bank1
   726  007B  1303               	bcf	3,6	;RP1=0, select bank1
   727  007C  0096               	movwf	22	;volatile
   728  007D                     l56:
   729  007D  0008               	return
   730  007E                     __end_of_setup:
   731                           
   732                           	psect	text3
   733  0014                     __ptext3:	
   734 ;; *************** function _isr *****************
   735 ;; Defined at:
   736 ;;		line 52 in file "mcu3_slain.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          3       0       0       0       0
   753 ;;      Totals:         3       0       0       0       0
   754 ;;Total ram usage:        3 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    2
   757 ;; This function calls:
   758 ;;		_spiRead
   759 ;;		_spiWrite
   760 ;; This function is called by:
   761 ;;		Interrupt level 1
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _isr
   767  0014                     _isr:
   768  0014                     i1l752:
   769                           
   770                           ;mcu3_slain.c: 55:     if (PIR1bits.SSPIF == 1) {
   771  0014  1283               	bcf	3,5	;RP0=0, select bank0
   772  0015  1303               	bcf	3,6	;RP1=0, select bank0
   773  0016  1D8C               	btfss	12,3	;volatile
   774  0017  2819               	goto	u4_21
   775  0018  281A               	goto	u4_20
   776  0019                     u4_21:
   777  0019  282B               	goto	i1l758
   778  001A                     u4_20:
   779  001A                     i1l754:
   780                           
   781                           ;mcu3_slain.c: 56:         PIR1bits.SSPIF = 0;
   782  001A  118C               	bcf	12,3	;volatile
   783  001B                     i1l756:
   784                           
   785                           ;mcu3_slain.c: 57:         temp = spiRead();
   786  001B  120A  118A  2094  120A  118A  	fcall	_spiRead
   787  0020  00F1               	movwf	??_isr
   788  0021  0871               	movf	??_isr,w
   789  0022  00F8               	movwf	_temp
   790                           
   791                           ;mcu3_slain.c: 58:         spiWrite(PORTD);
   792  0023  1283               	bcf	3,5	;RP0=0, select bank0
   793  0024  1303               	bcf	3,6	;RP1=0, select bank0
   794  0025  0808               	movf	8,w	;volatile
   795  0026  120A  118A  20A4  120A  118A  	fcall	_spiWrite
   796  002B                     i1l758:
   797                           
   798                           ;mcu3_slain.c: 62:     if (INTCONbits.RBIF == 1) {
   799  002B  1C0B               	btfss	11,0	;volatile
   800  002C  282E               	goto	u5_21
   801  002D  282F               	goto	u5_20
   802  002E                     u5_21:
   803  002E  2841               	goto	i1l45
   804  002F                     u5_20:
   805  002F                     i1l760:
   806                           
   807                           ;mcu3_slain.c: 64:         if (PORTBbits.RB0 == 1) {
   808  002F  1283               	bcf	3,5	;RP0=0, select bank0
   809  0030  1303               	bcf	3,6	;RP1=0, select bank0
   810  0031  1C06               	btfss	6,0	;volatile
   811  0032  2834               	goto	u6_21
   812  0033  2835               	goto	u6_20
   813  0034                     u6_21:
   814  0034  283A               	goto	i1l766
   815  0035                     u6_20:
   816  0035                     i1l762:
   817                           
   818                           ;mcu3_slain.c: 65:             PORTD++;
   819  0035  3001               	movlw	1
   820  0036  00F1               	movwf	??_isr
   821  0037  0871               	movf	??_isr,w
   822  0038  0788               	addwf	8,f	;volatile
   823  0039                     i1l764:
   824                           
   825                           ;mcu3_slain.c: 66:             INTCONbits.RBIF = 0;
   826  0039  100B               	bcf	11,0	;volatile
   827  003A                     i1l766:
   828                           
   829                           ;mcu3_slain.c: 69:         if (PORTBbits.RB1 == 1) {
   830  003A  1C86               	btfss	6,1	;volatile
   831  003B  283D               	goto	u7_21
   832  003C  283E               	goto	u7_20
   833  003D                     u7_21:
   834  003D  2841               	goto	i1l45
   835  003E                     u7_20:
   836  003E                     i1l768:
   837                           
   838                           ;mcu3_slain.c: 70:             PORTD--;
   839  003E  3001               	movlw	1
   840  003F  0288               	subwf	8,f	;volatile
   841  0040                     i1l770:
   842                           
   843                           ;mcu3_slain.c: 71:             INTCONbits.RBIF = 0;
   844  0040  100B               	bcf	11,0	;volatile
   845  0041                     i1l45:
   846  0041  0873               	movf	??_isr+2,w
   847  0042  008A               	movwf	10
   848  0043  0E72               	swapf	??_isr+1,w
   849  0044  0083               	movwf	3
   850  0045  0EFE               	swapf	btemp,f
   851  0046  0E7E               	swapf	btemp,w
   852  0047  0009               	retfie
   853  0048                     __end_of_isr:
   854                           
   855                           	psect	intentry
   856  0004                     __pintentry:	
   857                           ;incstack = 0
   858                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   859                           
   860  0004                     interrupt_function:
   861  007E                     saved_w	set	btemp
   862  0004  00FE               	movwf	btemp
   863  0005  0E03               	swapf	3,w
   864  0006  00F2               	movwf	??_isr+1
   865  0007  080A               	movf	10,w
   866  0008  00F3               	movwf	??_isr+2
   867  0009  120A  118A  2814   	ljmp	_isr
   868                           
   869                           	psect	text4
   870  00A4                     __ptext4:	
   871 ;; *************** function _spiWrite *****************
   872 ;; Defined at:
   873 ;;		line 34 in file "spi.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  dat             1    wreg     unsigned char 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  dat             1    0[COMMON] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         1       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_isr
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _spiWrite
   902  00A4                     _spiWrite:
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _spiWrite: [wreg]
   906                           ;spiWrite@dat stored from wreg
   907  00A4  00F0               	movwf	spiWrite@dat
   908  00A5                     i1l722:
   909                           
   910                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   911  00A5  0870               	movf	spiWrite@dat,w
   912  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   913  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   914  00A8  0093               	movwf	19	;volatile
   915  00A9                     i1l114:
   916  00A9  0008               	return
   917  00AA                     __end_of_spiWrite:
   918                           
   919                           	psect	text5
   920  0094                     __ptext5:	
   921 ;; *************** function _spiRead *****************
   922 ;; Defined at:
   923 ;;		line 47 in file "spi.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      unsigned char 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    1
   944 ;; This function calls:
   945 ;;		_spiReceiveWait
   946 ;; This function is called by:
   947 ;;		_isr
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _spiRead
   953  0094                     _spiRead:
   954  0094                     i1l716:	
   955                           ;incstack = 0
   956                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   957                           
   958                           
   959                           ;spi.c: 49:     spiReceiveWait();
   960  0094  120A  118A  209D  120A  118A  	fcall	_spiReceiveWait
   961  0099                     i1l718:
   962                           
   963                           ;spi.c: 50:     return(SSPBUF);
   964  0099  1283               	bcf	3,5	;RP0=0, select bank0
   965  009A  1303               	bcf	3,6	;RP1=0, select bank0
   966  009B  0813               	movf	19,w	;volatile
   967  009C                     i1l122:
   968  009C  0008               	return
   969  009D                     __end_of_spiRead:
   970                           
   971                           	psect	text6
   972  009D                     __ptext6:	
   973 ;; *************** function _spiReceiveWait *****************
   974 ;; Defined at:
   975 ;;		line 29 in file "spi.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		None
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_spiRead
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _spiReceiveWait
  1004  009D                     _spiReceiveWait:
  1005  009D                     i1l714:	
  1006                           ;incstack = 0
  1007                           ; Regs used in _spiReceiveWait: []
  1008                           
  1009  009D                     i1l108:	
  1010                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1011                           
  1012  009D  1683               	bsf	3,5	;RP0=1, select bank1
  1013  009E  1303               	bcf	3,6	;RP1=0, select bank1
  1014  009F  1C14               	btfss	20,0	;volatile
  1015  00A0  28A2               	goto	u1_21
  1016  00A1  28A3               	goto	u1_20
  1017  00A2                     u1_21:
  1018  00A2  289D               	goto	i1l108
  1019  00A3                     u1_20:
  1020  00A3                     i1l111:
  1021  00A3  0008               	return
  1022  00A4                     __end_of_spiReceiveWait:
  1023  007E                     btemp	set	126	;btemp
  1024  007E                     wtemp0	set	126
  1025                           
  1026                           	psect	config
  1027                           
  1028                           ;Config register CONFIG1 @ 0x2007
  1029                           ;	Oscillator Selection bits
  1030                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1031                           ;	Watchdog Timer Enable bit
  1032                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1033                           ;	Power-up Timer Enable bit
  1034                           ;	PWRTE = OFF, PWRT disabled
  1035                           ;	RE3/MCLR pin function select bit
  1036                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1037                           ;	Code Protection bit
  1038                           ;	CP = OFF, Program memory code protection is disabled
  1039                           ;	Data Code Protection bit
  1040                           ;	CPD = OFF, Data memory code protection is disabled
  1041                           ;	Brown Out Reset Selection bits
  1042                           ;	BOREN = OFF, BOR disabled
  1043                           ;	Internal External Switchover bit
  1044                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1045                           ;	Fail-Safe Clock Monitor Enabled bit
  1046                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1047                           ;	Low Voltage Programming Enable bit
  1048                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1049                           ;	In-Circuit Debugger Mode bit
  1050                           ;	DEBUG = 0x1, unprogrammed default
  1051  2007                     	org	8199
  1052  2007  20D4               	dw	8404
  1053                           
  1054                           ;Config register CONFIG2 @ 0x2008
  1055                           ;	Brown-out Reset Selection bit
  1056                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1057                           ;	Flash Program Memory Self Write Enable bits
  1058                           ;	WRT = OFF, Write protection off
  1059  2008                     	org	8200
  1060  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              0 BANK0      2     2      0
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:12:30 2021

            _SSPSTATbits 0094                       l56 007D                       u80 0086  
                     u81 0085                       u97 005C                      l104 008E  
                    l105 0093                      l730 0070                      l810 008D  
                    l802 007F                      l732 0073                      l724 0064  
                    l804 0086                      l734 0076                      l726 0068  
                    l806 0088                      l736 0077                      l728 0069  
                    l808 008A                      l816 0048                      l738 0079  
                    l818 0056                      _isr 0014                     ?_isr 0070  
                   _IOCB 0096                     i1l45 0041                     u1_20 00A3  
                   u1_21 00A2                     u4_20 001A                     u4_21 0019  
                   u5_20 002F                     u5_21 002E                     u6_20 0035  
                   u6_21 0034                     u7_20 003E                     u7_21 003D  
                   _main 0048                     _temp 0078                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l111 00A3                    i1l122 009C  
                  i1l114 00A9                    i1l108 009D                    i1l714 009D  
                  i1l722 00A5                    i1l716 0094                    i1l718 0099  
                  i1l760 002F                    i1l752 0014                    i1l770 0040  
                  i1l762 0035                    i1l754 001A                    i1l764 0039  
                  i1l756 001B                    i1l766 003A                    i1l758 002B  
                  i1l768 003E                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _setup 0064                    pclath 000A          __end_of_spiInit 0094  
        __end_of_spiRead 009D                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0064                   ??_main 0020  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPBUF 0013  
                 _SSPCON 0014                   saved_w 007E         __end_of_spiWrite 00AA  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 007E                  ??_setup 0074  
             __pmaintext 0048               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 007E  
                __ptext2 0064                  __ptext3 0014                  __ptext4 00A4  
                __ptext5 0094                  __ptext6 009D             __size_of_isr 0034  
                _spiInit 007E                  _spiRead 0094     end_of_initialization 0010  
             ??_spiWrite 0070                _PORTBbits 0006                _TRISCbits 0087  
            spiWrite@dat 0070           _spiReceiveWait 009D      start_initialization 000F  
            __end_of_isr 0048   __end_of_spiReceiveWait 00A4              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 001A     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 001C  
               _spiWrite 00A4             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
