

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:43:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	idataBANK0
   301  040D                     __pidataBANK0:
   302                           
   303                           ;initializer for _S1
   304  040D  3401               	retlw	1
   305                           
   306                           	psect	strings
   307  037A                     __pstrings:
   308  037A                     stringtab:
   309  037A                     __stringtab:
   310                           
   311                           ;	String table - string pointers are 1 byte each
   312  037A  1BFF               	btfsc	btemp+1,7
   313  037B  2B84               	ljmp	stringcode
   314  037C  1383               	bcf	3,7
   315  037D  187F               	btfsc	btemp+1,0
   316  037E  1783               	bsf	3,7
   317  037F  0800               	movf	0,w
   318  0380  0A84               	incf	4,f
   319  0381  1903               	skipnz
   320  0382  0AFF               	incf	btemp+1,f
   321  0383  0008               	return
   322  0384                     stringcode:
   323  0384                     stringdir:
   324  0384  3003               	movlw	high stringdir
   325  0385  008A               	movwf	10
   326  0386  0804               	movf	4,w
   327  0387  0A84               	incf	4,f
   328  0388  0782               	addwf	2,f
   329  0389                     __stringbase:
   330  0389  3400               	retlw	0
   331  038A                     __end_of__stringtab:
   332  038A                     _dpowers:
   333  038A  3401               	retlw	1
   334  038B  3400               	retlw	0
   335  038C  340A               	retlw	10
   336  038D  3400               	retlw	0
   337  038E  3464               	retlw	100
   338  038F  3400               	retlw	0
   339  0390  34E8               	retlw	232
   340  0391  3403               	retlw	3
   341  0392  3410               	retlw	16
   342  0393  3427               	retlw	39
   343  0394                     __end_of_dpowers:
   344  0014                     _SSPCON	set	20
   345  0009                     _PORTE	set	9
   346  0008                     _PORTD	set	8
   347  0007                     _PORTC	set	7
   348  0006                     _PORTB	set	6
   349  0005                     _PORTA	set	5
   350  0013                     _SSPBUF	set	19
   351  0006                     _PORTBbits	set	6
   352  0049                     _RE1	set	73
   353  0048                     _RE0	set	72
   354  0047                     _RD7	set	71
   355  0046                     _RD6	set	70
   356  0045                     _RD5	set	69
   357  0044                     _RD4	set	68
   358  0043                     _RD3	set	67
   359  0042                     _RD2	set	66
   360  0041                     _RD1	set	65
   361  0040                     _RD0	set	64
   362  0094                     _SSPSTAT	set	148
   363  0089                     _TRISE	set	137
   364  0088                     _TRISD	set	136
   365  0087                     _TRISC	set	135
   366  0086                     _TRISB	set	134
   367  0085                     _TRISA	set	133
   368  0094                     _SSPSTATbits	set	148
   369  0189                     _ANSELH	set	393
   370  0188                     _ANSEL	set	392
   371  0394                     STR_1:
   372  0394  3453               	retlw	83	;'S'
   373  0395  3431               	retlw	49	;'1'
   374  0396  343A               	retlw	58	;':'
   375  0397  3400               	retlw	0
   376  0398                     STR_2:
   377  0398  3453               	retlw	83	;'S'
   378  0399  3432               	retlw	50	;'2'
   379  039A  343A               	retlw	58	;':'
   380  039B  3400               	retlw	0
   381  039C                     STR_3:
   382  039C  3453               	retlw	83	;'S'
   383  039D  3433               	retlw	51	;'3'
   384  039E  343A               	retlw	58	;':'
   385  039F  3400               	retlw	0
   386  03A0                     STR_4:
   387  03A0  3425               	retlw	37	;'%'
   388  03A1  3464               	retlw	100	;'d'
   389  03A2  3400               	retlw	0
   390  03A0                     
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395  000F                     __initialization:
   396                           
   397                           ; Initialize objects allocated to BANK0
   398  000F  120A  118A  240D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   399  0014  00CE               	movwf	__pdataBANK0& (0+127)
   400                           
   401                           ; Clear objects allocated to BANK0
   402  0015  1383               	bcf	3,7	;select IRP bank0
   403  0016  3038               	movlw	low __pbssBANK0
   404  0017  0084               	movwf	4
   405  0018  304E               	movlw	low (__pbssBANK0+22)
   406  0019  120A  118A  23F7  120A  118A  	fcall	clear_ram0
   407                           
   408                           ; Clear objects allocated to COMMON
   409  001E  01FA               	clrf	__pbssCOMMON& (0+127)
   410  001F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   411  0020                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414  0020                     __end_of__initialization:
   415  0020  0183               	clrf	3
   416  0021  120A  118A  2A93   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419  007A                     __pbssCOMMON:
   420  007A                     _S3:
   421  007A                     	ds	1
   422  007B                     _S2:
   423  007B                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0038                     __pbssBANK0:
   427  0038                     _a:
   428  0038                     	ds	2
   429  003A                     _s:
   430  003A                     	ds	20
   431                           
   432                           	psect	dataBANK0
   433  004E                     __pdataBANK0:
   434  004E                     _S1:
   435  004E                     	ds	1
   436                           
   437                           	psect	clrtext
   438  03F7                     clear_ram0:	
   439                           ;	Called with FSR containing the base address, and
   440                           ;	W with the last address+1
   441                           
   442  03F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   443  03F8                     clrloop0:
   444  03F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   445  03F9  0A84               	incf	4,f	;increment pointer
   446  03FA  0604               	xorwf	4,w	;XOR with final address
   447  03FB  1903               	btfsc	3,2	;have we reached the end yet?
   448  03FC  3400               	retlw	0	;all done for this memory range, return
   449  03FD  0604               	xorwf	4,w	;XOR again to restore value
   450  03FE  2BF8               	goto	clrloop0	;do the next byte
   451                           
   452                           	psect	cstackCOMMON
   453  0070                     __pcstackCOMMON:
   454  0070                     ?_setup:
   455  0070                     ?_Lcd_Init:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_Lcd_Clear:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_mostrar:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_isr:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ??_isr:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_Lcd_Port:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_Lcd_Cmd:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd_Write_Char:	
   480                           ; 1 bytes @ 0x0
   481                           
   482                           
   483                           ; 1 bytes @ 0x0
   484  0070                     	ds	2
   485  0072                     ??_setup:
   486  0072                     ??_Lcd_Port:	
   487                           ; 1 bytes @ 0x2
   488                           
   489  0072                     ?___lwdiv:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0072                     Lcd_Port@a:	
   493                           ; 2 bytes @ 0x2
   494                           
   495  0072                     ___lwdiv@divisor:	
   496                           ; 1 bytes @ 0x2
   497                           
   498                           
   499                           ; 2 bytes @ 0x2
   500  0072                     	ds	1
   501  0073                     ??_Lcd_Cmd:
   502  0073                     ??_Lcd_Write_Char:	
   503                           ; 1 bytes @ 0x3
   504                           
   505                           
   506                           ; 1 bytes @ 0x3
   507  0073                     	ds	1
   508  0074                     Lcd_Write_Char@a:
   509  0074                     ___lwdiv@dividend:	
   510                           ; 1 bytes @ 0x4
   511                           
   512                           
   513                           ; 2 bytes @ 0x4
   514  0074                     	ds	1
   515  0075                     ?_Lcd_Write_String:
   516  0075                     Lcd_Cmd@a:	
   517                           ; 1 bytes @ 0x5
   518                           
   519  0075                     Lcd_Write_String@a:	
   520                           ; 1 bytes @ 0x5
   521                           
   522                           
   523                           ; 2 bytes @ 0x5
   524  0075                     	ds	1
   525  0076                     ??_Lcd_Init:
   526  0076                     ??_Lcd_Clear:	
   527                           ; 1 bytes @ 0x6
   528                           
   529  0076                     ?_Lcd_Set_Cursor:	
   530                           ; 1 bytes @ 0x6
   531                           
   532  0076                     ??___lwdiv:	
   533                           ; 1 bytes @ 0x6
   534                           
   535  0076                     Lcd_Set_Cursor@b:	
   536                           ; 1 bytes @ 0x6
   537                           
   538                           
   539                           ; 1 bytes @ 0x6
   540  0076                     	ds	1
   541  0077                     ??_Lcd_Set_Cursor:
   542  0077                     ??_Lcd_Write_String:	
   543                           ; 1 bytes @ 0x7
   544                           
   545  0077                     ___lwdiv@quotient:	
   546                           ; 1 bytes @ 0x7
   547                           
   548                           
   549                           ; 2 bytes @ 0x7
   550  0077                     	ds	1
   551  0078                     Lcd_Set_Cursor@a:
   552                           
   553                           ; 1 bytes @ 0x8
   554  0078                     	ds	1
   555  0079                     Lcd_Set_Cursor@temp:
   556  0079                     ___lwdiv@counter:	
   557                           ; 1 bytes @ 0x9
   558                           
   559                           
   560                           ; 1 bytes @ 0x9
   561  0079                     	ds	1
   562                           
   563                           	psect	cstackBANK0
   564  0020                     __pcstackBANK0:
   565  0020                     ?___lwmod:
   566  0020                     Lcd_Write_String@i:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0020                     ___lwmod@divisor:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 2 bytes @ 0x0
   574  0020                     	ds	2
   575  0022                     ___lwmod@dividend:
   576                           
   577                           ; 2 bytes @ 0x2
   578  0022                     	ds	2
   579  0024                     ??___lwmod:
   580                           
   581                           ; 1 bytes @ 0x4
   582  0024                     	ds	1
   583  0025                     ___lwmod@counter:
   584                           
   585                           ; 1 bytes @ 0x5
   586  0025                     	ds	1
   587  0026                     ?_sprintf:
   588  0026                     sprintf@f:	
   589                           ; 2 bytes @ 0x6
   590                           
   591                           
   592                           ; 1 bytes @ 0x6
   593  0026                     	ds	3
   594  0029                     ??_sprintf:
   595                           
   596                           ; 1 bytes @ 0x9
   597  0029                     	ds	3
   598  002C                     sprintf@ap:
   599                           
   600                           ; 1 bytes @ 0xC
   601  002C                     	ds	1
   602  002D                     sprintf@flag:
   603                           
   604                           ; 1 bytes @ 0xD
   605  002D                     	ds	1
   606  002E                     sprintf@prec:
   607                           
   608                           ; 1 bytes @ 0xE
   609  002E                     	ds	1
   610  002F                     sprintf@val:
   611                           
   612                           ; 2 bytes @ 0xF
   613  002F                     	ds	2
   614  0031                     sprintf@sp:
   615                           
   616                           ; 1 bytes @ 0x11
   617  0031                     	ds	1
   618  0032                     sprintf@c:
   619                           
   620                           ; 1 bytes @ 0x12
   621  0032                     	ds	1
   622  0033                     ??_mostrar:
   623                           
   624                           ; 1 bytes @ 0x13
   625  0033                     	ds	3
   626  0036                     ??_main:
   627                           
   628                           ; 1 bytes @ 0x16
   629  0036                     	ds	2
   630                           
   631                           	psect	maintext
   632  0293                     __pmaintext:	
   633 ;;
   634 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   635 ;;
   636 ;; *************** function _main *****************
   637 ;; Defined at:
   638 ;;		line 84 in file "mcu1_master.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : B00/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0
   654 ;;      Temps:          0       2       0       0       0
   655 ;;      Totals:         0       2       0       0       0
   656 ;;Total ram usage:        2 bytes
   657 ;; Hardware stack levels required when called:    5
   658 ;; This function calls:
   659 ;;		_Lcd_Clear
   660 ;;		_Lcd_Init
   661 ;;		_mostrar
   662 ;;		_setup
   663 ;; This function is called by:
   664 ;;		Startup code after reset
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _main
   670  0293                     _main:
   671  0293                     l1464:	
   672                           ;incstack = 0
   673                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   674                           
   675                           
   676                           ;mcu1_master.c: 85:     Lcd_Write_String(s);
   677  0293  120A  118A  234F  120A  118A  	fcall	_setup
   678                           
   679                           ;mcu1_master.c: 86:     sprintf(s, "%d", S1);
   680  0298  120A  118A  21BE  120A  118A  	fcall	_Lcd_Init
   681                           
   682                           ;mcu1_master.c: 87:     Lcd_Set_Cursor(2, 13);
   683  029D  120A  118A  23FF  120A  118A  	fcall	_Lcd_Clear
   684  02A2                     l1466:
   685  02A2  120A  118A  210E  120A  118A  	fcall	_mostrar
   686  02A7                     l1468:
   687  02A7  1283               	bcf	3,5	;RP0=0, select bank0
   688  02A8  1303               	bcf	3,6	;RP1=0, select bank0
   689  02A9  1006               	bcf	6,0	;volatile
   690  02AA                     l1470:
   691  02AA  3003               	movlw	3
   692  02AB  1283               	bcf	3,5	;RP0=0, select bank0
   693  02AC  1303               	bcf	3,6	;RP1=0, select bank0
   694  02AD  00B7               	movwf	??_main+1
   695  02AE  3097               	movlw	151
   696  02AF  00B6               	movwf	??_main
   697  02B0                     u997:
   698  02B0  0BB6               	decfsz	??_main,f
   699  02B1  2AB0               	goto	u997
   700  02B2  0BB7               	decfsz	??_main+1,f
   701  02B3  2AB0               	goto	u997
   702  02B4                     l1472:
   703  02B4  1683               	bsf	3,5	;RP0=1, select bank1
   704  02B5  1303               	bcf	3,6	;RP1=0, select bank1
   705  02B6  1C14               	btfss	20,0	;volatile
   706  02B7  2AB9               	goto	u971
   707  02B8  2ABA               	goto	u970
   708  02B9                     u971:
   709  02B9  2AC4               	goto	l71
   710  02BA                     u970:
   711  02BA                     l72:
   712  02BA  1C14               	btfss	20,0	;volatile
   713  02BB  2ABD               	goto	u981
   714  02BC  2ABE               	goto	u980
   715  02BD                     u981:
   716  02BD  2ABA               	goto	l72
   717  02BE                     u980:
   718  02BE                     l1476:
   719  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   720  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   721  02C0  0813               	movf	19,w	;volatile
   722  02C1  00B6               	movwf	??_main
   723  02C2  0836               	movf	??_main,w
   724  02C3  00CE               	movwf	_S1
   725  02C4                     l71:
   726  02C4  3003               	movlw	3
   727  02C5  1283               	bcf	3,5	;RP0=0, select bank0
   728  02C6  1303               	bcf	3,6	;RP1=0, select bank0
   729  02C7  00B7               	movwf	??_main+1
   730  02C8  3097               	movlw	151
   731  02C9  00B6               	movwf	??_main
   732  02CA                     u1007:
   733  02CA  0BB6               	decfsz	??_main,f
   734  02CB  2ACA               	goto	u1007
   735  02CC  0BB7               	decfsz	??_main+1,f
   736  02CD  2ACA               	goto	u1007
   737  02CE                     l1478:
   738  02CE  1283               	bcf	3,5	;RP0=0, select bank0
   739  02CF  1303               	bcf	3,6	;RP1=0, select bank0
   740  02D0  1406               	bsf	6,0	;volatile
   741  02D1  2AA2               	goto	l1466
   742  02D2  120A  118A  280C   	ljmp	start
   743  02D5                     __end_of_main:
   744                           
   745                           	psect	text1
   746  034F                     __ptext1:	
   747 ;; *************** function _setup *****************
   748 ;; Defined at:
   749 ;;		line 109 in file "mcu1_master.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _setup
   779  034F                     _setup:
   780  034F                     l1196:	
   781                           ;incstack = 0
   782                           ; Regs used in _setup: [wreg+status,2]
   783                           
   784  034F  1683               	bsf	3,5	;RP0=1, select bank1
   785  0350  1303               	bcf	3,6	;RP1=0, select bank1
   786  0351  0185               	clrf	5	;volatile
   787  0352  1283               	bcf	3,5	;RP0=0, select bank0
   788  0353  1303               	bcf	3,6	;RP1=0, select bank0
   789  0354  0185               	clrf	5	;volatile
   790  0355  1683               	bsf	3,5	;RP0=1, select bank1
   791  0356  1303               	bcf	3,6	;RP1=0, select bank1
   792  0357  0186               	clrf	6	;volatile
   793  0358  1283               	bcf	3,5	;RP0=0, select bank0
   794  0359  1303               	bcf	3,6	;RP1=0, select bank0
   795  035A  0186               	clrf	6	;volatile
   796  035B                     l1198:
   797  035B  3010               	movlw	16
   798  035C  1683               	bsf	3,5	;RP0=1, select bank1
   799  035D  1303               	bcf	3,6	;RP1=0, select bank1
   800  035E  0087               	movwf	7	;volatile
   801  035F                     l1200:
   802  035F  1283               	bcf	3,5	;RP0=0, select bank0
   803  0360  1303               	bcf	3,6	;RP1=0, select bank0
   804  0361  0187               	clrf	7	;volatile
   805  0362                     l1202:
   806  0362  1683               	bsf	3,5	;RP0=1, select bank1
   807  0363  1303               	bcf	3,6	;RP1=0, select bank1
   808  0364  0188               	clrf	8	;volatile
   809  0365                     l1204:
   810  0365  1283               	bcf	3,5	;RP0=0, select bank0
   811  0366  1303               	bcf	3,6	;RP1=0, select bank0
   812  0367  0188               	clrf	8	;volatile
   813  0368                     l1206:
   814  0368  1683               	bsf	3,5	;RP0=1, select bank1
   815  0369  1303               	bcf	3,6	;RP1=0, select bank1
   816  036A  0189               	clrf	9	;volatile
   817  036B                     l1208:
   818  036B  1283               	bcf	3,5	;RP0=0, select bank0
   819  036C  1303               	bcf	3,6	;RP1=0, select bank0
   820  036D  0189               	clrf	9	;volatile
   821  036E                     l1210:
   822  036E  1683               	bsf	3,5	;RP0=1, select bank3
   823  036F  1703               	bsf	3,6	;RP1=1, select bank3
   824  0370  0188               	clrf	8	;volatile
   825  0371                     l1212:
   826  0371  0189               	clrf	9	;volatile
   827  0372                     l1214:
   828  0372  1683               	bsf	3,5	;RP0=1, select bank1
   829  0373  1303               	bcf	3,6	;RP1=0, select bank1
   830  0374  0194               	clrf	20	;volatile
   831  0375                     l1216:
   832  0375  3032               	movlw	50
   833  0376  1283               	bcf	3,5	;RP0=0, select bank0
   834  0377  1303               	bcf	3,6	;RP1=0, select bank0
   835  0378  0094               	movwf	20	;volatile
   836  0379                     l80:
   837  0379  0008               	return
   838  037A                     __end_of_setup:
   839                           
   840                           	psect	text2
   841  010E                     __ptext2:	
   842 ;; *************** function _mostrar *****************
   843 ;; Defined at:
   844 ;;		line 129 in file "mcu1_master.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       3       0       0       0
   861 ;;      Totals:         0       3       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    4
   865 ;; This function calls:
   866 ;;		_Lcd_Set_Cursor
   867 ;;		_Lcd_Write_String
   868 ;;		_sprintf
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _mostrar
   876  010E                     _mostrar:
   877  010E                     l1442:	
   878                           ;incstack = 0
   879                           ; Regs used in _mostrar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   880                           
   881  010E  01F6               	clrf	Lcd_Set_Cursor@b
   882  010F  0AF6               	incf	Lcd_Set_Cursor@b,f
   883  0110  3001               	movlw	1
   884  0111  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   885  0116                     l1444:
   886  0116  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   887  0117  00F5               	movwf	Lcd_Write_String@a
   888  0118  3080               	movlw	128
   889  0119  00F6               	movwf	Lcd_Write_String@a+1
   890  011A  120A  118A  2209  120A  118A  	fcall	_Lcd_Write_String
   891  011F                     l1446:
   892  011F  3007               	movlw	7
   893  0120  1283               	bcf	3,5	;RP0=0, select bank0
   894  0121  1303               	bcf	3,6	;RP1=0, select bank0
   895  0122  00B3               	movwf	??_mostrar
   896  0123  0833               	movf	??_mostrar,w
   897  0124  00F6               	movwf	Lcd_Set_Cursor@b
   898  0125  3001               	movlw	1
   899  0126  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   900  012B  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   901  012C  00F5               	movwf	Lcd_Write_String@a
   902  012D  3080               	movlw	128
   903  012E  00F6               	movwf	Lcd_Write_String@a+1
   904  012F  120A  118A  2209  120A  118A  	fcall	_Lcd_Write_String
   905  0134                     l1448:
   906  0134  300D               	movlw	13
   907  0135  1283               	bcf	3,5	;RP0=0, select bank0
   908  0136  1303               	bcf	3,6	;RP1=0, select bank0
   909  0137  00B3               	movwf	??_mostrar
   910  0138  0833               	movf	??_mostrar,w
   911  0139  00F6               	movwf	Lcd_Set_Cursor@b
   912  013A  3001               	movlw	1
   913  013B  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   914  0140                     l1450:
   915  0140  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   916  0141  00F5               	movwf	Lcd_Write_String@a
   917  0142  3080               	movlw	128
   918  0143  00F6               	movwf	Lcd_Write_String@a+1
   919  0144  120A  118A  2209  120A  118A  	fcall	_Lcd_Write_String
   920  0149                     l1452:
   921  0149  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   922  014A  1283               	bcf	3,5	;RP0=0, select bank0
   923  014B  1303               	bcf	3,6	;RP1=0, select bank0
   924  014C  00B3               	movwf	??_mostrar
   925  014D  0833               	movf	??_mostrar,w
   926  014E  00A6               	movwf	sprintf@f
   927  014F  084E               	movf	_S1,w
   928  0150  00B4               	movwf	??_mostrar+1
   929  0151  01B5               	clrf	??_mostrar+2
   930  0152  0834               	movf	??_mostrar+1,w
   931  0153  00A7               	movwf	?_sprintf+1
   932  0154  0835               	movf	??_mostrar+2,w
   933  0155  00A8               	movwf	?_sprintf+2
   934  0156  303A               	movlw	(low (_s| 0))& (0+255)
   935  0157  120A  118A  2024  120A  118A  	fcall	_sprintf
   936  015C                     l1454:
   937  015C  01F6               	clrf	Lcd_Set_Cursor@b
   938  015D  0AF6               	incf	Lcd_Set_Cursor@b,f
   939  015E  3002               	movlw	2
   940  015F  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   941  0164  303A               	movlw	(low (_s| 0))& (0+255)
   942  0165  00F5               	movwf	Lcd_Write_String@a
   943  0166  3000               	movlw	0
   944  0167  00F6               	movwf	Lcd_Write_String@a+1
   945  0168  120A  118A  2209  120A  118A  	fcall	_Lcd_Write_String
   946  016D  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   947  016E  1283               	bcf	3,5	;RP0=0, select bank0
   948  016F  1303               	bcf	3,6	;RP1=0, select bank0
   949  0170  00B3               	movwf	??_mostrar
   950  0171  0833               	movf	??_mostrar,w
   951  0172  00A6               	movwf	sprintf@f
   952  0173  084E               	movf	_S1,w
   953  0174  00B4               	movwf	??_mostrar+1
   954  0175  01B5               	clrf	??_mostrar+2
   955  0176  0834               	movf	??_mostrar+1,w
   956  0177  00A7               	movwf	?_sprintf+1
   957  0178  0835               	movf	??_mostrar+2,w
   958  0179  00A8               	movwf	?_sprintf+2
   959  017A  303A               	movlw	(low (_s| 0))& (0+255)
   960  017B  120A  118A  2024  120A  118A  	fcall	_sprintf
   961  0180                     l1456:
   962  0180  3007               	movlw	7
   963  0181  1283               	bcf	3,5	;RP0=0, select bank0
   964  0182  1303               	bcf	3,6	;RP1=0, select bank0
   965  0183  00B3               	movwf	??_mostrar
   966  0184  0833               	movf	??_mostrar,w
   967  0185  00F6               	movwf	Lcd_Set_Cursor@b
   968  0186  3002               	movlw	2
   969  0187  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   970  018C                     l1458:
   971  018C  303A               	movlw	(low (_s| 0))& (0+255)
   972  018D  00F5               	movwf	Lcd_Write_String@a
   973  018E  3000               	movlw	0
   974  018F  00F6               	movwf	Lcd_Write_String@a+1
   975  0190  120A  118A  2209  120A  118A  	fcall	_Lcd_Write_String
   976  0195                     l1460:
   977  0195  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   978  0196  1283               	bcf	3,5	;RP0=0, select bank0
   979  0197  1303               	bcf	3,6	;RP1=0, select bank0
   980  0198  00B3               	movwf	??_mostrar
   981  0199  0833               	movf	??_mostrar,w
   982  019A  00A6               	movwf	sprintf@f
   983  019B  084E               	movf	_S1,w
   984  019C  00B4               	movwf	??_mostrar+1
   985  019D  01B5               	clrf	??_mostrar+2
   986  019E  0834               	movf	??_mostrar+1,w
   987  019F  00A7               	movwf	?_sprintf+1
   988  01A0  0835               	movf	??_mostrar+2,w
   989  01A1  00A8               	movwf	?_sprintf+2
   990  01A2  303A               	movlw	(low (_s| 0))& (0+255)
   991  01A3  120A  118A  2024  120A  118A  	fcall	_sprintf
   992  01A8                     l1462:
   993  01A8  300D               	movlw	13
   994  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   995  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   996  01AB  00B3               	movwf	??_mostrar
   997  01AC  0833               	movf	??_mostrar,w
   998  01AD  00F6               	movwf	Lcd_Set_Cursor@b
   999  01AE  3002               	movlw	2
  1000  01AF  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
  1001  01B4  303A               	movlw	(low (_s| 0))& (0+255)
  1002  01B5  00F5               	movwf	Lcd_Write_String@a
  1003  01B6  3000               	movlw	0
  1004  01B7  00F6               	movwf	Lcd_Write_String@a+1
  1005  01B8  120A  118A  2209  120A  118A  	fcall	_Lcd_Write_String
  1006  01BD                     l83:
  1007  01BD  0008               	return
  1008  01BE                     __end_of_mostrar:
  1009                           
  1010                           	psect	text3
  1011  0024                     __ptext3:	
  1012 ;; *************** function _sprintf *****************
  1013 ;; Defined at:
  1014 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  sp              1    wreg     PTR unsigned char 
  1017 ;;		 -> s(20), 
  1018 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1019 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1022 ;;		 -> s(20), 
  1023 ;;  tmpval          4    0        struct .
  1024 ;;  val             2   15[BANK0 ] unsigned int 
  1025 ;;  cp              2    0        PTR const unsigned char 
  1026 ;;  len             2    0        unsigned int 
  1027 ;;  c               1   18[BANK0 ] unsigned char 
  1028 ;;  prec            1   14[BANK0 ] char 
  1029 ;;  flag            1   13[BANK0 ] unsigned char 
  1030 ;;  ap              1   12[BANK0 ] PTR void [1]
  1031 ;;		 -> ?_sprintf(2), 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2    6[BANK0 ] int 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       3       0       0       0
  1042 ;;      Locals:         0       7       0       0       0
  1043 ;;      Temps:          0       3       0       0       0
  1044 ;;      Totals:         0      13       0       0       0
  1045 ;;Total ram usage:       13 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    2
  1048 ;; This function calls:
  1049 ;;		___lwdiv
  1050 ;;		___lwmod
  1051 ;; This function is called by:
  1052 ;;		_mostrar
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _sprintf
  1058  0024                     _sprintf:
  1059                           
  1060                           ;incstack = 0
  1061                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1062                           ;sprintf@sp stored from wreg
  1063  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0026  00B1               	movwf	sprintf@sp
  1066  0027                     l1368:
  1067                           
  1068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1069  0027  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1070  0028  00A9               	movwf	??_sprintf
  1071  0029  0829               	movf	??_sprintf,w
  1072  002A  00AC               	movwf	sprintf@ap
  1073                           
  1074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1075  002B  28F7               	goto	l1420
  1076  002C                     l1370:
  1077                           
  1078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1079  002C  3025               	movlw	37
  1080  002D  0632               	xorwf	sprintf@c,w
  1081  002E  1903               	btfsc	3,2
  1082  002F  2831               	goto	u901
  1083  0030  2832               	goto	u900
  1084  0031                     u901:
  1085  0031  283E               	goto	l1376
  1086  0032                     u900:
  1087  0032                     l1372:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1090  0032  0832               	movf	sprintf@c,w
  1091  0033  00A9               	movwf	??_sprintf
  1092  0034  0831               	movf	sprintf@sp,w
  1093  0035  0084               	movwf	4
  1094  0036  0829               	movf	??_sprintf,w
  1095  0037  1383               	bcf	3,7	;select IRP bank0
  1096  0038  0080               	movwf	0
  1097  0039                     l1374:
  1098  0039  3001               	movlw	1
  1099  003A  00A9               	movwf	??_sprintf
  1100  003B  0829               	movf	??_sprintf,w
  1101  003C  07B1               	addwf	sprintf@sp,f
  1102                           
  1103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1104  003D  28F7               	goto	l1420
  1105  003E                     l1376:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1108  003E  01AD               	clrf	sprintf@flag
  1109  003F                     l1380:	
  1110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1111                           
  1112  003F  3001               	movlw	1
  1113  0040  07A6               	addwf	sprintf@f,f
  1114  0041  30FF               	movlw	-1
  1115  0042  0726               	addwf	sprintf@f,w
  1116  0043  0084               	movwf	4
  1117  0044  120A  118A  2384  120A  118A  	fcall	stringdir
  1118  0049  00B2               	movwf	sprintf@c
  1119  004A  00A9               	movwf	??_sprintf
  1120  004B  01AA               	clrf	??_sprintf+1
  1121                           
  1122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 1, Range of values is 0 to 0
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte            4     3 (average)
  1128                           ; direct_byte           11     8 (fixed)
  1129                           ; jumptable            260     6 (fixed)
  1130                           ;	Chosen strategy is simple_byte
  1131  004C  082A               	movf	??_sprintf+1,w
  1132  004D  3A00               	xorlw	0	; case 0
  1133  004E  1903               	skipnz
  1134  004F  2851               	goto	l1500
  1135  0050  28F7               	goto	l1420
  1136  0051                     l1500:
  1137                           
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 3, Range of values is 0 to 105
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte           10     6 (average)
  1143                           ; jumptable            260     6 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  0051  0829               	movf	??_sprintf,w
  1146  0052  3A00               	xorlw	0	; case 0
  1147  0053  1903               	skipnz
  1148  0054  2909               	goto	l1422
  1149  0055  3A64               	xorlw	100	; case 100
  1150  0056  1903               	skipnz
  1151  0057  285C               	goto	l1382
  1152  0058  3A0D               	xorlw	13	; case 105
  1153  0059  1903               	skipnz
  1154  005A  285C               	goto	l1382
  1155  005B  28F7               	goto	l1420
  1156  005C                     l1382:
  1157                           
  1158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1159  005C  082C               	movf	sprintf@ap,w
  1160  005D  0084               	movwf	4
  1161  005E  1383               	bcf	3,7	;select IRP bank0
  1162  005F  0800               	movf	0,w
  1163  0060  00AF               	movwf	sprintf@val
  1164  0061  0A84               	incf	4,f
  1165  0062  0800               	movf	0,w
  1166  0063  00B0               	movwf	sprintf@val+1
  1167  0064                     l1384:
  1168  0064  3002               	movlw	2
  1169  0065  00A9               	movwf	??_sprintf
  1170  0066  0829               	movf	??_sprintf,w
  1171  0067  07AC               	addwf	sprintf@ap,f
  1172  0068                     l1386:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1175  0068  1FB0               	btfss	sprintf@val+1,7
  1176  0069  286B               	goto	u911
  1177  006A  286C               	goto	u910
  1178  006B                     u911:
  1179  006B  2875               	goto	l1392
  1180  006C                     u910:
  1181  006C                     l1388:
  1182                           
  1183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1184  006C  3003               	movlw	3
  1185  006D  00A9               	movwf	??_sprintf
  1186  006E  0829               	movf	??_sprintf,w
  1187  006F  04AD               	iorwf	sprintf@flag,f
  1188  0070                     l1390:
  1189                           
  1190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1191  0070  09AF               	comf	sprintf@val,f
  1192  0071  09B0               	comf	sprintf@val+1,f
  1193  0072  0AAF               	incf	sprintf@val,f
  1194  0073  1903               	skipnz
  1195  0074  0AB0               	incf	sprintf@val+1,f
  1196  0075                     l1392:
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1199  0075  01B2               	clrf	sprintf@c
  1200  0076  0AB2               	incf	sprintf@c,f
  1201  0077                     l1398:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1204  0077  0832               	movf	sprintf@c,w
  1205  0078  00A9               	movwf	??_sprintf
  1206  0079  0729               	addwf	??_sprintf,w
  1207  007A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1208  007B  0084               	movwf	4
  1209  007C  120A  118A  2384  120A  118A  	fcall	stringdir
  1210  0081  00AA               	movwf	??_sprintf+1
  1211  0082  120A  118A  2384  120A  118A  	fcall	stringdir
  1212  0087  00AB               	movwf	??_sprintf+2
  1213  0088  082B               	movf	??_sprintf+2,w
  1214  0089  0230               	subwf	sprintf@val+1,w
  1215  008A  1D03               	skipz
  1216  008B  288E               	goto	u925
  1217  008C  082A               	movf	??_sprintf+1,w
  1218  008D  022F               	subwf	sprintf@val,w
  1219  008E                     u925:
  1220  008E  1803               	skipnc
  1221  008F  2891               	goto	u921
  1222  0090  2892               	goto	u920
  1223  0091                     u921:
  1224  0091  2893               	goto	l1402
  1225  0092                     u920:
  1226  0092  289D               	goto	l1404
  1227  0093                     l1402:
  1228  0093  3001               	movlw	1
  1229  0094  00A9               	movwf	??_sprintf
  1230  0095  0829               	movf	??_sprintf,w
  1231  0096  07B2               	addwf	sprintf@c,f
  1232  0097  3005               	movlw	5
  1233  0098  0632               	xorwf	sprintf@c,w
  1234  0099  1D03               	btfss	3,2
  1235  009A  289C               	goto	u931
  1236  009B  289D               	goto	u930
  1237  009C                     u931:
  1238  009C  2877               	goto	l1398
  1239  009D                     u930:
  1240  009D                     l1404:
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1243  009D  082D               	movf	sprintf@flag,w
  1244  009E  3903               	andlw	3
  1245  009F  1903               	btfsc	3,2
  1246  00A0  28A2               	goto	u941
  1247  00A1  28A3               	goto	u940
  1248  00A2                     u941:
  1249  00A2  28AE               	goto	l1410
  1250  00A3                     u940:
  1251  00A3                     l1406:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1254  00A3  302D               	movlw	45
  1255  00A4  00A9               	movwf	??_sprintf
  1256  00A5  0831               	movf	sprintf@sp,w
  1257  00A6  0084               	movwf	4
  1258  00A7  0829               	movf	??_sprintf,w
  1259  00A8  1383               	bcf	3,7	;select IRP bank0
  1260  00A9  0080               	movwf	0
  1261  00AA                     l1408:
  1262  00AA  3001               	movlw	1
  1263  00AB  00A9               	movwf	??_sprintf
  1264  00AC  0829               	movf	??_sprintf,w
  1265  00AD  07B1               	addwf	sprintf@sp,f
  1266  00AE                     l1410:
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1269  00AE  0832               	movf	sprintf@c,w
  1270  00AF  00A9               	movwf	??_sprintf
  1271  00B0  0829               	movf	??_sprintf,w
  1272  00B1  00AE               	movwf	sprintf@prec
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1275  00B2  28EE               	goto	l1418
  1276  00B3                     l1412:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1279  00B3  300A               	movlw	10
  1280  00B4  00A0               	movwf	___lwmod@divisor
  1281  00B5  3000               	movlw	0
  1282  00B6  00A1               	movwf	___lwmod@divisor+1
  1283  00B7  082E               	movf	sprintf@prec,w
  1284  00B8  00A9               	movwf	??_sprintf
  1285  00B9  0729               	addwf	??_sprintf,w
  1286  00BA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1287  00BB  0084               	movwf	4
  1288  00BC  120A  118A  2384  120A  118A  	fcall	stringdir
  1289  00C1  00F2               	movwf	___lwdiv@divisor
  1290  00C2  120A  118A  2384  120A  118A  	fcall	stringdir
  1291  00C7  00F3               	movwf	___lwdiv@divisor+1
  1292  00C8  0830               	movf	sprintf@val+1,w
  1293  00C9  00F5               	movwf	___lwdiv@dividend+1
  1294  00CA  082F               	movf	sprintf@val,w
  1295  00CB  00F4               	movwf	___lwdiv@dividend
  1296  00CC  120A  118A  224F  120A  118A  	fcall	___lwdiv
  1297  00D1  0873               	movf	?___lwdiv+1,w
  1298  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1299  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1300  00D4  00A3               	movwf	___lwmod@dividend+1
  1301  00D5  0872               	movf	?___lwdiv,w
  1302  00D6  00A2               	movwf	___lwmod@dividend
  1303  00D7  120A  118A  2313  120A  118A  	fcall	___lwmod
  1304  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1305  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1306  00DE  0820               	movf	?___lwmod,w
  1307  00DF  3E30               	addlw	48
  1308  00E0  00AA               	movwf	??_sprintf+1
  1309  00E1  082A               	movf	??_sprintf+1,w
  1310  00E2  00B2               	movwf	sprintf@c
  1311  00E3                     l1414:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1314  00E3  0832               	movf	sprintf@c,w
  1315  00E4  00A9               	movwf	??_sprintf
  1316  00E5  0831               	movf	sprintf@sp,w
  1317  00E6  0084               	movwf	4
  1318  00E7  0829               	movf	??_sprintf,w
  1319  00E8  1383               	bcf	3,7	;select IRP bank0
  1320  00E9  0080               	movwf	0
  1321  00EA                     l1416:
  1322  00EA  3001               	movlw	1
  1323  00EB  00A9               	movwf	??_sprintf
  1324  00EC  0829               	movf	??_sprintf,w
  1325  00ED  07B1               	addwf	sprintf@sp,f
  1326  00EE                     l1418:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1329  00EE  30FF               	movlw	255
  1330  00EF  00A9               	movwf	??_sprintf
  1331  00F0  0829               	movf	??_sprintf,w
  1332  00F1  07AE               	addwf	sprintf@prec,f
  1333  00F2  0A2E               	incf	sprintf@prec,w
  1334  00F3  1D03               	btfss	3,2
  1335  00F4  28F6               	goto	u951
  1336  00F5  28F7               	goto	u950
  1337  00F6                     u951:
  1338  00F6  28B3               	goto	l1412
  1339  00F7                     u950:
  1340  00F7                     l1420:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1343  00F7  3001               	movlw	1
  1344  00F8  07A6               	addwf	sprintf@f,f
  1345  00F9  30FF               	movlw	-1
  1346  00FA  0726               	addwf	sprintf@f,w
  1347  00FB  0084               	movwf	4
  1348  00FC  120A  118A  2384  120A  118A  	fcall	stringdir
  1349  0101  00A9               	movwf	??_sprintf
  1350  0102  0829               	movf	??_sprintf,w
  1351  0103  00B2               	movwf	sprintf@c
  1352  0104  0832               	movf	sprintf@c,w
  1353  0105  1D03               	btfss	3,2
  1354  0106  2908               	goto	u961
  1355  0107  2909               	goto	u960
  1356  0108                     u961:
  1357  0108  282C               	goto	l1370
  1358  0109                     u960:
  1359  0109                     l1422:
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1362  0109  0831               	movf	sprintf@sp,w
  1363  010A  0084               	movwf	4
  1364  010B  1383               	bcf	3,7	;select IRP bank0
  1365  010C  0180               	clrf	0
  1366  010D                     l258:
  1367  010D  0008               	return
  1368  010E                     __end_of_sprintf:
  1369                           
  1370                           	psect	text4
  1371  0313                     __ptext4:	
  1372 ;; *************** function ___lwmod *****************
  1373 ;; Defined at:
  1374 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  divisor         2    0[BANK0 ] unsigned int 
  1377 ;;  dividend        2    2[BANK0 ] unsigned int 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  counter         1    5[BANK0 ] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  2    0[BANK0 ] unsigned int 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       4       0       0       0
  1390 ;;      Locals:         0       1       0       0       0
  1391 ;;      Temps:          0       1       0       0       0
  1392 ;;      Totals:         0       6       0       0       0
  1393 ;;Total ram usage:        6 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_sprintf
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function ___lwmod
  1405  0313                     ___lwmod:
  1406  0313                     l1326:	
  1407                           ;incstack = 0
  1408                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1409                           
  1410  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0315  0820               	movf	___lwmod@divisor,w
  1413  0316  0421               	iorwf	___lwmod@divisor+1,w
  1414  0317  1903               	btfsc	3,2
  1415  0318  2B1A               	goto	u791
  1416  0319  2B1B               	goto	u790
  1417  031A                     u791:
  1418  031A  2B4A               	goto	l1344
  1419  031B                     u790:
  1420  031B                     l1328:
  1421  031B  01A5               	clrf	___lwmod@counter
  1422  031C  0AA5               	incf	___lwmod@counter,f
  1423  031D  2B29               	goto	l1334
  1424  031E                     l1330:
  1425  031E  3001               	movlw	1
  1426  031F                     u805:
  1427  031F  1003               	clrc
  1428  0320  0DA0               	rlf	___lwmod@divisor,f
  1429  0321  0DA1               	rlf	___lwmod@divisor+1,f
  1430  0322  3EFF               	addlw	-1
  1431  0323  1D03               	skipz
  1432  0324  2B1F               	goto	u805
  1433  0325                     l1332:
  1434  0325  3001               	movlw	1
  1435  0326  00A4               	movwf	??___lwmod
  1436  0327  0824               	movf	??___lwmod,w
  1437  0328  07A5               	addwf	___lwmod@counter,f
  1438  0329                     l1334:
  1439  0329  1FA1               	btfss	___lwmod@divisor+1,7
  1440  032A  2B2C               	goto	u811
  1441  032B  2B2D               	goto	u810
  1442  032C                     u811:
  1443  032C  2B1E               	goto	l1330
  1444  032D                     u810:
  1445  032D                     l1336:
  1446  032D  0821               	movf	___lwmod@divisor+1,w
  1447  032E  0223               	subwf	___lwmod@dividend+1,w
  1448  032F  1D03               	skipz
  1449  0330  2B33               	goto	u825
  1450  0331  0820               	movf	___lwmod@divisor,w
  1451  0332  0222               	subwf	___lwmod@dividend,w
  1452  0333                     u825:
  1453  0333  1C03               	skipc
  1454  0334  2B36               	goto	u821
  1455  0335  2B37               	goto	u820
  1456  0336                     u821:
  1457  0336  2B3D               	goto	l1340
  1458  0337                     u820:
  1459  0337                     l1338:
  1460  0337  0820               	movf	___lwmod@divisor,w
  1461  0338  02A2               	subwf	___lwmod@dividend,f
  1462  0339  0821               	movf	___lwmod@divisor+1,w
  1463  033A  1C03               	skipc
  1464  033B  03A3               	decf	___lwmod@dividend+1,f
  1465  033C  02A3               	subwf	___lwmod@dividend+1,f
  1466  033D                     l1340:
  1467  033D  3001               	movlw	1
  1468  033E                     u835:
  1469  033E  1003               	clrc
  1470  033F  0CA1               	rrf	___lwmod@divisor+1,f
  1471  0340  0CA0               	rrf	___lwmod@divisor,f
  1472  0341  3EFF               	addlw	-1
  1473  0342  1D03               	skipz
  1474  0343  2B3E               	goto	u835
  1475  0344                     l1342:
  1476  0344  3001               	movlw	1
  1477  0345  02A5               	subwf	___lwmod@counter,f
  1478  0346  1D03               	btfss	3,2
  1479  0347  2B49               	goto	u841
  1480  0348  2B4A               	goto	u840
  1481  0349                     u841:
  1482  0349  2B2D               	goto	l1336
  1483  034A                     u840:
  1484  034A                     l1344:
  1485  034A  0823               	movf	___lwmod@dividend+1,w
  1486  034B  00A1               	movwf	?___lwmod+1
  1487  034C  0822               	movf	___lwmod@dividend,w
  1488  034D  00A0               	movwf	?___lwmod
  1489  034E                     l544:
  1490  034E  0008               	return
  1491  034F                     __end_of___lwmod:
  1492                           
  1493                           	psect	text5
  1494  024F                     __ptext5:	
  1495 ;; *************** function ___lwdiv *****************
  1496 ;; Defined at:
  1497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  divisor         2    2[COMMON] unsigned int 
  1500 ;;  dividend        2    4[COMMON] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  quotient        2    7[COMMON] unsigned int 
  1503 ;;  counter         1    9[COMMON] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    2[COMMON] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         4       0       0       0       0
  1514 ;;      Locals:         3       0       0       0       0
  1515 ;;      Temps:          1       0       0       0       0
  1516 ;;      Totals:         8       0       0       0       0
  1517 ;;Total ram usage:        8 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_sprintf
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function ___lwdiv
  1529  024F                     ___lwdiv:
  1530  024F                     l1066:	
  1531                           ;incstack = 0
  1532                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1533                           
  1534  024F  01F7               	clrf	___lwdiv@quotient
  1535  0250  01F8               	clrf	___lwdiv@quotient+1
  1536  0251                     l1068:
  1537  0251  0872               	movf	___lwdiv@divisor,w
  1538  0252  0473               	iorwf	___lwdiv@divisor+1,w
  1539  0253  1903               	btfsc	3,2
  1540  0254  2A56               	goto	u441
  1541  0255  2A57               	goto	u440
  1542  0256                     u441:
  1543  0256  2A8E               	goto	l1088
  1544  0257                     u440:
  1545  0257                     l1070:
  1546  0257  01F9               	clrf	___lwdiv@counter
  1547  0258  0AF9               	incf	___lwdiv@counter,f
  1548  0259  2A65               	goto	l1076
  1549  025A                     l1072:
  1550  025A  3001               	movlw	1
  1551  025B                     u455:
  1552  025B  1003               	clrc
  1553  025C  0DF2               	rlf	___lwdiv@divisor,f
  1554  025D  0DF3               	rlf	___lwdiv@divisor+1,f
  1555  025E  3EFF               	addlw	-1
  1556  025F  1D03               	skipz
  1557  0260  2A5B               	goto	u455
  1558  0261                     l1074:
  1559  0261  3001               	movlw	1
  1560  0262  00F6               	movwf	??___lwdiv
  1561  0263  0876               	movf	??___lwdiv,w
  1562  0264  07F9               	addwf	___lwdiv@counter,f
  1563  0265                     l1076:
  1564  0265  1FF3               	btfss	___lwdiv@divisor+1,7
  1565  0266  2A68               	goto	u461
  1566  0267  2A69               	goto	u460
  1567  0268                     u461:
  1568  0268  2A5A               	goto	l1072
  1569  0269                     u460:
  1570  0269                     l1078:
  1571  0269  3001               	movlw	1
  1572  026A                     u475:
  1573  026A  1003               	clrc
  1574  026B  0DF7               	rlf	___lwdiv@quotient,f
  1575  026C  0DF8               	rlf	___lwdiv@quotient+1,f
  1576  026D  3EFF               	addlw	-1
  1577  026E  1D03               	skipz
  1578  026F  2A6A               	goto	u475
  1579  0270  0873               	movf	___lwdiv@divisor+1,w
  1580  0271  0275               	subwf	___lwdiv@dividend+1,w
  1581  0272  1D03               	skipz
  1582  0273  2A76               	goto	u485
  1583  0274  0872               	movf	___lwdiv@divisor,w
  1584  0275  0274               	subwf	___lwdiv@dividend,w
  1585  0276                     u485:
  1586  0276  1C03               	skipc
  1587  0277  2A79               	goto	u481
  1588  0278  2A7A               	goto	u480
  1589  0279                     u481:
  1590  0279  2A81               	goto	l1084
  1591  027A                     u480:
  1592  027A                     l1080:
  1593  027A  0872               	movf	___lwdiv@divisor,w
  1594  027B  02F4               	subwf	___lwdiv@dividend,f
  1595  027C  0873               	movf	___lwdiv@divisor+1,w
  1596  027D  1C03               	skipc
  1597  027E  03F5               	decf	___lwdiv@dividend+1,f
  1598  027F  02F5               	subwf	___lwdiv@dividend+1,f
  1599  0280                     l1082:
  1600  0280  1477               	bsf	___lwdiv@quotient,0
  1601  0281                     l1084:
  1602  0281  3001               	movlw	1
  1603  0282                     u495:
  1604  0282  1003               	clrc
  1605  0283  0CF3               	rrf	___lwdiv@divisor+1,f
  1606  0284  0CF2               	rrf	___lwdiv@divisor,f
  1607  0285  3EFF               	addlw	-1
  1608  0286  1D03               	skipz
  1609  0287  2A82               	goto	u495
  1610  0288                     l1086:
  1611  0288  3001               	movlw	1
  1612  0289  02F9               	subwf	___lwdiv@counter,f
  1613  028A  1D03               	btfss	3,2
  1614  028B  2A8D               	goto	u501
  1615  028C  2A8E               	goto	u500
  1616  028D                     u501:
  1617  028D  2A69               	goto	l1078
  1618  028E                     u500:
  1619  028E                     l1088:
  1620  028E  0878               	movf	___lwdiv@quotient+1,w
  1621  028F  00F3               	movwf	?___lwdiv+1
  1622  0290  0877               	movf	___lwdiv@quotient,w
  1623  0291  00F2               	movwf	?___lwdiv
  1624  0292                     l534:
  1625  0292  0008               	return
  1626  0293                     __end_of___lwdiv:
  1627                           
  1628                           	psect	text6
  1629  0209                     __ptext6:	
  1630 ;; *************** function _Lcd_Write_String *****************
  1631 ;; Defined at:
  1632 ;;		line 109 in file "lcd_library.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  a               2    5[COMMON] PTR unsigned char 
  1635 ;;		 -> s(20), STR_3(4), STR_2(4), STR_1(4), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  i               2    0[BANK0 ] int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         2       0       0       0       0
  1648 ;;      Locals:         0       2       0       0       0
  1649 ;;      Temps:          3       0       0       0       0
  1650 ;;      Totals:         5       2       0       0       0
  1651 ;;Total ram usage:        7 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    3
  1654 ;; This function calls:
  1655 ;;		_Lcd_Write_Char
  1656 ;; This function is called by:
  1657 ;;		_mostrar
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _Lcd_Write_String
  1663  0209                     _Lcd_Write_String:
  1664  0209                     l1360:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1667                           
  1668                           
  1669                           ;lcd_library.c: 109: void Lcd_Write_String(char *a);lcd_library.c: 110: {;lcd_library.c:
      +                           111:  int i;;lcd_library.c: 112:  for(i=0;a[i]!='\0';i++)
  1670  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1671  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1672  020B  01A0               	clrf	Lcd_Write_String@i
  1673  020C  01A1               	clrf	Lcd_Write_String@i+1
  1674  020D  2A32               	goto	l1366
  1675  020E                     l1362:
  1676                           
  1677                           ;lcd_library.c: 113:     Lcd_Write_Char(a[i]);
  1678  020E  0820               	movf	Lcd_Write_String@i,w
  1679  020F  0775               	addwf	Lcd_Write_String@a,w
  1680  0210  00F8               	movwf	??_Lcd_Write_String+1
  1681  0211  0876               	movf	Lcd_Write_String@a+1,w
  1682  0212  00F7               	movwf	??_Lcd_Write_String
  1683  0213  1803               	skipnc
  1684  0214  0AF7               	incf	??_Lcd_Write_String,f
  1685  0215  1FA0               	btfss	Lcd_Write_String@i,7
  1686  0216  2A18               	goto	u870
  1687  0217  03F7               	decf	??_Lcd_Write_String,f
  1688  0218                     u870:
  1689  0218  0877               	movf	??_Lcd_Write_String,w
  1690  0219  00F9               	movwf	??_Lcd_Write_String+2
  1691  021A  0879               	movf	??_Lcd_Write_String+2,w
  1692  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1693  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1694  021D  00FF               	movwf	btemp+1
  1695  021E  0878               	movf	??_Lcd_Write_String+1,w
  1696  021F  0084               	movwf	4
  1697  0220  120A  118A  237A  120A  118A  	fcall	stringtab
  1698  0225  120A  118A  23E1  120A  118A  	fcall	_Lcd_Write_Char
  1699  022A                     l1364:
  1700  022A  3001               	movlw	1
  1701  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1702  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1703  022D  07A0               	addwf	Lcd_Write_String@i,f
  1704  022E  1803               	skipnc
  1705  022F  0AA1               	incf	Lcd_Write_String@i+1,f
  1706  0230  3000               	movlw	0
  1707  0231  07A1               	addwf	Lcd_Write_String@i+1,f
  1708  0232                     l1366:
  1709  0232  0820               	movf	Lcd_Write_String@i,w
  1710  0233  0775               	addwf	Lcd_Write_String@a,w
  1711  0234  00F8               	movwf	??_Lcd_Write_String+1
  1712  0235  0876               	movf	Lcd_Write_String@a+1,w
  1713  0236  00F7               	movwf	??_Lcd_Write_String
  1714  0237  1803               	skipnc
  1715  0238  0AF7               	incf	??_Lcd_Write_String,f
  1716  0239  1FA0               	btfss	Lcd_Write_String@i,7
  1717  023A  2A3C               	goto	u880
  1718  023B  03F7               	decf	??_Lcd_Write_String,f
  1719  023C                     u880:
  1720  023C  0877               	movf	??_Lcd_Write_String,w
  1721  023D  00F9               	movwf	??_Lcd_Write_String+2
  1722  023E  0879               	movf	??_Lcd_Write_String+2,w
  1723  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0241  00FF               	movwf	btemp+1
  1726  0242  0878               	movf	??_Lcd_Write_String+1,w
  1727  0243  0084               	movwf	4
  1728  0244  120A  118A  237A  120A  118A  	fcall	stringtab
  1729  0249  3A00               	xorlw	0
  1730  024A  1D03               	skipz
  1731  024B  2A4D               	goto	u891
  1732  024C  2A4E               	goto	u890
  1733  024D                     u891:
  1734  024D  2A0E               	goto	l1362
  1735  024E                     u890:
  1736  024E                     l148:
  1737  024E  0008               	return
  1738  024F                     __end_of_Lcd_Write_String:
  1739                           
  1740                           	psect	text7
  1741  03E1                     __ptext7:	
  1742 ;; *************** function _Lcd_Write_Char *****************
  1743 ;; Defined at:
  1744 ;;		line 100 in file "lcd_library.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  a               1    wreg     unsigned char 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  a               1    4[COMMON] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0
  1760 ;;      Temps:          1       0       0       0       0
  1761 ;;      Totals:         2       0       0       0       0
  1762 ;;Total ram usage:        2 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    2
  1765 ;; This function calls:
  1766 ;;		_Lcd_Port
  1767 ;; This function is called by:
  1768 ;;		_Lcd_Write_String
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _Lcd_Write_Char
  1774  03E1                     _Lcd_Write_Char:
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1778                           ;Lcd_Write_Char@a stored from wreg
  1779  03E1  00F4               	movwf	Lcd_Write_Char@a
  1780  03E2                     l1316:
  1781                           
  1782                           ;lcd_library.c: 100: void Lcd_Write_Char(char a);lcd_library.c: 101: {;lcd_library.c: 10
      +                          2:    RE0 = 1;
  1783  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1784  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1785  03E4  1409               	bsf	9,0	;volatile
  1786  03E5                     l1318:
  1787                           
  1788                           ;lcd_library.c: 103:    Lcd_Port(a);
  1789  03E5  0874               	movf	Lcd_Write_Char@a,w
  1790  03E6  120A  118A  22D5  120A  118A  	fcall	_Lcd_Port
  1791  03EB                     l1320:
  1792                           
  1793                           ;lcd_library.c: 104:    RE1 = 1;
  1794  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1795  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1796  03ED  1489               	bsf	9,1	;volatile
  1797  03EE                     l1322:
  1798                           
  1799                           ;lcd_library.c: 105:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1800  03EE  301A               	movlw	26
  1801  03EF  00F3               	movwf	??_Lcd_Write_Char
  1802  03F0                     u1017:
  1803  03F0  0BF3               	decfsz	??_Lcd_Write_Char,f
  1804  03F1  2BF0               	goto	u1017
  1805  03F2  0000               	nop
  1806  03F3                     l1324:
  1807                           
  1808                           ;lcd_library.c: 106:    RE1 = 0;
  1809  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1810  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1811  03F5  1089               	bcf	9,1	;volatile
  1812  03F6                     l142:
  1813  03F6  0008               	return
  1814  03F7                     __end_of_Lcd_Write_Char:
  1815                           
  1816                           	psect	text8
  1817  03A3                     __ptext8:	
  1818 ;; *************** function _Lcd_Set_Cursor *****************
  1819 ;; Defined at:
  1820 ;;		line 69 in file "lcd_library.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  a               1    wreg     unsigned char 
  1823 ;;  b               1    6[COMMON] unsigned char 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  a               1    8[COMMON] unsigned char 
  1826 ;;  temp            1    9[COMMON] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0, pclath, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         1       0       0       0       0
  1837 ;;      Locals:         2       0       0       0       0
  1838 ;;      Temps:          1       0       0       0       0
  1839 ;;      Totals:         4       0       0       0       0
  1840 ;;Total ram usage:        4 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    3
  1843 ;; This function calls:
  1844 ;;		_Lcd_Cmd
  1845 ;; This function is called by:
  1846 ;;		_mostrar
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _Lcd_Set_Cursor
  1852  03A3                     _Lcd_Set_Cursor:
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1856                           ;Lcd_Set_Cursor@a stored from wreg
  1857  03A3  00F8               	movwf	Lcd_Set_Cursor@a
  1858  03A4                     l1348:
  1859                           
  1860                           ;lcd_library.c: 69: void Lcd_Set_Cursor(char a, char b);lcd_library.c: 70: {;lcd_library
      +                          .c: 71:  char temp;;lcd_library.c: 72:  if(a == 1)
  1861  03A4  0378               	decf	Lcd_Set_Cursor@a,w
  1862  03A5  1D03               	btfss	3,2
  1863  03A6  2BA8               	goto	u851
  1864  03A7  2BA9               	goto	u850
  1865  03A8                     u851:
  1866  03A8  2BB5               	goto	l1354
  1867  03A9                     u850:
  1868  03A9                     l1350:
  1869                           
  1870                           ;lcd_library.c: 73:  {;lcd_library.c: 74:         temp = 0x80 + b - 1;
  1871  03A9  0876               	movf	Lcd_Set_Cursor@b,w
  1872  03AA  3E7F               	addlw	127
  1873  03AB  00F7               	movwf	??_Lcd_Set_Cursor
  1874  03AC  0877               	movf	??_Lcd_Set_Cursor,w
  1875  03AD  00F9               	movwf	Lcd_Set_Cursor@temp
  1876  03AE                     l1352:
  1877                           
  1878                           ;lcd_library.c: 75:         Lcd_Cmd(temp);
  1879  03AE  0879               	movf	Lcd_Set_Cursor@temp,w
  1880  03AF  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  1881                           
  1882                           ;lcd_library.c: 76:  }
  1883  03B4  2BC6               	goto	l136
  1884  03B5                     l1354:
  1885  03B5  3002               	movlw	2
  1886  03B6  0678               	xorwf	Lcd_Set_Cursor@a,w
  1887  03B7  1D03               	btfss	3,2
  1888  03B8  2BBA               	goto	u861
  1889  03B9  2BBB               	goto	u860
  1890  03BA                     u861:
  1891  03BA  2BC6               	goto	l136
  1892  03BB                     u860:
  1893  03BB                     l1356:
  1894                           
  1895                           ;lcd_library.c: 78:  {;lcd_library.c: 79:         temp = 0xC0 + b - 1;
  1896  03BB  0876               	movf	Lcd_Set_Cursor@b,w
  1897  03BC  3EBF               	addlw	191
  1898  03BD  00F7               	movwf	??_Lcd_Set_Cursor
  1899  03BE  0877               	movf	??_Lcd_Set_Cursor,w
  1900  03BF  00F9               	movwf	Lcd_Set_Cursor@temp
  1901  03C0                     l1358:
  1902                           
  1903                           ;lcd_library.c: 80:         Lcd_Cmd(temp);
  1904  03C0  0879               	movf	Lcd_Set_Cursor@temp,w
  1905  03C1  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  1906  03C6                     l136:
  1907  03C6  0008               	return
  1908  03C7                     __end_of_Lcd_Set_Cursor:
  1909                           
  1910                           	psect	text9
  1911  01BE                     __ptext9:	
  1912 ;; *************** function _Lcd_Init *****************
  1913 ;; Defined at:
  1914 ;;		line 84 in file "lcd_library.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          2       0       0       0       0
  1931 ;;      Totals:         2       0       0       0       0
  1932 ;;Total ram usage:        2 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    3
  1935 ;; This function calls:
  1936 ;;		_Lcd_Cmd
  1937 ;;		_Lcd_Port
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _Lcd_Init
  1945  01BE                     _Lcd_Init:
  1946  01BE                     l1430:	
  1947                           ;incstack = 0
  1948                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1949                           
  1950                           
  1951                           ;lcd_library.c: 86:   Lcd_Port(0x00);
  1952  01BE  3000               	movlw	0
  1953  01BF  120A  118A  22D5  120A  118A  	fcall	_Lcd_Port
  1954  01C4                     l1432:
  1955                           
  1956                           ;lcd_library.c: 87:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1957  01C4  3034               	movlw	52
  1958  01C5  00F7               	movwf	??_Lcd_Init+1
  1959  01C6  30F1               	movlw	241
  1960  01C7  00F6               	movwf	??_Lcd_Init
  1961  01C8                     u1027:
  1962  01C8  0BF6               	decfsz	??_Lcd_Init,f
  1963  01C9  29C8               	goto	u1027
  1964  01CA  0BF7               	decfsz	??_Lcd_Init+1,f
  1965  01CB  29C8               	goto	u1027
  1966  01CC  29CD               	nop2
  1967  01CD                     l1434:
  1968                           
  1969                           ;lcd_library.c: 88:   Lcd_Cmd(0x03);
  1970  01CD  3003               	movlw	3
  1971  01CE  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  1972                           
  1973                           ;lcd_library.c: 89:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1974  01D3  300D               	movlw	13
  1975  01D4  00F7               	movwf	??_Lcd_Init+1
  1976  01D5  30FB               	movlw	251
  1977  01D6  00F6               	movwf	??_Lcd_Init
  1978  01D7                     u1037:
  1979  01D7  0BF6               	decfsz	??_Lcd_Init,f
  1980  01D8  29D7               	goto	u1037
  1981  01D9  0BF7               	decfsz	??_Lcd_Init+1,f
  1982  01DA  29D7               	goto	u1037
  1983  01DB  29DC               	nop2
  1984  01DC                     l1436:
  1985                           
  1986                           ;lcd_library.c: 90:   Lcd_Cmd(0x03);
  1987  01DC  3003               	movlw	3
  1988  01DD  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  1989  01E2                     l1438:
  1990                           
  1991                           ;lcd_library.c: 91:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1992  01E2  301D               	movlw	29
  1993  01E3  00F7               	movwf	??_Lcd_Init+1
  1994  01E4  3091               	movlw	145
  1995  01E5  00F6               	movwf	??_Lcd_Init
  1996  01E6                     u1047:
  1997  01E6  0BF6               	decfsz	??_Lcd_Init,f
  1998  01E7  29E6               	goto	u1047
  1999  01E8  0BF7               	decfsz	??_Lcd_Init+1,f
  2000  01E9  29E6               	goto	u1047
  2001                           
  2002                           ;lcd_library.c: 92:   Lcd_Cmd(0x03);
  2003  01EA  3003               	movlw	3
  2004  01EB  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  2005                           
  2006                           ;lcd_library.c: 94:   Lcd_Cmd(0b00111000);
  2007  01F0  3038               	movlw	56
  2008  01F1  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  2009                           
  2010                           ;lcd_library.c: 95:   Lcd_Cmd(0b00001100);
  2011  01F6  300C               	movlw	12
  2012  01F7  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  2013                           
  2014                           ;lcd_library.c: 96:   Lcd_Cmd(0b00000001);
  2015  01FC  3001               	movlw	1
  2016  01FD  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  2017                           
  2018                           ;lcd_library.c: 97:   Lcd_Cmd(0b00000110);
  2019  0202  3006               	movlw	6
  2020  0203  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  2021  0208                     l139:
  2022  0208  0008               	return
  2023  0209                     __end_of_Lcd_Init:
  2024                           
  2025                           	psect	text10
  2026  03FF                     __ptext10:	
  2027 ;; *************** function _Lcd_Clear *****************
  2028 ;; Defined at:
  2029 ;;		line 64 in file "lcd_library.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    3
  2050 ;; This function calls:
  2051 ;;		_Lcd_Cmd
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _Lcd_Clear
  2059  03FF                     _Lcd_Clear:
  2060  03FF                     l1440:	
  2061                           ;incstack = 0
  2062                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2063                           
  2064                           
  2065                           ;lcd_library.c: 66:  Lcd_Cmd(1);
  2066  03FF  3001               	movlw	1
  2067  0400  120A  118A  23C7  120A  118A  	fcall	_Lcd_Cmd
  2068  0405                     l130:
  2069  0405  0008               	return
  2070  0406                     __end_of_Lcd_Clear:
  2071                           
  2072                           	psect	text11
  2073  03C7                     __ptext11:	
  2074 ;; *************** function _Lcd_Cmd *****************
  2075 ;; Defined at:
  2076 ;;		line 55 in file "lcd_library.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  a               1    wreg     unsigned char 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  a               1    5[COMMON] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2090 ;;      Params:         0       0       0       0       0
  2091 ;;      Locals:         1       0       0       0       0
  2092 ;;      Temps:          2       0       0       0       0
  2093 ;;      Totals:         3       0       0       0       0
  2094 ;;Total ram usage:        3 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    2
  2097 ;; This function calls:
  2098 ;;		_Lcd_Port
  2099 ;; This function is called by:
  2100 ;;		_Lcd_Clear
  2101 ;;		_Lcd_Set_Cursor
  2102 ;;		_Lcd_Init
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _Lcd_Cmd
  2108  03C7                     _Lcd_Cmd:
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2112                           ;Lcd_Cmd@a stored from wreg
  2113  03C7  00F5               	movwf	Lcd_Cmd@a
  2114  03C8                     l1306:
  2115                           
  2116                           ;lcd_library.c: 55: void Lcd_Cmd(char a);lcd_library.c: 56: {;lcd_library.c: 57:  RE0 = 
      +                          0;
  2117  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2118  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2119  03CA  1009               	bcf	9,0	;volatile
  2120  03CB                     l1308:
  2121                           
  2122                           ;lcd_library.c: 58:  Lcd_Port(a);
  2123  03CB  0875               	movf	Lcd_Cmd@a,w
  2124  03CC  120A  118A  22D5  120A  118A  	fcall	_Lcd_Port
  2125  03D1                     l1310:
  2126                           
  2127                           ;lcd_library.c: 59:  RE1 = 1;
  2128  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2129  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2130  03D3  1489               	bsf	9,1	;volatile
  2131  03D4                     l1312:
  2132                           
  2133                           ;lcd_library.c: 60:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2134  03D4  300B               	movlw	11
  2135  03D5  00F4               	movwf	??_Lcd_Cmd+1
  2136  03D6  3062               	movlw	98
  2137  03D7  00F3               	movwf	??_Lcd_Cmd
  2138  03D8                     u1057:
  2139  03D8  0BF3               	decfsz	??_Lcd_Cmd,f
  2140  03D9  2BD8               	goto	u1057
  2141  03DA  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2142  03DB  2BD8               	goto	u1057
  2143  03DC  0000               	nop
  2144  03DD                     l1314:
  2145                           
  2146                           ;lcd_library.c: 61:         RE1 = 0;
  2147  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2148  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2149  03DF  1089               	bcf	9,1	;volatile
  2150  03E0                     l127:
  2151  03E0  0008               	return
  2152  03E1                     __end_of_Lcd_Cmd:
  2153                           
  2154                           	psect	text12
  2155  02D5                     __ptext12:	
  2156 ;; *************** function _Lcd_Port *****************
  2157 ;; Defined at:
  2158 ;;		line 12 in file "lcd_library.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  a               1    wreg     unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  a               1    2[COMMON] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         1       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0
  2175 ;;      Totals:         1       0       0       0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_Lcd_Cmd
  2183 ;;		_Lcd_Init
  2184 ;;		_Lcd_Write_Char
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _Lcd_Port
  2190  02D5                     _Lcd_Port:
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _Lcd_Port: [wreg]
  2194                           ;Lcd_Port@a stored from wreg
  2195  02D5  00F2               	movwf	Lcd_Port@a
  2196  02D6                     l1288:
  2197                           
  2198                           ;lcd_library.c: 12: void Lcd_Port(char a);lcd_library.c: 13: {;lcd_library.c: 14:  if(a 
      +                          & 1)
  2199  02D6  1C72               	btfss	Lcd_Port@a,0
  2200  02D7  2AD9               	goto	u711
  2201  02D8  2ADA               	goto	u710
  2202  02D9                     u711:
  2203  02D9  2ADE               	goto	l108
  2204  02DA                     u710:
  2205  02DA                     l1290:
  2206                           
  2207                           ;lcd_library.c: 15:   RD0 = 1;
  2208  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2209  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2210  02DC  1408               	bsf	8,0	;volatile
  2211  02DD  2AE1               	goto	l109
  2212  02DE                     l108:	
  2213                           ;lcd_library.c: 16:  else
  2214                           
  2215                           
  2216                           ;lcd_library.c: 17:   RD0 = 0;
  2217  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2218  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2219  02E0  1008               	bcf	8,0	;volatile
  2220  02E1                     l109:
  2221                           
  2222                           ;lcd_library.c: 19:  if(a & 2)
  2223  02E1  1CF2               	btfss	Lcd_Port@a,1
  2224  02E2  2AE4               	goto	u721
  2225  02E3  2AE5               	goto	u720
  2226  02E4                     u721:
  2227  02E4  2AE7               	goto	l110
  2228  02E5                     u720:
  2229  02E5                     l1292:
  2230                           
  2231                           ;lcd_library.c: 20:   RD1 = 1;
  2232  02E5  1488               	bsf	8,1	;volatile
  2233  02E6  2AE8               	goto	l111
  2234  02E7                     l110:	
  2235                           ;lcd_library.c: 21:  else
  2236                           
  2237                           
  2238                           ;lcd_library.c: 22:   RD1 = 0;
  2239  02E7  1088               	bcf	8,1	;volatile
  2240  02E8                     l111:
  2241                           
  2242                           ;lcd_library.c: 24:  if(a & 4)
  2243  02E8  1D72               	btfss	Lcd_Port@a,2
  2244  02E9  2AEB               	goto	u731
  2245  02EA  2AEC               	goto	u730
  2246  02EB                     u731:
  2247  02EB  2AEE               	goto	l112
  2248  02EC                     u730:
  2249  02EC                     l1294:
  2250                           
  2251                           ;lcd_library.c: 25:   RD2 = 1;
  2252  02EC  1508               	bsf	8,2	;volatile
  2253  02ED  2AEF               	goto	l113
  2254  02EE                     l112:	
  2255                           ;lcd_library.c: 26:  else
  2256                           
  2257                           
  2258                           ;lcd_library.c: 27:   RD2 = 0;
  2259  02EE  1108               	bcf	8,2	;volatile
  2260  02EF                     l113:
  2261                           
  2262                           ;lcd_library.c: 29:  if(a & 8)
  2263  02EF  1DF2               	btfss	Lcd_Port@a,3
  2264  02F0  2AF2               	goto	u741
  2265  02F1  2AF3               	goto	u740
  2266  02F2                     u741:
  2267  02F2  2AF5               	goto	l114
  2268  02F3                     u740:
  2269  02F3                     l1296:
  2270                           
  2271                           ;lcd_library.c: 30:   RD3 = 1;
  2272  02F3  1588               	bsf	8,3	;volatile
  2273  02F4  2AF6               	goto	l115
  2274  02F5                     l114:	
  2275                           ;lcd_library.c: 31:  else
  2276                           
  2277                           
  2278                           ;lcd_library.c: 32:   RD3 = 0;
  2279  02F5  1188               	bcf	8,3	;volatile
  2280  02F6                     l115:
  2281                           
  2282                           ;lcd_library.c: 34:     if(a & 16)
  2283  02F6  1E72               	btfss	Lcd_Port@a,4
  2284  02F7  2AF9               	goto	u751
  2285  02F8  2AFA               	goto	u750
  2286  02F9                     u751:
  2287  02F9  2AFC               	goto	l116
  2288  02FA                     u750:
  2289  02FA                     l1298:
  2290                           
  2291                           ;lcd_library.c: 35:   RD4 = 1;
  2292  02FA  1608               	bsf	8,4	;volatile
  2293  02FB  2AFD               	goto	l117
  2294  02FC                     l116:	
  2295                           ;lcd_library.c: 36:  else
  2296                           
  2297                           
  2298                           ;lcd_library.c: 37:   RD4 = 0;
  2299  02FC  1208               	bcf	8,4	;volatile
  2300  02FD                     l117:
  2301                           
  2302                           ;lcd_library.c: 39:     if(a & 32)
  2303  02FD  1EF2               	btfss	Lcd_Port@a,5
  2304  02FE  2B00               	goto	u761
  2305  02FF  2B01               	goto	u760
  2306  0300                     u761:
  2307  0300  2B03               	goto	l118
  2308  0301                     u760:
  2309  0301                     l1300:
  2310                           
  2311                           ;lcd_library.c: 40:   RD5 = 1;
  2312  0301  1688               	bsf	8,5	;volatile
  2313  0302  2B04               	goto	l119
  2314  0303                     l118:	
  2315                           ;lcd_library.c: 41:  else
  2316                           
  2317                           
  2318                           ;lcd_library.c: 42:   RD5 = 0;
  2319  0303  1288               	bcf	8,5	;volatile
  2320  0304                     l119:
  2321                           
  2322                           ;lcd_library.c: 44:     if(a & 64)
  2323  0304  1F72               	btfss	Lcd_Port@a,6
  2324  0305  2B07               	goto	u771
  2325  0306  2B08               	goto	u770
  2326  0307                     u771:
  2327  0307  2B0A               	goto	l120
  2328  0308                     u770:
  2329  0308                     l1302:
  2330                           
  2331                           ;lcd_library.c: 45:   RD6 = 1;
  2332  0308  1708               	bsf	8,6	;volatile
  2333  0309  2B0B               	goto	l121
  2334  030A                     l120:	
  2335                           ;lcd_library.c: 46:  else
  2336                           
  2337                           
  2338                           ;lcd_library.c: 47:   RD6 = 0;
  2339  030A  1308               	bcf	8,6	;volatile
  2340  030B                     l121:
  2341                           
  2342                           ;lcd_library.c: 49:     if(a & 128)
  2343  030B  1FF2               	btfss	Lcd_Port@a,7
  2344  030C  2B0E               	goto	u781
  2345  030D  2B0F               	goto	u780
  2346  030E                     u781:
  2347  030E  2B11               	goto	l122
  2348  030F                     u780:
  2349  030F                     l1304:
  2350                           
  2351                           ;lcd_library.c: 50:   RD7 = 1;
  2352  030F  1788               	bsf	8,7	;volatile
  2353  0310  2B12               	goto	l124
  2354  0311                     l122:	
  2355                           ;lcd_library.c: 51:  else
  2356                           
  2357                           
  2358                           ;lcd_library.c: 52:   RD7 = 0;
  2359  0311  1388               	bcf	8,7	;volatile
  2360  0312                     l124:
  2361  0312  0008               	return
  2362  0313                     __end_of_Lcd_Port:
  2363                           
  2364                           	psect	text13
  2365  0406                     __ptext13:	
  2366 ;; *************** function _isr *****************
  2367 ;; Defined at:
  2368 ;;		line 70 in file "mcu1_master.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		None
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          2       0       0       0       0
  2385 ;;      Totals:         2       0       0       0       0
  2386 ;;Total ram usage:        2 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		Interrupt level 1
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _isr
  2397  0406                     _isr:
  2398  0406                     i1l65:
  2399  0406  0871               	movf	??_isr+1,w
  2400  0407  008A               	movwf	10
  2401  0408  0E70               	swapf	??_isr,w
  2402  0409  0083               	movwf	3
  2403  040A  0EFE               	swapf	btemp,f
  2404  040B  0E7E               	swapf	btemp,w
  2405  040C  0009               	retfie
  2406  040D                     __end_of_isr:
  2407  007E                     btemp	set	126	;btemp
  2408  007E                     wtemp0	set	126
  2409                           
  2410                           	psect	intentry
  2411  0004                     __pintentry:	
  2412                           ;incstack = 0
  2413                           ; Regs used in _isr: []
  2414                           
  2415  0004                     interrupt_function:
  2416  007E                     saved_w	set	btemp
  2417  0004  00FE               	movwf	btemp
  2418  0005  0E03               	swapf	3,w
  2419  0006  00F0               	movwf	??_isr
  2420  0007  080A               	movf	10,w
  2421  0008  00F1               	movwf	??_isr+1
  2422  0009  120A  118A  2C06   	ljmp	_isr
  2423                           
  2424                           	psect	config
  2425                           
  2426                           ;Config register CONFIG1 @ 0x2007
  2427                           ;	Oscillator Selection bits
  2428                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2429                           ;	Watchdog Timer Enable bit
  2430                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2431                           ;	Power-up Timer Enable bit
  2432                           ;	PWRTE = OFF, PWRT disabled
  2433                           ;	RE3/MCLR pin function select bit
  2434                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2435                           ;	Code Protection bit
  2436                           ;	CP = OFF, Program memory code protection is disabled
  2437                           ;	Data Code Protection bit
  2438                           ;	CPD = OFF, Data memory code protection is disabled
  2439                           ;	Brown Out Reset Selection bits
  2440                           ;	BOREN = ON, BOR enabled
  2441                           ;	Internal External Switchover bit
  2442                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2443                           ;	Fail-Safe Clock Monitor Enabled bit
  2444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2445                           ;	Low Voltage Programming Enable bit
  2446                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2447                           ;	In-Circuit Debugger Mode bit
  2448                           ;	DEBUG = 0x1, unprogrammed default
  2449  2007                     	org	8199
  2450  2007  23D1               	dw	9169
  2451                           
  2452                           ;Config register CONFIG2 @ 0x2008
  2453                           ;	Brown-out Reset Selection bit
  2454                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2455                           ;	Flash Program Memory Self Write Enable bits
  2456                           ;	WRT = OFF, Write protection off
  2457  2008                     	org	8200
  2458  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        1
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK0[20]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _mostrar->_Lcd_Set_Cursor
    _mostrar->_Lcd_Write_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrar
    _mostrar->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4566
                                             22 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                            _mostrar
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mostrar                                              3     3      0    3760
                                             19 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1800
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     949
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     279
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1    1011
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     527
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     279
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     248
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mostrar
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:43:30 2021

                        _a 0038                          _s 003A                          pc 0002  
              _SSPSTATbits 0094                         l71 02C4                         l80 0379  
                       l72 02BA                         l83 01BD                         _S1 004E  
                       _S2 007B                         _S3 007A                         fsr 0004  
                      l110 02E7                        l111 02E8                        l120 030A  
                      l112 02EE                        l121 030B                        l113 02EF  
                      l122 0311                        l114 02F5                        l130 0405  
                      l115 02F6                        l124 0312                        l116 02FC  
                      l108 02DE                        l117 02FD                        l109 02E1  
                      l118 0303                        l142 03F6                        l119 0304  
                      l127 03E0                        l136 03C6                        l139 0208  
                      l148 024E                        l258 010D                        l534 0292  
                      l544 034E                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RE0 0048                        _RD3 0043  
                      _RE1 0049                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u500 028E  
                      u501 028D                        u440 0257                        u441 0256  
                      u460 0269                        u461 0268                        u710 02DA  
                      u711 02D9                        u455 025B                        u720 02E5  
                      u480 027A                        u721 02E4                        u481 0279  
                      u730 02EC                        u810 032D                        u731 02EB  
                      u475 026A                        u811 032C                        u740 02F3  
                      u820 0337                        u900 0032                        u741 02F2  
                      u485 0276                        u821 0336                        u805 031F  
                      u901 0031                        u750 02FA                        u910 006C  
                      u751 02F9                        u495 0282                        u911 006B  
                      u760 0301                        u840 034A                        u920 0092  
                      u761 0300                        u841 0349                        u825 0333  
                      u921 0091                        u770 0308                        u850 03A9  
                      u930 009D                        u771 0307                        u851 03A8  
                      u835 033E                        u931 009C                        u780 030F  
                      u860 03BB                        u940 00A3                        u781 030E  
                      u861 03BA                        u941 00A2                        u925 008E  
                      u870 0218                        u790 031B                        u950 00F7  
                      u791 031A                        u951 00F6                        u880 023C  
                      u960 0109                        u961 0108                        u890 024E  
                      u970 02BA                        u891 024D                        u971 02B9  
                      u980 02BE                        u981 02BD                        u997 02B0  
                      _isr 0406                        fsr0 0004                        indf 0000  
                     l1200 035F                       l1210 036E                       l1202 0362  
                     l1300 0301                       l1212 0371                       l1204 0365  
                     l1302 0308                       l1310 03D1                       l1070 0257  
                     l1214 0372                       l1206 0368                       l1304 030F  
                     l1312 03D4                       l1320 03EB                       l1080 027A  
                     l1072 025A                       l1216 0375                       l1208 036B  
                     l1314 03DD                       l1306 03C8                       l1322 03EE  
                     l1082 0280                       l1074 0261                       l1066 024F  
                     l1330 031E                       l1410 00AE                       l1402 0093  
                     l1308 03CB                       l1324 03F3                       l1316 03E2  
                     l1084 0281                       l1076 0265                       l1068 0251  
                     l1340 033D                       l1332 0325                       l1412 00B3  
                     l1404 009D                       l1500 0051                       l1420 00F7  
                     l1430 01BE                       l1350 03A9                       l1318 03E5  
                     l1086 0288                       l1078 0269                       l1342 0344  
                     l1334 0329                       l1326 0313                       l1414 00E3  
                     l1406 00A3                       l1422 0109                       l1440 03FF  
                     l1432 01C4                       l1352 03AE                       l1360 0209  
                     l1088 028E                       l1336 032D                       l1328 031B  
                     l1344 034A                       l1416 00EA                       l1408 00AA  
                     l1290 02DA                       l1434 01CD                       l1354 03B5  
                     l1362 020E                       l1338 0337                       l1418 00EE  
                     l1370 002C                       l1450 0140                       l1442 010E  
                     l1292 02E5                       l1436 01DC                       l1356 03BB  
                     l1348 03A4                       l1364 022A                       l1380 003F  
                     l1372 0032                       l1460 0195                       l1452 0149  
                     l1444 0116                       l1196 034F                       l1294 02EC  
                     l1438 01E2                       l1358 03C0                       l1366 0232  
                     l1390 0070                       l1382 005C                       l1374 0039  
                     l1462 01A8                       l1454 015C                       l1446 011F  
                     l1198 035B                       l1470 02AA                       l1296 02F3  
                     l1288 02D6                       l1392 0075                       l1384 0064  
                     l1376 003E                       l1368 0027                       l1456 0180  
                     l1448 0134                       l1472 02B4                       l1464 0293  
                     l1298 02FA                       l1386 0068                       l1458 018C  
                     l1466 02A2                       l1388 006C                       l1476 02BE  
                     l1468 02A7                       l1398 0077                       l1478 02CE  
                     ?_isr 0070                       STR_1 0394                       STR_2 0398  
                     STR_3 039C                       STR_4 03A0                       STR_5 03A0  
                     STR_6 03A0                       u1007 02CA                       u1017 03F0  
                     u1027 01C8                       u1037 01D7                       u1047 01E6  
                     u1057 03D8                       i1l65 0406          ?_Lcd_Write_String 0075  
                     _main 0293                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 03E1                      ??_isr 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lwdiv 0293  
          __end_of___lwmod 034F                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
          __end_of_dpowers 0394                      _setup 034F                      pclath 000A  
          __end_of_mostrar 01BE                      status 0003                      wtemp0 007E  
          __end_of_sprintf 010E           __end_of_Lcd_Init 0209           __end_of_Lcd_Port 0313  
          __initialization 000F               __end_of_main 02D5                     ??_main 0036  
       __size_of_Lcd_Clear 0007                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0016                     _SSPBUF 0013  
                   _SSPCON 0014                  ??___lwdiv 0076                  ??___lwmod 0024  
                   saved_w 007E                  ??_mostrar 0033                  ??_sprintf 0029  
          Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076    __end_of__initialization 0020  
        __end_of_Lcd_Clear 0406             __pcstackCOMMON 0070               __pidataBANK0 040D  
            __end_of_setup 037A             _Lcd_Set_Cursor 03A3                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0072                 __pbssBANK0 0038  
               __pmaintext 0293                 __pintentry 0004  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 03C7                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
                  _SSPSTAT 0094                 __stringtab 037A             _Lcd_Write_Char 03E1  
                  _Lcd_Cmd 03C7                    ___lwdiv 024F                    ___lwmod 0313  
          ?_Lcd_Set_Cursor 0076                    __ptext1 034F                    __ptext2 010E  
                  __ptext3 0024                    __ptext4 0313                    __ptext5 024F  
                  __ptext6 0209                    __ptext7 03E1                    __ptext8 03A3  
                  __ptext9 01BE                    _dpowers 038A               __size_of_isr 0007  
                  _mostrar 010E                    _sprintf 0024                    clrloop0 03F8  
   __end_of_Lcd_Write_Char 03F7       end_of_initialization 0020                  Lcd_Port@a 0072  
                _PORTBbits 0006            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0020                  _Lcd_Clear 03FF           _Lcd_Write_String 0209  
      start_initialization 000F                __end_of_isr 040D          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 003E                 ?_Lcd_Clear 0070                __pdataBANK0 004E  
          Lcd_Write_Char@a 0074                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 002D  
              sprintf@prec 002E           ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077  
                 ?___lwdiv 0072                   ?___lwmod 0020                  __pstrings 037A  
                 ?_mostrar 0070           ___lwdiv@quotient 0077                   ?_sprintf 0026  
           __size_of_setup 002B          interrupt_function 0004                  clear_ram0 03F7  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                __stringbase 0389  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 01BE                   _Lcd_Port 02D5  
 __end_of_Lcd_Write_String 024F           __size_of_Lcd_Cmd 001A           __size_of___lwdiv 0044  
         __size_of___lwmod 003C         __end_of__stringtab 038A                 sprintf@val 002F  
          ___lwdiv@divisor 0072            ___lwdiv@counter 0079                   __ptext10 03FF  
                 __ptext11 03C7                   __ptext12 02D5                   __ptext13 0406  
         __size_of_mostrar 00B0           __size_of_sprintf 00EA              __size_of_main 0042  
                 intlevel1 0000                  sprintf@ap 002C                  sprintf@sp 0031  
         ___lwmod@dividend 0022                  stringcode 0384         Lcd_Set_Cursor@temp 0079  
                 sprintf@c 0032                   sprintf@f 0026            ___lwmod@divisor 0020  
          ___lwmod@counter 0025                   stringdir 0384                   stringtab 037A  
