

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:15:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  001F                     _ADCON0bits	set	31
   369  000B                     _INTCONbits	set	11
   370  001F                     _ADCON0	set	31
   371  0006                     _PORTB	set	6
   372  0005                     _PORTA	set	5
   373  001E                     _ADRESH	set	30
   374  000C                     _PIR1bits	set	12
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  008C                     _PIE1bits	set	140
   378  009F                     _ADCON1	set	159
   379  0086                     _TRISB	set	134
   380  0085                     _TRISA	set	133
   381  043B                     _TRISC3	set	1083
   382  043D                     _TRISC5	set	1085
   383  0189                     _ANSELH	set	393
   384  0188                     _ANSEL	set	392
   385                           
   386                           	psect	cinit
   387  000F                     start_initialization:	
   388                           ; #config settings
   389                           
   390  000F                     __initialization:
   391                           
   392                           ; Clear objects allocated to COMMON
   393  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   394  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   395  0011                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  0011                     __end_of__initialization:
   399  0011  0183               	clrf	3
   400  0012  120A  118A  285C   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMMON
   403  0078                     __pbssCOMMON:
   404  0078                     _temp:
   405  0078                     	ds	1
   406  0079                     _conv_adc:
   407  0079                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_spiRead:
   412  0070                     ??_spiRead:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_spiWrite:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_spiWrite:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_setup:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_adc_setup:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_adc_convert:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_isr:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiReceiveWait:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiReceiveWait:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     spiWrite@dat:	
   443                           ; 1 bytes @ 0x0
   444                           
   445                           
   446                           ; 1 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     ??_isr:
   449                           
   450                           ; 1 bytes @ 0x1
   451  0071                     	ds	3
   452  0074                     ??_setup:
   453  0074                     ?_spiInit:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     ??_adc_setup:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0074                     ??_adc_convert:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     spiInit@sDataSample:	
   463                           ; 1 bytes @ 0x4
   464                           
   465                           
   466                           ; 1 bytes @ 0x4
   467  0074                     	ds	1
   468  0075                     spiInit@sClockIdle:
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     spiInit@sTransmitEdge:
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ??_spiInit:
   477  0077                     spiInit@sType:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           ; 1 bytes @ 0x7
   482  0077                     	ds	1
   483  0078                     ??_main:
   484                           
   485                           	psect	maintext
   486  005C                     __pmaintext:	
   487                           ; 1 bytes @ 0x8
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 75 in file "mcu2_slain.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : B00/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels required when called:    4
   513 ;; This function calls:
   514 ;;		_adc_convert
   515 ;;		_adc_setup
   516 ;;		_setup
   517 ;;		_spiInit
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _main
   525  005C                     _main:
   526  005C                     l789:	
   527                           ;incstack = 0
   528                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   529                           
   530                           
   531                           ;mcu2_slain.c: 76:     setup();
   532  005C  120A  118A  203C  120A  118A  	fcall	_setup
   533                           
   534                           ;mcu2_slain.c: 77:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   535  0061  01F4               	clrf	spiInit@sDataSample
   536  0062  01F5               	clrf	spiInit@sClockIdle
   537  0063  01F6               	clrf	spiInit@sTransmitEdge
   538  0064  3024               	movlw	36
   539  0065  120A  118A  2094  120A  118A  	fcall	_spiInit
   540                           
   541                           ;mcu2_slain.c: 78:     adc_setup();
   542  006A  120A  118A  20AA  120A  118A  	fcall	_adc_setup
   543  006F                     l52:	
   544                           ;mcu2_slain.c: 82:     while(1){
   545                           
   546                           
   547                           ;mcu2_slain.c: 83:         adc_convert();
   548  006F  120A  118A  2078  120A  118A  	fcall	_adc_convert
   549  0074  286F               	goto	l52
   550  0075  120A  118A  280C   	ljmp	start
   551  0078                     __end_of_main:
   552                           
   553                           	psect	text1
   554  0094                     __ptext1:	
   555 ;; *************** function _spiInit *****************
   556 ;; Defined at:
   557 ;;		line 12 in file "spi.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  sType           1    wreg     enum E1264
   560 ;;  sDataSample     1    4[COMMON] enum E1272
   561 ;;  sClockIdle      1    5[COMMON] enum E1276
   562 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  sType           1    7[COMMON] enum E1264
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         3       0       0       0       0
   575 ;;      Locals:         1       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         4       0       0       0       0
   578 ;;Total ram usage:        4 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    3
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _spiInit
   590  0094                     _spiInit:
   591                           
   592                           ;incstack = 0
   593                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   594                           ;spiInit@sType stored from wreg
   595  0094  00F7               	movwf	spiInit@sType
   596  0095                     l779:
   597                           
   598                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   599  0095  1683               	bsf	3,5	;RP0=1, select bank1
   600  0096  1303               	bcf	3,6	;RP1=0, select bank1
   601  0097  1287               	bcf	7,5	;volatile
   602                           
   603                           ;spi.c: 15:     if(sType & 0b00000100)
   604  0098  1D77               	btfss	spiInit@sType,2
   605  0099  289B               	goto	u61
   606  009A  289C               	goto	u60
   607  009B                     u61:
   608  009B  28A0               	goto	l785
   609  009C                     u60:
   610  009C                     l781:
   611                           
   612                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   613  009C  0876               	movf	spiInit@sTransmitEdge,w
   614  009D  0094               	movwf	20	;volatile
   615  009E                     l783:
   616                           
   617                           ;spi.c: 18:         TRISC3 = 1;
   618  009E  1587               	bsf	7,3	;volatile
   619                           
   620                           ;spi.c: 19:     }
   621  009F  28A4               	goto	l95
   622  00A0                     l785:
   623                           
   624                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   625  00A0  0874               	movf	spiInit@sDataSample,w
   626  00A1  0476               	iorwf	spiInit@sTransmitEdge,w
   627  00A2  0094               	movwf	20	;volatile
   628  00A3                     l787:
   629                           
   630                           ;spi.c: 23:         TRISC3 = 0;
   631  00A3  1187               	bcf	7,3	;volatile
   632  00A4                     l95:	
   633                           ;spi.c: 24:     }
   634                           
   635                           
   636                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   637  00A4  0877               	movf	spiInit@sType,w
   638  00A5  0475               	iorwf	spiInit@sClockIdle,w
   639  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   640  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   641  00A8  0094               	movwf	20	;volatile
   642  00A9                     l96:
   643  00A9  0008               	return
   644  00AA                     __end_of_spiInit:
   645                           
   646                           	psect	text2
   647  003C                     __ptext2:	
   648 ;; *************** function _setup *****************
   649 ;; Defined at:
   650 ;;		line 90 in file "mcu2_slain.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    3
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _setup
   680  003C                     _setup:
   681  003C                     l715:	
   682                           ;incstack = 0
   683                           ; Regs used in _setup: [wreg+status,2]
   684                           
   685                           
   686                           ;mcu2_slain.c: 91:     TRISA = 0x21;
   687  003C  3021               	movlw	33
   688  003D  1683               	bsf	3,5	;RP0=1, select bank1
   689  003E  1303               	bcf	3,6	;RP1=0, select bank1
   690  003F  0085               	movwf	5	;volatile
   691  0040                     l717:
   692                           
   693                           ;mcu2_slain.c: 92:     PORTA = 0x00;
   694  0040  1283               	bcf	3,5	;RP0=0, select bank0
   695  0041  1303               	bcf	3,6	;RP1=0, select bank0
   696  0042  0185               	clrf	5	;volatile
   697  0043                     l719:
   698                           
   699                           ;mcu2_slain.c: 93:     TRISB = 0x00;
   700  0043  1683               	bsf	3,5	;RP0=1, select bank1
   701  0044  1303               	bcf	3,6	;RP1=0, select bank1
   702  0045  0186               	clrf	6	;volatile
   703  0046                     l721:
   704                           
   705                           ;mcu2_slain.c: 94:     PORTB = 0x00;
   706  0046  1283               	bcf	3,5	;RP0=0, select bank0
   707  0047  1303               	bcf	3,6	;RP1=0, select bank0
   708  0048  0186               	clrf	6	;volatile
   709  0049                     l723:
   710                           
   711                           ;mcu2_slain.c: 95:     ANSEL = 0x01;
   712  0049  3001               	movlw	1
   713  004A  1683               	bsf	3,5	;RP0=1, select bank3
   714  004B  1703               	bsf	3,6	;RP1=1, select bank3
   715  004C  0088               	movwf	8	;volatile
   716                           
   717                           ;mcu2_slain.c: 96:     ANSELH = 0;
   718  004D  0189               	clrf	9	;volatile
   719  004E                     l725:
   720                           
   721                           ;mcu2_slain.c: 97:     ADCON0 = 0b000000011;
   722  004E  3003               	movlw	3
   723  004F  1283               	bcf	3,5	;RP0=0, select bank0
   724  0050  1303               	bcf	3,6	;RP1=0, select bank0
   725  0051  009F               	movwf	31	;volatile
   726  0052                     l727:
   727                           
   728                           ;mcu2_slain.c: 98:     ADCON1 = 0b000000000;
   729  0052  1683               	bsf	3,5	;RP0=1, select bank1
   730  0053  1303               	bcf	3,6	;RP1=0, select bank1
   731  0054  019F               	clrf	31	;volatile
   732  0055                     l729:
   733                           
   734                           ;mcu2_slain.c: 99:     INTCONbits.GIE = 1;
   735  0055  178B               	bsf	11,7	;volatile
   736  0056                     l731:
   737                           
   738                           ;mcu2_slain.c: 100:     INTCONbits.PEIE = 1;
   739  0056  170B               	bsf	11,6	;volatile
   740  0057                     l733:
   741                           
   742                           ;mcu2_slain.c: 101:     PIE1bits.ADIE = 1;
   743  0057  170C               	bsf	12,6	;volatile
   744  0058                     l735:
   745                           
   746                           ;mcu2_slain.c: 102:     PIR1bits.ADIF = 0;
   747  0058  1283               	bcf	3,5	;RP0=0, select bank0
   748  0059  1303               	bcf	3,6	;RP1=0, select bank0
   749  005A  130C               	bcf	12,6	;volatile
   750  005B                     l58:
   751  005B  0008               	return
   752  005C                     __end_of_setup:
   753                           
   754                           	psect	text3
   755  00AA                     __ptext3:	
   756 ;; *************** function _adc_setup *****************
   757 ;; Defined at:
   758 ;;		line 21 in file "adc_library.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    3
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _adc_setup
   788  00AA                     _adc_setup:
   789  00AA                     l747:	
   790                           ;incstack = 0
   791                           ; Regs used in _adc_setup: [wreg+status,2]
   792                           
   793                           
   794                           ;adc_library.c: 22:     PIE1bits.ADIE = 1;
   795  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   796  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   797  00AC  170C               	bsf	12,6	;volatile
   798                           
   799                           ;adc_library.c: 23:     PIR1bits.ADIF = 0;
   800  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   801  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   802  00AF  130C               	bcf	12,6	;volatile
   803                           
   804                           ;adc_library.c: 24:     INTCONbits.GIE = 1;
   805  00B0  178B               	bsf	11,7	;volatile
   806                           
   807                           ;adc_library.c: 25:     INTCONbits.PEIE = 1;
   808  00B1  170B               	bsf	11,6	;volatile
   809  00B2                     l749:
   810                           
   811                           ;adc_library.c: 26:     ADCON0 = 0b00000011;
   812  00B2  3003               	movlw	3
   813  00B3  009F               	movwf	31	;volatile
   814  00B4                     l751:
   815                           
   816                           ;adc_library.c: 27:     ADCON1 = 0b00000000;
   817  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   818  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   819  00B6  019F               	clrf	31	;volatile
   820  00B7                     l79:
   821  00B7  0008               	return
   822  00B8                     __end_of_adc_setup:
   823                           
   824                           	psect	text4
   825  0078                     __ptext4:	
   826 ;; *************** function _adc_convert *****************
   827 ;; Defined at:
   828 ;;		line 13 in file "adc_library.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          2       0       0       0       0
   845 ;;      Totals:         2       0       0       0       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    3
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _adc_convert
   858  0078                     _adc_convert:
   859  0078                     l753:	
   860                           ;incstack = 0
   861                           ; Regs used in _adc_convert: [wreg]
   862                           
   863                           
   864                           ;adc_library.c: 14:     if(ADCON0bits.GO == 0){
   865  0078  1283               	bcf	3,5	;RP0=0, select bank0
   866  0079  1303               	bcf	3,6	;RP1=0, select bank0
   867  007A  189F               	btfsc	31,1	;volatile
   868  007B  287D               	goto	u31
   869  007C  287E               	goto	u30
   870  007D                     u31:
   871  007D  2893               	goto	l76
   872  007E                     u30:
   873  007E                     l755:
   874                           
   875                           ;adc_library.c: 15:         _delay((unsigned long)((5)*(8000000/4000.0)));
   876  007E  300D               	movlw	13
   877  007F  00F5               	movwf	??_adc_convert+1
   878  0080  30FB               	movlw	251
   879  0081  00F4               	movwf	??_adc_convert
   880  0082                     u77:
   881  0082  0BF4               	decfsz	??_adc_convert,f
   882  0083  2882               	goto	u77
   883  0084  0BF5               	decfsz	??_adc_convert+1,f
   884  0085  2882               	goto	u77
   885  0086  2887               	nop2
   886  0087                     l757:
   887                           
   888                           ;adc_library.c: 16:         ADCON0bits.GO = 1;
   889  0087  1283               	bcf	3,5	;RP0=0, select bank0
   890  0088  1303               	bcf	3,6	;RP1=0, select bank0
   891  0089  149F               	bsf	31,1	;volatile
   892                           
   893                           ;adc_library.c: 17:         _delay((unsigned long)((5)*(8000000/4000.0)));
   894  008A  300D               	movlw	13
   895  008B  00F5               	movwf	??_adc_convert+1
   896  008C  30FB               	movlw	251
   897  008D  00F4               	movwf	??_adc_convert
   898  008E                     u87:
   899  008E  0BF4               	decfsz	??_adc_convert,f
   900  008F  288E               	goto	u87
   901  0090  0BF5               	decfsz	??_adc_convert+1,f
   902  0091  288E               	goto	u87
   903  0092  2893               	nop2
   904  0093                     l76:
   905  0093  0008               	return
   906  0094                     __end_of_adc_convert:
   907                           
   908                           	psect	text5
   909  0015                     __ptext5:	
   910 ;; *************** function _isr *****************
   911 ;; Defined at:
   912 ;;		line 51 in file "mcu2_slain.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          3       0       0       0       0
   929 ;;      Totals:         3       0       0       0       0
   930 ;;Total ram usage:        3 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    2
   933 ;; This function calls:
   934 ;;		_spiRead
   935 ;;		_spiWrite
   936 ;; This function is called by:
   937 ;;		Interrupt level 1
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _isr
   943  0015                     _isr:
   944  0015                     i1l759:
   945                           
   946                           ;mcu2_slain.c: 54:     if(PIR1bits.SSPIF == 1){
   947  0015  1283               	bcf	3,5	;RP0=0, select bank0
   948  0016  1303               	bcf	3,6	;RP1=0, select bank0
   949  0017  1D8C               	btfss	12,3	;volatile
   950  0018  281A               	goto	u4_21
   951  0019  281B               	goto	u4_20
   952  001A                     u4_21:
   953  001A  282A               	goto	i1l765
   954  001B                     u4_20:
   955  001B                     i1l761:
   956                           
   957                           ;mcu2_slain.c: 55:         PIR1bits.SSPIF = 0;
   958  001B  118C               	bcf	12,3	;volatile
   959  001C                     i1l763:
   960                           
   961                           ;mcu2_slain.c: 56:         temp = spiRead();
   962  001C  120A  118A  20B8  120A  118A  	fcall	_spiRead
   963  0021  00F1               	movwf	??_isr
   964  0022  0871               	movf	??_isr,w
   965  0023  00F8               	movwf	_temp
   966                           
   967                           ;mcu2_slain.c: 57:         spiWrite(conv_adc);
   968  0024  0879               	movf	_conv_adc,w
   969  0025  120A  118A  20C8  120A  118A  	fcall	_spiWrite
   970  002A                     i1l765:
   971                           
   972                           ;mcu2_slain.c: 61:     if (PIR1bits.ADIF == 1){
   973  002A  1283               	bcf	3,5	;RP0=0, select bank0
   974  002B  1303               	bcf	3,6	;RP1=0, select bank0
   975  002C  1F0C               	btfss	12,6	;volatile
   976  002D  282F               	goto	u5_21
   977  002E  2830               	goto	u5_20
   978  002F                     u5_21:
   979  002F  2835               	goto	i1l47
   980  0030                     u5_20:
   981  0030                     i1l767:
   982                           
   983                           ;mcu2_slain.c: 62:         conv_adc = ADRESH;
   984  0030  081E               	movf	30,w	;volatile
   985  0031  00F1               	movwf	??_isr
   986  0032  0871               	movf	??_isr,w
   987  0033  00F9               	movwf	_conv_adc
   988  0034                     i1l769:
   989                           
   990                           ;mcu2_slain.c: 63:         PIR1bits.ADIF = 0;
   991  0034  130C               	bcf	12,6	;volatile
   992  0035                     i1l47:
   993  0035  0873               	movf	??_isr+2,w
   994  0036  008A               	movwf	10
   995  0037  0E72               	swapf	??_isr+1,w
   996  0038  0083               	movwf	3
   997  0039  0EFE               	swapf	btemp,f
   998  003A  0E7E               	swapf	btemp,w
   999  003B  0009               	retfie
  1000  003C                     __end_of_isr:
  1001                           
  1002                           	psect	intentry
  1003  0004                     __pintentry:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1006                           
  1007  0004                     interrupt_function:
  1008  007E                     saved_w	set	btemp
  1009  0004  00FE               	movwf	btemp
  1010  0005  0E03               	swapf	3,w
  1011  0006  00F2               	movwf	??_isr+1
  1012  0007  080A               	movf	10,w
  1013  0008  00F3               	movwf	??_isr+2
  1014  0009  120A  118A  2815   	ljmp	_isr
  1015                           
  1016                           	psect	text6
  1017  00C8                     __ptext6:	
  1018 ;; *************** function _spiWrite *****************
  1019 ;; Defined at:
  1020 ;;		line 34 in file "spi.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  dat             1    wreg     unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  dat             1    0[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0
  1037 ;;      Totals:         1       0       0       0       0
  1038 ;;Total ram usage:        1 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_isr
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _spiWrite
  1049  00C8                     _spiWrite:
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _spiWrite: [wreg]
  1053                           ;spiWrite@dat stored from wreg
  1054  00C8  00F0               	movwf	spiWrite@dat
  1055  00C9                     i1l713:
  1056                           
  1057                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
  1058  00C9  0870               	movf	spiWrite@dat,w
  1059  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00CC  0093               	movwf	19	;volatile
  1062  00CD                     i1l105:
  1063  00CD  0008               	return
  1064  00CE                     __end_of_spiWrite:
  1065                           
  1066                           	psect	text7
  1067  00B8                     __ptext7:	
  1068 ;; *************** function _spiRead *****************
  1069 ;; Defined at:
  1070 ;;		line 47 in file "spi.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      unsigned char 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    1
  1091 ;; This function calls:
  1092 ;;		_spiReceiveWait
  1093 ;; This function is called by:
  1094 ;;		_isr
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _spiRead
  1100  00B8                     _spiRead:
  1101  00B8                     i1l707:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1104                           
  1105                           
  1106                           ;spi.c: 49:     spiReceiveWait();
  1107  00B8  120A  118A  20C1  120A  118A  	fcall	_spiReceiveWait
  1108  00BD                     i1l709:
  1109                           
  1110                           ;spi.c: 50:     return(SSPBUF);
  1111  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00BF  0813               	movf	19,w	;volatile
  1114  00C0                     i1l113:
  1115  00C0  0008               	return
  1116  00C1                     __end_of_spiRead:
  1117                           
  1118                           	psect	text8
  1119  00C1                     __ptext8:	
  1120 ;; *************** function _spiReceiveWait *****************
  1121 ;; Defined at:
  1122 ;;		line 29 in file "spi.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		None
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_spiRead
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _spiReceiveWait
  1151  00C1                     _spiReceiveWait:
  1152  00C1                     i1l705:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _spiReceiveWait: []
  1155                           
  1156  00C1                     i1l99:	
  1157                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
  1158                           
  1159  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1160  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1161  00C3  1C14               	btfss	20,0	;volatile
  1162  00C4  28C6               	goto	u1_21
  1163  00C5  28C7               	goto	u1_20
  1164  00C6                     u1_21:
  1165  00C6  28C1               	goto	i1l99
  1166  00C7                     u1_20:
  1167  00C7                     i1l102:
  1168  00C7  0008               	return
  1169  00C8                     __end_of_spiReceiveWait:
  1170  007E                     btemp	set	126	;btemp
  1171  007E                     wtemp0	set	126
  1172                           
  1173                           	psect	config
  1174                           
  1175                           ;Config register CONFIG1 @ 0x2007
  1176                           ;	Oscillator Selection bits
  1177                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1178                           ;	Watchdog Timer Enable bit
  1179                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1180                           ;	Power-up Timer Enable bit
  1181                           ;	PWRTE = OFF, PWRT disabled
  1182                           ;	RE3/MCLR pin function select bit
  1183                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1184                           ;	Code Protection bit
  1185                           ;	CP = OFF, Program memory code protection is disabled
  1186                           ;	Data Code Protection bit
  1187                           ;	CPD = OFF, Data memory code protection is disabled
  1188                           ;	Brown Out Reset Selection bits
  1189                           ;	BOREN = OFF, BOR disabled
  1190                           ;	Internal External Switchover bit
  1191                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1192                           ;	Fail-Safe Clock Monitor Enabled bit
  1193                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1194                           ;	Low Voltage Programming Enable bit
  1195                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1196                           ;	In-Circuit Debugger Mode bit
  1197                           ;	DEBUG = 0x1, unprogrammed default
  1198  2007                     	org	8199
  1199  2007  20D1               	dw	8401
  1200                           
  1201                           ;Config register CONFIG2 @ 0x2008
  1202                           ;	Brown-out Reset Selection bit
  1203                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1204                           ;	Flash Program Memory Self Write Enable bits
  1205                           ;	WRT = OFF, Write protection off
  1206  2008                     	org	8200
  1207  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                        _adc_convert
                          _adc_setup
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_convert                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_convert
   _adc_setup
   _setup
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:15:37 2021

            _SSPSTATbits 0094                       l52 006F                       l58 005B  
                     l76 0093                       l79 00B7                       l95 00A4  
                     l96 00A9                       u30 007E                       u31 007D  
                     u60 009C                       u61 009B                       u77 0082  
                     u87 008E                      l721 0046     __size_of_adc_convert 001C  
                    l731 0056                      l723 0049                      l715 003C  
                    l733 0057                      l725 004E                      l717 0040  
                    l751 00B4                      l735 0058                      l727 0052  
                    l719 0043                      l753 0078                      l729 0055  
                    l755 007E                      l747 00AA                      l757 0087  
                    l749 00B2                      l781 009C                      l783 009E  
                    l785 00A0                      l787 00A3                      l779 0095  
                    l789 005C                      _isr 0015                     ?_isr 0070  
                   i1l47 0035                     i1l99 00C1                     u1_20 00C7  
                   u1_21 00C6                     u4_20 001B                     u4_21 001A  
                   u5_20 0030                     u5_21 002F                     _main 005C  
                   _temp 0078                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l102 00C7                    i1l113 00C0                    i1l105 00CD  
                  i1l705 00C1                    i1l713 00C9                    i1l707 00B8  
                  i1l709 00BD                    i1l761 001B                    i1l763 001C  
                  i1l765 002A                    i1l767 0030                    i1l759 0015  
                  i1l769 0034                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _setup 003C  
                  pclath 000A          __end_of_spiInit 00AA          __end_of_spiRead 00C1  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0078                   ??_main 0078                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00CE                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0011       __size_of_adc_setup 000E           __pcstackCOMMON 0070  
          __end_of_setup 005C                  ??_setup 0074               __pmaintext 005C  
             __pintentry 0004            ??_adc_convert 0074  __size_of_spiReceiveWait 0007  
      __end_of_adc_setup 00B8                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0094                  __ptext2 003C                  __ptext3 00AA  
                __ptext4 0078                  __ptext5 0015                  __ptext6 00C8  
                __ptext7 00B8                  __ptext8 00C1             __size_of_isr 0027  
    __end_of_adc_convert 0094                  _spiInit 0094                  _spiRead 00B8  
   end_of_initialization 0011               ??_spiWrite 0070              spiWrite@dat 0070  
         _spiReceiveWait 00C1              _adc_convert 0078      start_initialization 000F  
            __end_of_isr 003C   __end_of_spiReceiveWait 00C8              __pbssCOMMON 0078  
              ___latbits 0002                _adc_setup 00AA          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
             ?_adc_setup 0070           __size_of_setup 0020     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F             ?_adc_convert 0070  
       __size_of_spiInit 0016         __size_of_spiRead 0009              ??_adc_setup 0074  
               _conv_adc 0079            __size_of_main 001C                 _spiWrite 00C8  
           spiInit@sType 0077        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070  
